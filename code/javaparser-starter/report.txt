Complexité cyclomatique de chaque méthode 
 

========================================
Fichier : ArrayStack.java
========================================

Classe : org.apache.commons.collections4.ArrayStack
public boolean empty() : 1
public E peek() throws EmptyStackException : 2
public E peek(final int n) throws EmptyStackException : 2
public E pop() throws EmptyStackException : 2
public E push(final E item) : 1
public int search(final Object object) : 3

========================================
Fichier : ArrayUtils.java
========================================

Classe : org.apache.commons.collections4.ArrayUtils
 static boolean contains(final Object[] array, final Object objectToFind) : 1
 static int indexOf(final T[] array, final Object objectToFind) : 1
 static int indexOf(final Object[] array, final Object objectToFind, int startIndex) : 8

========================================
Fichier : bag\AbstractBagDecorator.java
========================================

Classe : org.apache.commons.collections4.bag.AbstractBagDecorator
protected Bag<E> decorated() : 1
public boolean equals(final Object object) : 1
public int hashCode() : 1
public int getCount(final Object object) : 1
public boolean add(final E object, final int count) : 1
public boolean remove(final Object object, final int count) : 1
public Set<E> uniqueSet() : 1

========================================
Fichier : bag\AbstractMapBag.java
========================================

Classe : org.apache.commons.collections4.bag.AbstractMapBag
protected Map<E, MutableInteger> getMap() : 1
public int size() : 1
public boolean isEmpty() : 1
public int getCount(final Object object) : 2
public boolean contains(final Object object) : 1
public boolean containsAll(final Collection<?> coll) : 2
 boolean containsAll(final Bag<?> other) : 3
public Iterator<E> iterator() : 1
public boolean add(final E object) : 1
public boolean add(final E object, final int nCopies) : 3
public boolean addAll(final Collection<? extends E> coll) : 2
public void clear() : 1
public boolean remove(final Object object) : 2
public boolean remove(final Object object, final int nCopies) : 4
public boolean removeAll(final Collection<?> coll) : 3
public boolean retainAll(final Collection<?> coll) : 2
 boolean retainAll(final Bag<?> other) : 4
public Object[] toArray() : 3
public T[] toArray(T[] array) : 5
public Set<E> uniqueSet() : 2
protected void doWriteObject(final ObjectOutputStream out) throws IOException : 2
protected void doReadObject(final Map<E, MutableInteger> map, final ObjectInputStream in) throws IOException, ClassNotFoundException : 2
public boolean equals(final Object object) : 6
public int hashCode() : 2
public String toString() : 4

Classe : org.apache.commons.collections4.bag.AbstractMapBag.BagIterator
public boolean hasNext() : 1
public E next() : 3
public void remove() : 4

Classe : org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger
public boolean equals(final Object obj) : 2
public int hashCode() : 1

========================================
Fichier : bag\AbstractSortedBagDecorator.java
========================================

Classe : org.apache.commons.collections4.bag.AbstractSortedBagDecorator
protected SortedBag<E> decorated() : 1
public E first() : 1
public E last() : 1
public Comparator<? super E> comparator() : 1

========================================
Fichier : bag\CollectionBag.java
========================================

Classe : org.apache.commons.collections4.bag.CollectionBag
public static Bag<E> collectionBag(final Bag<E> bag) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public boolean containsAll(final Collection<?> coll) : 1
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 2
public boolean remove(final Object object) : 1
public boolean removeAll(final Collection<?> coll) : 3
public boolean retainAll(final Collection<?> coll) : 4
public boolean add(final E object, final int count) : 1

========================================
Fichier : bag\CollectionSortedBag.java
========================================

Classe : org.apache.commons.collections4.bag.CollectionSortedBag
public static SortedBag<E> collectionSortedBag(final SortedBag<E> bag) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public boolean containsAll(final Collection<?> coll) : 1
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 2
public boolean remove(final Object object) : 1
public boolean removeAll(final Collection<?> coll) : 3
public boolean retainAll(final Collection<?> coll) : 4
public boolean add(final E object, final int count) : 1

========================================
Fichier : bag\HashBag.java
========================================

Classe : org.apache.commons.collections4.bag.HashBag
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : bag\package-info.java
========================================

========================================
Fichier : bag\PredicatedBag.java
========================================

Classe : org.apache.commons.collections4.bag.PredicatedBag
public static PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate) : 1
protected Bag<E> decorated() : 1
public boolean equals(final Object object) : 1
public int hashCode() : 1
public boolean add(final E object, final int count) : 1
public boolean remove(final Object object, final int count) : 1
public Set<E> uniqueSet() : 1
public int getCount(final Object object) : 1

========================================
Fichier : bag\PredicatedSortedBag.java
========================================

Classe : org.apache.commons.collections4.bag.PredicatedSortedBag
public static PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate) : 1
protected SortedBag<E> decorated() : 1
public E first() : 1
public E last() : 1
public Comparator<? super E> comparator() : 1

========================================
Fichier : bag\SynchronizedBag.java
========================================

Classe : org.apache.commons.collections4.bag.SynchronizedBag
public static SynchronizedBag<E> synchronizedBag(final Bag<E> bag) : 1
protected Bag<E> getBag() : 1
public boolean equals(final Object object) : 2
public int hashCode() : 1
public boolean add(final E object, final int count) : 1
public boolean remove(final Object object, final int count) : 1
public Set<E> uniqueSet() : 1
public int getCount(final Object object) : 1

Classe : org.apache.commons.collections4.bag.SynchronizedBag.SynchronizedBagSet

========================================
Fichier : bag\SynchronizedSortedBag.java
========================================

Classe : org.apache.commons.collections4.bag.SynchronizedSortedBag
public static SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag) : 1
protected SortedBag<E> getSortedBag() : 1
public synchronized E first() : 1
public synchronized E last() : 1
public synchronized Comparator<? super E> comparator() : 1

========================================
Fichier : bag\TransformedBag.java
========================================

Classe : org.apache.commons.collections4.bag.TransformedBag
public static Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer) : 1
public static Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer) : 3
protected Bag<E> getBag() : 1
public boolean equals(final Object object) : 1
public int hashCode() : 1
public int getCount(final Object object) : 1
public boolean remove(final Object object, final int nCopies) : 1
public boolean add(final E object, final int nCopies) : 1
public Set<E> uniqueSet() : 1

========================================
Fichier : bag\TransformedSortedBag.java
========================================

Classe : org.apache.commons.collections4.bag.TransformedSortedBag
public static TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer) : 1
public static TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer) : 3
protected SortedBag<E> getSortedBag() : 1
public E first() : 1
public E last() : 1
public Comparator<? super E> comparator() : 1

========================================
Fichier : bag\TreeBag.java
========================================

Classe : org.apache.commons.collections4.bag.TreeBag
public boolean add(final E object) : 2
public E first() : 1
public E last() : 1
public Comparator<? super E> comparator() : 1
protected SortedMap<E, AbstractMapBag.MutableInteger> getMap() : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : bag\UnmodifiableBag.java
========================================

Classe : org.apache.commons.collections4.bag.UnmodifiableBag
public static Bag<E> unmodifiableBag(final Bag<? extends E> bag) : 2
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public Iterator<E> iterator() : 1
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public void clear() : 1
public boolean remove(final Object object) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1
public boolean add(final E object, final int count) : 1
public boolean remove(final Object object, final int count) : 1
public Set<E> uniqueSet() : 1

========================================
Fichier : bag\UnmodifiableSortedBag.java
========================================

Classe : org.apache.commons.collections4.bag.UnmodifiableSortedBag
public static SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag) : 2
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public Iterator<E> iterator() : 1
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public void clear() : 1
public boolean remove(final Object object) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1
public boolean add(final E object, final int count) : 1
public boolean remove(final Object object, final int count) : 1
public Set<E> uniqueSet() : 1

========================================
Fichier : Bag.java
========================================

Classe : org.apache.commons.collections4.Bag
 int getCount(Object object) : 1
 boolean add(E object) : 1
 boolean add(E object, int nCopies) : 1
 boolean remove(Object object) : 1
 boolean remove(Object object, int nCopies) : 1
 Set<E> uniqueSet() : 1
 int size() : 1
 boolean containsAll(Collection<?> coll) : 1
 boolean removeAll(Collection<?> coll) : 1
 boolean retainAll(Collection<?> coll) : 1
 Iterator<E> iterator() : 1

========================================
Fichier : BagUtils.java
========================================

Classe : org.apache.commons.collections4.BagUtils
public static Bag<E> synchronizedBag(final Bag<E> bag) : 1
public static Bag<E> unmodifiableBag(final Bag<? extends E> bag) : 1
public static Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate) : 1
public static Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer) : 1
public static Bag<E> collectionBag(final Bag<E> bag) : 1
public static SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag) : 1
public static SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag) : 1
public static SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate) : 1
public static SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer) : 1
public static Bag<E> emptyBag() : 1
public static SortedBag<E> emptySortedBag() : 1

========================================
Fichier : bidimap\AbstractBidiMapDecorator.java
========================================

Classe : org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator
protected BidiMap<K, V> decorated() : 1
public MapIterator<K, V> mapIterator() : 1
public K getKey(final Object value) : 1
public K removeValue(final Object value) : 1
public BidiMap<V, K> inverseBidiMap() : 1
public Set<V> values() : 1

========================================
Fichier : bidimap\AbstractDualBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap
protected abstract BidiMap<V, K> createBidiMap(Map<V, K> normalMap, Map<K, V> reverseMap, BidiMap<K, V> inverseMap) : 1
public V get(final Object key) : 1
public int size() : 1
public boolean isEmpty() : 1
public boolean containsKey(final Object key) : 1
public boolean equals(final Object obj) : 1
public int hashCode() : 1
public String toString() : 1
public V put(final K key, final V value) : 3
public void putAll(final Map<? extends K, ? extends V> map) : 2
public V remove(final Object key) : 2
public void clear() : 1
public boolean containsValue(final Object value) : 1
public MapIterator<K, V> mapIterator() : 1
public K getKey(final Object value) : 1
public K removeValue(final Object value) : 2
public BidiMap<V, K> inverseBidiMap() : 2
public Set<K> keySet() : 2
protected Iterator<K> createKeySetIterator(final Iterator<K> iterator) : 1
public Set<V> values() : 2
protected Iterator<V> createValuesIterator(final Iterator<V> iterator) : 1
public Set<Map.Entry<K, V>> entrySet() : 2
protected Iterator<Map.Entry<K, V>> createEntrySetIterator(final Iterator<Map.Entry<K, V>> iterator) : 1

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.View
public boolean equals(final Object object) : 1
public int hashCode() : 1
public boolean removeIf(final Predicate<? super E> filter) : 4
public boolean removeAll(final Collection<?> coll) : 3
public boolean retainAll(final Collection<?> coll) : 5
public void clear() : 1

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet
public Iterator<K> iterator() : 1
public boolean contains(final Object key) : 1
public boolean remove(final Object key) : 2

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator
public K next() : 1
public void remove() : 2

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values
public Iterator<V> iterator() : 1
public boolean contains(final Object value) : 1
public boolean remove(final Object value) : 2

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.ValuesIterator
public V next() : 1
public void remove() : 2

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet
public Iterator<Map.Entry<K, V>> iterator() : 1
public boolean remove(final Object obj) : 4

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySetIterator
public Map.Entry<K, V> next() : 1
public void remove() : 2

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.MapEntry
public V setValue(final V value) : 2

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator
public boolean hasNext() : 1
public K next() : 1
public void remove() : 2
public K getKey() : 2
public V getValue() : 2
public V setValue(final V value) : 3
public void reset() : 1
public String toString() : 2

========================================
Fichier : bidimap\AbstractOrderedBidiMapDecorator.java
========================================

Classe : org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator
protected OrderedBidiMap<K, V> decorated() : 1
public OrderedMapIterator<K, V> mapIterator() : 1
public K firstKey() : 1
public K lastKey() : 1
public K nextKey(final K key) : 1
public K previousKey(final K key) : 1
public OrderedBidiMap<V, K> inverseBidiMap() : 1

========================================
Fichier : bidimap\AbstractSortedBidiMapDecorator.java
========================================

Classe : org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator
protected SortedBidiMap<K, V> decorated() : 1
public SortedBidiMap<V, K> inverseBidiMap() : 1
public Comparator<? super K> comparator() : 1
public Comparator<? super V> valueComparator() : 1
public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
public SortedMap<K, V> headMap(final K toKey) : 1
public SortedMap<K, V> tailMap(final K fromKey) : 1

========================================
Fichier : bidimap\DualHashBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.DualHashBidiMap
protected BidiMap<V, K> createBidiMap(final Map<V, K> normalMap, final Map<K, V> reverseMap, final BidiMap<K, V> inverseBidiMap) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : bidimap\DualLinkedHashBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap
protected BidiMap<V, K> createBidiMap(final Map<V, K> normalMap, final Map<K, V> reverseMap, final BidiMap<K, V> inverseBidiMap) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : bidimap\DualTreeBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.DualTreeBidiMap
protected DualTreeBidiMap<V, K> createBidiMap(final Map<V, K> normalMap, final Map<K, V> reverseMap, final BidiMap<K, V> inverseMap) : 1
public Comparator<? super K> comparator() : 1
public Comparator<? super V> valueComparator() : 1
public K firstKey() : 1
public K lastKey() : 1
public K nextKey(final K key) : 4
public K previousKey(final K key) : 4
public OrderedMapIterator<K, V> mapIterator() : 1
public SortedBidiMap<V, K> inverseSortedBidiMap() : 1
public OrderedBidiMap<V, K> inverseOrderedBidiMap() : 1
public SortedMap<K, V> headMap(final K toKey) : 1
public SortedMap<K, V> tailMap(final K fromKey) : 1
public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
public SortedBidiMap<V, K> inverseBidiMap() : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

Classe : org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap
public boolean containsValue(final Object value) : 1
public void clear() : 2
public SortedMap<K, V> headMap(final K toKey) : 1
public SortedMap<K, V> tailMap(final K fromKey) : 1
public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
protected DualTreeBidiMap<K, V> decorated() : 1
public K previousKey(final K key) : 1
public K nextKey(final K key) : 1

Classe : org.apache.commons.collections4.bidimap.DualTreeBidiMap.BidiOrderedMapIterator
public boolean hasNext() : 1
public K next() : 1
public boolean hasPrevious() : 1
public K previous() : 1
public void remove() : 1
public K getKey() : 2
public V getValue() : 2
public V setValue(final V value) : 3
public void reset() : 1
public String toString() : 2

========================================
Fichier : bidimap\package-info.java
========================================

========================================
Fichier : bidimap\TreeBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap
public int size() : 1
public boolean isEmpty() : 1
public boolean containsKey(final Object key) : 1
public boolean containsValue(final Object value) : 1
public V get(final Object key) : 1
public V put(final K key, final V value) : 1
public void putAll(final Map<? extends K, ? extends V> map) : 2
public V remove(final Object key) : 1
public void clear() : 1
public K getKey(final Object value) : 1
public K removeValue(final Object value) : 1
public K firstKey() : 2
public K lastKey() : 2
public K nextKey(final K key) : 1
public K previousKey(final K key) : 1
public Set<K> keySet() : 2
public Set<V> values() : 2
public Set<Map.Entry<K, V>> entrySet() : 2
public OrderedMapIterator<K, V> mapIterator() : 2
public OrderedBidiMap<V, K> inverseBidiMap() : 2
public boolean equals(final Object obj) : 1
public int hashCode() : 1
public String toString() : 1
private void doPut(final K key, final V value) : 7
private V doRemoveKey(final Object key) : 2
private K doRemoveValue(final Object value) : 2
private Node<K, V> lookup(final Object data, final DataElement dataElement) : 3
private Node<K, V> lookupKey(final Object key) : 1
private Node<K, V> lookupValue(final Object value) : 1
private Node<K, V> nextGreater(final Node<K, V> node, final DataElement dataElement) : 2
private Node<K, V> nextSmaller(final Node<K, V> node, final DataElement dataElement) : 2
private static int compare(final T o1, final T o2) : 1
private Node<K, V> leastNode(final Node<K, V> node, final DataElement dataElement) : 3
private Node<K, V> greatestNode(final Node<K, V> node, final DataElement dataElement) : 3
private void copyColor(final Node<K, V> from, final Node<K, V> to, final DataElement dataElement) : 3
private static boolean isRed(final Node<?, ?> node, final DataElement dataElement) : 1
private static boolean isBlack(final Node<?, ?> node, final DataElement dataElement) : 1
private static void makeRed(final Node<?, ?> node, final DataElement dataElement) : 2
private static void makeBlack(final Node<?, ?> node, final DataElement dataElement) : 2
private Node<K, V> getGrandParent(final Node<K, V> node, final DataElement dataElement) : 1
private Node<K, V> getParent(final Node<K, V> node, final DataElement dataElement) : 1
private Node<K, V> getRightChild(final Node<K, V> node, final DataElement dataElement) : 1
private Node<K, V> getLeftChild(final Node<K, V> node, final DataElement dataElement) : 1
private void rotateLeft(final Node<K, V> node, final DataElement dataElement) : 3
private void rotateRight(final Node<K, V> node, final DataElement dataElement) : 3
private void doRedBlackInsert(final Node<K, V> insertedNode, final DataElement dataElement) : 9
private void doRedBlackDelete(final Node<K, V> deletedNode) : 10
private void doRedBlackDeleteFixup(final Node<K, V> replacementNode, final DataElement dataElement) : 9
private void swapPosition(final Node<K, V> x, final Node<K, V> y, final DataElement dataElement) : 14
private static void checkNonNullComparable(final Object obj, final DataElement dataElement) : 2
private static void checkKey(final Object key) : 1
private static void checkValue(final Object value) : 1
private static void checkKeyAndValue(final Object key, final Object value) : 1
private void modify() : 1
private void grow() : 1
private void shrink() : 1
private void insertValue(final Node<K, V> newNode) throws IllegalArgumentException : 6
private boolean doEquals(final Object obj, final DataElement dataElement) : 5
private int doHashCode(final DataElement dataElement) : 3
private String doToString(final DataElement dataElement) : 4
private MapIterator<?, ?> getMapIterator(final DataElement dataElement) : 1
private void readObject(final ObjectInputStream stream) throws IOException, ClassNotFoundException : 2
private void writeObject(final ObjectOutputStream stream) throws IOException : 2

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.AbstractView
public int size() : 1
public void clear() : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView
public Iterator<K> iterator() : 1
public boolean contains(final Object obj) : 1
public boolean remove(final Object o) : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView
public Iterator<V> iterator() : 1
public boolean contains(final Object obj) : 1
public boolean remove(final Object o) : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView
public boolean contains(final Object obj) : 2
public boolean remove(final Object obj) : 3
public Iterator<Map.Entry<K, V>> iterator() : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView
public boolean contains(final Object obj) : 2
public boolean remove(final Object obj) : 3
public Iterator<Map.Entry<V, K>> iterator() : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.AbstractViewIterator
public final boolean hasNext() : 1
protected Node<K, V> navigateNext() : 3
public boolean hasPrevious() : 1
protected Node<K, V> navigatePrevious() : 4
public final void remove() : 4

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator
public K getKey() : 2
public V getValue() : 2
public V setValue(final V obj) : 1
public K next() : 1
public K previous() : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator
public V getKey() : 2
public K getValue() : 2
public K setValue(final K obj) : 1
public V next() : 1
public V previous() : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapEntryIterator
public Map.Entry<K, V> next() : 1
public Map.Entry<K, V> previous() : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapEntryIterator
public Map.Entry<V, K> next() : 1
public Map.Entry<V, K> previous() : 1
private Map.Entry<V, K> createEntry(final Node<K, V> node) : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.Node
private Object getData(final DataElement dataElement) : 1
private void setLeft(final Node<K, V> node, final DataElement dataElement) : 1
private Node<K, V> getLeft(final DataElement dataElement) : 1
private void setRight(final Node<K, V> node, final DataElement dataElement) : 1
private Node<K, V> getRight(final DataElement dataElement) : 1
private void setParent(final Node<K, V> node, final DataElement dataElement) : 1
private Node<K, V> getParent(final DataElement dataElement) : 1
private void swapColors(final Node<K, V> node, final DataElement dataElement) : 1
private boolean isBlack(final DataElement dataElement) : 1
private boolean isRed(final DataElement dataElement) : 1
private void setBlack(final DataElement dataElement) : 1
private void setRed(final DataElement dataElement) : 1
private void copyColor(final Node<K, V> node, final DataElement dataElement) : 1
private boolean isLeftChild(final DataElement dataElement) : 1
private boolean isRightChild(final DataElement dataElement) : 1
public K getKey() : 1
public V getValue() : 1
public V setValue(final V ignored) throws UnsupportedOperationException : 1
public boolean equals(final Object obj) : 3
public int hashCode() : 2

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse
public int size() : 1
public boolean isEmpty() : 1
public K get(final Object key) : 1
public V getKey(final Object value) : 1
public boolean containsKey(final Object key) : 1
public boolean containsValue(final Object value) : 1
public V firstKey() : 2
public V lastKey() : 2
public V nextKey(final V key) : 1
public V previousKey(final V key) : 1
public K put(final V key, final K value) : 1
public void putAll(final Map<? extends V, ? extends K> map) : 2
public K remove(final Object key) : 1
public V removeValue(final Object value) : 1
public void clear() : 1
public Set<V> keySet() : 2
public Set<K> values() : 2
public Set<Map.Entry<V, K>> entrySet() : 2
public OrderedMapIterator<V, K> mapIterator() : 2
public OrderedBidiMap<K, V> inverseBidiMap() : 1
public boolean equals(final Object obj) : 1
public int hashCode() : 1
public String toString() : 1

========================================
Fichier : bidimap\UnmodifiableBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.UnmodifiableBidiMap
public static BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map) : 2
public void clear() : 1
public V put(final K key, final V value) : 1
public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
public V remove(final Object key) : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public Set<K> keySet() : 1
public Set<V> values() : 1
public K removeValue(final Object value) : 1
public MapIterator<K, V> mapIterator() : 1
public synchronized BidiMap<V, K> inverseBidiMap() : 2

========================================
Fichier : bidimap\UnmodifiableOrderedBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap
public static OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map) : 2
public void clear() : 1
public V put(final K key, final V value) : 1
public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
public V remove(final Object key) : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public Set<K> keySet() : 1
public Set<V> values() : 1
public K removeValue(final Object value) : 1
public OrderedBidiMap<V, K> inverseBidiMap() : 1
public OrderedMapIterator<K, V> mapIterator() : 1
public OrderedBidiMap<V, K> inverseOrderedBidiMap() : 2

========================================
Fichier : bidimap\UnmodifiableSortedBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap
public static SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map) : 2
public void clear() : 1
public V put(final K key, final V value) : 1
public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
public V remove(final Object key) : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public Set<K> keySet() : 1
public Set<V> values() : 1
public K removeValue(final Object value) : 1
public OrderedMapIterator<K, V> mapIterator() : 1
public SortedBidiMap<V, K> inverseBidiMap() : 2
public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
public SortedMap<K, V> headMap(final K toKey) : 1
public SortedMap<K, V> tailMap(final K fromKey) : 1

========================================
Fichier : BidiMap.java
========================================

Classe : org.apache.commons.collections4.BidiMap
 V put(K key, V value) : 1
 K getKey(Object value) : 1
 K removeValue(Object value) : 1
 BidiMap<V, K> inverseBidiMap() : 1
 Set<V> values() : 1

========================================
Fichier : bloomfilter\ArrayCountingBloomFilter.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.ArrayCountingBloomFilter
public void clear() : 1
public int getMaxCell() : 1
public ArrayCountingBloomFilter copy() : 1
public int characteristics() : 1
public int cardinality() : 1
public boolean add(final CellProducer other) : 1
public boolean subtract(final CellProducer other) : 1
public boolean isValid() : 1
public boolean forEachCell(final CellProducer.CellConsumer consumer) : 3
public boolean forEachIndex(final IntPredicate consumer) : 3
public boolean forEachBitMap(final LongPredicate consumer) : 7
private boolean add(final int idx, final int addend) : 1
private boolean subtract(final int idx, final int subtrahend) : 1
public Shape getShape() : 1
public boolean contains(final IndexProducer indexProducer) : 1
public boolean contains(final BitMapProducer bitMapProducer) : 1
public int[] asIndexArray() : 1
public int getMaxInsert(final CellProducer cellProducer) : 1

========================================
Fichier : bloomfilter\BitMap.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.BitMap
public static int numberOfBitMaps(final int numberOfBits) : 1
public static boolean contains(final long[] bitMaps, final int bitIndex) : 1
public static void set(final long[] bitMaps, final int bitIndex) : 1
public static int getLongIndex(final int bitIndex) : 1
public static long getLongBit(final int bitIndex) : 1
public static int mod(final long dividend, final int divisor) : 1

========================================
Fichier : bloomfilter\BitMapProducer.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.BitMapProducer
 boolean forEachBitMap(LongPredicate predicate) : 1
 boolean forEachBitMapPair(final BitMapProducer other, final LongBiPredicate func) : 1
 long[] asBitMapArray() : 1
 static BitMapProducer fromBitMapArray(final long... bitMaps) : 1
 static BitMapProducer fromIndexProducer(final IndexProducer producer, final int numberOfBits) : 1

========================================
Fichier : bloomfilter\BloomFilter.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.BloomFilter
 BloomFilter copy() : 1
 int characteristics() : 1
 Shape getShape() : 1
 void clear() : 1
 boolean contains(final BloomFilter other) : 1
 boolean contains(final Hasher hasher) : 1
 boolean contains(IndexProducer indexProducer) : 1
 boolean contains(final BitMapProducer bitMapProducer) : 1
 boolean merge(final BloomFilter other) : 1
 boolean merge(final Hasher hasher) : 1
 boolean merge(IndexProducer indexProducer) : 1
 boolean merge(BitMapProducer bitMapProducer) : 1
 boolean isFull() : 1
 int cardinality() : 1
 int estimateN() : 3
 int estimateUnion(final BloomFilter other) : 1
 int estimateIntersection(final BloomFilter other) : 3
 IndexProducer uniqueIndices() : 1

========================================
Fichier : bloomfilter\CellProducer.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.CellProducer
 boolean forEachCell(CellConsumer consumer) : 1
 boolean forEachIndex(final IntPredicate predicate) : 1
 static CellProducer from(final IndexProducer producer) : 1

Classe : org.apache.commons.collections4.bloomfilter.CellProducer.CellConsumer
 boolean test(int index, int count) : 1

========================================
Fichier : bloomfilter\CountingBloomFilter.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.CountingBloomFilter
 boolean isValid() : 1
 int getMaxCell() : 1
 int getMaxInsert(final BloomFilter bloomFilter) : 1
 int getMaxInsert(final IndexProducer idxProducer) : 1
 int getMaxInsert(CellProducer cellProducer) : 1
 int getMaxInsert(final Hasher hasher) : 1
 int getMaxInsert(final BitMapProducer bitMapProducer) : 2
 boolean merge(final BloomFilter other) : 1
 boolean merge(final Hasher hasher) : 1
 boolean merge(final IndexProducer indexProducer) : 1
 boolean merge(final BitMapProducer bitMapProducer) : 1
 boolean remove(final BloomFilter other) : 1
 boolean remove(final Hasher hasher) : 1
 boolean remove(final IndexProducer indexProducer) : 1
 boolean remove(final BitMapProducer bitMapProducer) : 1
 boolean add(CellProducer other) : 1
 boolean subtract(CellProducer other) : 1
 CountingBloomFilter copy() : 1
 IndexProducer uniqueIndices() : 1

========================================
Fichier : bloomfilter\CountingLongPredicate.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.CountingLongPredicate
public boolean test(final long other) : 1
 boolean forEachRemaining() : 2

========================================
Fichier : bloomfilter\EnhancedDoubleHasher.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.EnhancedDoubleHasher
private static long toLong(final byte[] byteArray, final int offset, final int len) : 2
 long getInitial() : 1
 long getIncrement() : 1
public IndexProducer indices(final Shape shape) : 1

========================================
Fichier : bloomfilter\Hasher.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.Hasher
 IndexProducer indices(Shape shape) : 1

========================================
Fichier : bloomfilter\IndexFilter.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.IndexFilter
public static IntPredicate create(final Shape shape, final IntPredicate consumer) : 1
public boolean test(final int number) : 3

Classe : org.apache.commons.collections4.bloomfilter.IndexFilter.ArrayTracker
public boolean test(final int number) : 4

Classe : org.apache.commons.collections4.bloomfilter.IndexFilter.BitMapTracker
public boolean test(final int number) : 1

========================================
Fichier : bloomfilter\IndexProducer.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.IndexProducer
 boolean forEachIndex(IntPredicate predicate) : 1
 static IndexProducer fromIndexArray(final int... values) : 1
 static IndexProducer fromBitMapProducer(final BitMapProducer producer) : 1
 int[] asIndexArray() : 1
 IndexProducer uniqueIndices() : 1

========================================
Fichier : bloomfilter\IndexUtils.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.IndexUtils
 static int[] ensureCapacityForAdd(final int[] array, final int index) : 2

========================================
Fichier : bloomfilter\LongBiPredicate.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.LongBiPredicate
 boolean test(long x, long y) : 1

========================================
Fichier : bloomfilter\package-info.java
========================================

========================================
Fichier : bloomfilter\SetOperations.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.SetOperations
private static int cardinality(final BitMapProducer first, final BitMapProducer second, final LongBinaryOperator op) : 1
public static int cardinality(final BitMapProducer producer) : 1
public static int andCardinality(final BitMapProducer first, final BitMapProducer second) : 1
public static int orCardinality(final BitMapProducer first, final BitMapProducer second) : 1
public static int xorCardinality(final BitMapProducer first, final BitMapProducer second) : 1
public static double cosineDistance(final BitMapProducer first, final BitMapProducer second) : 1
public static double cosineSimilarity(final BitMapProducer first, final BitMapProducer second) : 1
public static double cosineSimilarity(final BloomFilter first, final BloomFilter second) : 1
public static int hammingDistance(final BitMapProducer first, final BitMapProducer second) : 1
public static double jaccardDistance(final BitMapProducer first, final BitMapProducer second) : 1
public static double jaccardSimilarity(final BitMapProducer first, final BitMapProducer second) : 1

========================================
Fichier : bloomfilter\Shape.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.Shape
public boolean equals(final Object obj) : 2
public int hashCode() : 1
public int getNumberOfBits() : 1
public int getNumberOfHashFunctions() : 1
public double getProbability(final int numberOfItems) : 3
public String toString() : 1
public boolean isSparse(final int cardinality) : 1
public double estimateN(final int cardinality) : 1
public static Shape fromPMK(final double probability, final int numberOfBits, final int numberOfHashFunctions) : 1
public static Shape fromNP(final int numberOfItems, final double probability) : 2
public static Shape fromKM(final int numberOfHashFunctions, final int numberOfBits) : 1
public static Shape fromNM(final int numberOfItems, final int numberOfBits) : 1
public static Shape fromNMK(final int numberOfItems, final int numberOfBits, final int numberOfHashFunctions) : 1
private static int checkNumberOfItems(final int numberOfItems) : 2
private static int checkNumberOfBits(final int numberOfBits) : 2
private static int checkNumberOfHashFunctions(final int numberOfHashFunctions) : 2
private static void checkProbability(final double probability) : 2
private static void checkCalculatedProbability(final double probability) : 2
private static int calculateNumberOfHashFunctions(final int numberOfItems, final int numberOfBits) : 2

========================================
Fichier : bloomfilter\SimpleBloomFilter.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.SimpleBloomFilter
public void clear() : 1
public long[] asBitMapArray() : 1
public boolean forEachBitMapPair(final BitMapProducer other, final LongBiPredicate func) : 1
public SimpleBloomFilter copy() : 1
public boolean merge(final IndexProducer indexProducer) : 1
public boolean merge(final BitMapProducer bitMapProducer) : 1
public boolean merge(final Hasher hasher) : 1
public boolean merge(final BloomFilter other) : 2
public Shape getShape() : 1
public int characteristics() : 1
public int cardinality() : 2
public boolean forEachIndex(final IntPredicate consumer) : 1
public boolean forEachBitMap(final LongPredicate consumer) : 3
public boolean contains(final IndexProducer indexProducer) : 1

========================================
Fichier : bloomfilter\SparseBloomFilter.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.SparseBloomFilter
public long[] asBitMapArray() : 2
public SparseBloomFilter copy() : 1
private boolean add(final int idx) : 1
public boolean merge(final IndexProducer indexProducer) : 4
public boolean merge(final BitMapProducer bitMapProducer) : 1
public boolean merge(final Hasher hasher) : 1
public boolean merge(final BloomFilter other) : 1
public void clear() : 1
public Shape getShape() : 1
public int characteristics() : 1
public int cardinality() : 1
public boolean forEachIndex(final IntPredicate consumer) : 3
public boolean forEachBitMap(final LongPredicate consumer) : 7
public boolean contains(final IndexProducer indexProducer) : 1
public boolean contains(final BitMapProducer bitMapProducer) : 1

========================================
Fichier : BoundedCollection.java
========================================

Classe : org.apache.commons.collections4.BoundedCollection
 boolean isFull() : 1
 int maxSize() : 1

========================================
Fichier : BoundedMap.java
========================================

Classe : org.apache.commons.collections4.BoundedMap
 boolean isFull() : 1
 int maxSize() : 1

========================================
Fichier : Closure.java
========================================

Classe : org.apache.commons.collections4.Closure
 void execute(T input) : 1

========================================
Fichier : ClosureUtils.java
========================================

Classe : org.apache.commons.collections4.ClosureUtils
public static Closure<E> exceptionClosure() : 1
public static Closure<E> nopClosure() : 1
public static Closure<E> asClosure(final Transformer<? super E, ?> transformer) : 1
public static Closure<E> forClosure(final int count, final Closure<? super E> closure) : 1
public static Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure) : 1
public static Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate) : 1
public static Closure<E> invokerClosure(final String methodName) : 1
public static Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args) : 1
public static Closure<E> chainedClosure(final Closure<? super E>... closures) : 1
public static Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures) : 1
public static Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure) : 1
public static Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure) : 1
public static Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures) : 1
public static Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure) : 1
public static Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures) : 1
public static Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures) : 2

========================================
Fichier : collection\AbstractCollectionDecorator.java
========================================

Classe : org.apache.commons.collections4.collection.AbstractCollectionDecorator
protected Collection<E> decorated() : 1
protected void setCollection(final Collection<E> coll) : 1
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public void clear() : 1
public boolean contains(final Object object) : 1
public boolean isEmpty() : 1
public Iterator<E> iterator() : 1
public boolean remove(final Object object) : 1
public int size() : 1
public Object[] toArray() : 1
public T[] toArray(final T[] object) : 1
public boolean containsAll(final Collection<?> coll) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1
public String toString() : 1

========================================
Fichier : collection\CompositeCollection.java
========================================

Classe : org.apache.commons.collections4.collection.CompositeCollection
public int size() : 2
public boolean isEmpty() : 3
public boolean contains(final Object obj) : 3
public Iterator<E> iterator() : 2
public Object[] toArray() : 2
public T[] toArray(final T[] array) : 5
public boolean add(final E obj) : 2
public boolean remove(final Object obj) : 2
public boolean containsAll(final Collection<?> coll) : 4
public boolean addAll(final Collection<? extends E> coll) : 2
public boolean removeAll(final Collection<?> coll) : 3
public boolean removeIf(final Predicate<? super E> filter) : 3
public boolean retainAll(final Collection<?> coll) : 3
public void clear() : 2
public void setMutator(final CollectionMutator<E> mutator) : 1
public void addComposited(final Collection<E> compositeCollection) : 2
public void addComposited(final Collection<E> compositeCollection1, final Collection<E> compositeCollection2) : 3
public void addComposited(final Collection<E>... compositeCollections) : 3
public void removeComposited(final Collection<E> coll) : 1
public Collection<E> toCollection() : 1
public List<Collection<E>> getCollections() : 1
protected CollectionMutator<E> getMutator() : 1

Classe : org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator
 boolean add(CompositeCollection<E> composite, List<Collection<E>> collections, E obj) : 1
 boolean addAll(CompositeCollection<E> composite, List<Collection<E>> collections, Collection<? extends E> coll) : 1
 boolean remove(CompositeCollection<E> composite, List<Collection<E>> collections, Object obj) : 1

========================================
Fichier : collection\IndexedCollection.java
========================================

Classe : org.apache.commons.collections4.collection.IndexedCollection
public static IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer) : 1
public static IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer) : 1
public boolean add(final C object) : 2
public boolean addAll(final Collection<? extends C> coll) : 2
public void clear() : 1
public boolean contains(final Object object) : 1
public boolean containsAll(final Collection<?> coll) : 3
public C get(final K key) : 1
public Collection<C> values(final K key) : 1
public void reindex() : 2
public boolean remove(final Object object) : 2
public boolean removeIf(final Predicate<? super C> filter) : 5
public boolean removeAll(final Collection<?> coll) : 2
public boolean retainAll(final Collection<?> coll) : 2
private void addToIndex(final C object) : 2
private void removeFromIndex(final C object) : 1

========================================
Fichier : collection\package-info.java
========================================

========================================
Fichier : collection\PredicatedCollection.java
========================================

Classe : org.apache.commons.collections4.collection.PredicatedCollection
public static Builder<E> builder(final Predicate<? super E> predicate) : 1
public static Builder<E> notNullBuilder() : 1
public static PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate) : 1
protected void validate(final E object) : 2
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 2

Classe : org.apache.commons.collections4.collection.PredicatedCollection.Builder
public Builder<E> add(final E item) : 2
public Builder<E> addAll(final Collection<? extends E> items) : 3
public List<E> createPredicatedList() : 1
public List<E> createPredicatedList(final List<E> list) : 1
public Set<E> createPredicatedSet() : 1
public Set<E> createPredicatedSet(final Set<E> set) : 1
public MultiSet<E> createPredicatedMultiSet() : 1
public MultiSet<E> createPredicatedMultiSet(final MultiSet<E> multiset) : 1
public Bag<E> createPredicatedBag() : 1
public Bag<E> createPredicatedBag(final Bag<E> bag) : 1
public Queue<E> createPredicatedQueue() : 1
public Queue<E> createPredicatedQueue(final Queue<E> queue) : 1
public Collection<E> rejectedElements() : 1

========================================
Fichier : collection\SynchronizedCollection.java
========================================

Classe : org.apache.commons.collections4.collection.SynchronizedCollection
public static SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll) : 1
protected Collection<E> decorated() : 1
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public void clear() : 1
public boolean contains(final Object object) : 1
public boolean containsAll(final Collection<?> coll) : 1
public boolean isEmpty() : 1
public Iterator<E> iterator() : 1
public Object[] toArray() : 1
public T[] toArray(final T[] object) : 1
public boolean remove(final Object object) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1
public int size() : 1
public boolean equals(final Object object) : 1
public int hashCode() : 1
public String toString() : 1

========================================
Fichier : collection\TransformedCollection.java
========================================

Classe : org.apache.commons.collections4.collection.TransformedCollection
public static TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) : 1
public static TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer) : 3
protected E transform(final E object) : 1
protected Collection<E> transform(final Collection<? extends E> coll) : 2
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1

========================================
Fichier : collection\UnmodifiableBoundedCollection.java
========================================

Classe : org.apache.commons.collections4.collection.UnmodifiableBoundedCollection
public static BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll) : 2
public static BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> collection) : 5
public Iterator<E> iterator() : 1
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public void clear() : 1
public boolean remove(final Object object) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1
public boolean isFull() : 1
public int maxSize() : 1
protected BoundedCollection<E> decorated() : 1

========================================
Fichier : collection\UnmodifiableCollection.java
========================================

Classe : org.apache.commons.collections4.collection.UnmodifiableCollection
public static Collection<T> unmodifiableCollection(final Collection<? extends T> coll) : 2
public Iterator<E> iterator() : 1
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public void clear() : 1
public boolean remove(final Object object) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1

========================================
Fichier : CollectionUtils.java
========================================

Classe : org.apache.commons.collections4.CollectionUtils
public static Collection<T> emptyCollection() : 1
public static Collection<T> emptyIfNull(final Collection<T> collection) : 1
public static Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b) : 2
public static Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b) : 2
public static Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b) : 2
public static Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b) : 1
public static Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p) : 5
public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2) : 7
public static boolean containsAny(final Collection<?> coll1, @SuppressWarnings("unchecked") final T... coll2) : 6
public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2) : 6
public static Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll) : 3
public static boolean isSubCollection(final Collection<?> a, final Collection<?> b) : 3
public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b) : 1
public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b) : 5
public static boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator) : 2
public static int hashCode(final Collection<? extends E> collection, final Equator<? super E> equator) : 3
public static int cardinality(final O obj, final Iterable<? super O> collection) : 1
public static T find(final Iterable<T> collection, final Predicate<? super T> predicate) : 1
public static C forAllDo(final Iterable<T> collection, final C closure) : 2
public static C forAllDo(final Iterator<T> iterator, final C closure) : 2
public static T forAllButLastDo(final Iterable<T> collection, final C closure) : 1
public static T forAllButLastDo(final Iterator<T> iterator, final C closure) : 1
public static boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate) : 4
public static boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate) : 1
public static void transform(final Collection<C> collection, final Transformer<? super C, ? extends C> transformer) : 4
public static int countMatches(final Iterable<C> input, final Predicate<? super C> predicate) : 1
public static boolean exists(final Iterable<C> input, final Predicate<? super C> predicate) : 1
public static boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate) : 1
public static Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate) : 2
public static R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection) : 4
public static R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection, final R rejectedCollection) : 4
public static Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate) : 2
public static R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection) : 4
public static Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer) : 2
public static Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer) : 1
public static R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection) : 2
public static R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection) : 3
public static boolean addIgnoreNull(final Collection<T> collection, final T object) : 1
public static boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable) : 2
public static boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator) : 2
public static boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration) : 2
public static boolean addAll(final Collection<C> collection, final C... elements) : 2
public static T get(final Iterator<T> iterator, final int index) : 1
 static void checkIndexBounds(final int index) : 2
public static T get(final Iterable<T> iterable, final int index) : 1
public static Object get(final Object object, final int index) : 8
public static Map.Entry<K, V> get(final Map<K, V> map, final int index) : 1
public static int size(final Object object) : 3
public static boolean sizeIsEmpty(final Object object) : 8
public static boolean isEmpty(final Collection<?> coll) : 1
public static boolean isNotEmpty(final Collection<?> coll) : 1
public static void reverseArray(final Object[] array) : 2
public static boolean isFull(final Collection<? extends Object> collection) : 2
public static int maxSize(final Collection<? extends Object> collection) : 2
public static List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b) : 1
public static List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates) : 1
public static List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c) : 1
public static List<O> collate(final Iterable<? extends O> iterableA, final Iterable<? extends O> iterableB, final Comparator<? super O> comparator, final boolean includeDuplicates) : 4
public static Collection<List<E>> permutations(final Collection<E> collection) : 2
public static Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain) : 1
public static Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator) : 3
public static Collection<E> removeRange(final Collection<E> input, final int startIndex, final int endIndex) : 3
public static Collection<E> removeCount(final Collection<E> input, int startIndex, int count) : 6
public static Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove) : 1
public static Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator) : 3
public static Collection<C> synchronizedCollection(final Collection<C> collection) : 1
public static Collection<C> unmodifiableCollection(final Collection<? extends C> collection) : 1
public static Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate) : 1
public static Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer) : 1
public static E extractSingleton(final Collection<E> collection) : 2

Classe : org.apache.commons.collections4.CollectionUtils.CardinalityHelper
public final int max(final Object obj) : 1
public final int min(final Object obj) : 1
public int freqA(final Object obj) : 1
public int freqB(final Object obj) : 1
private int getFreq(final Object obj, final Map<?, Integer> freqMap) : 2

Classe : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper
public Iterator<O> iterator() : 1
public void setCardinality(final O obj, final int count) : 2
public Collection<O> list() : 1

Classe : org.apache.commons.collections4.CollectionUtils.EquatorWrapper
public O getObject() : 1
public boolean equals(final Object obj) : 2
public int hashCode() : 1

========================================
Fichier : comparators\BooleanComparator.java
========================================

Classe : org.apache.commons.collections4.comparators.BooleanComparator
public static BooleanComparator getTrueFirstComparator() : 1
public static BooleanComparator getFalseFirstComparator() : 1
public static BooleanComparator booleanComparator(final boolean trueFirst) : 1
public int compare(final Boolean b1, final Boolean b2) : 1
public int hashCode() : 1
public boolean equals(final Object object) : 1
public boolean sortsTrueFirst() : 1

========================================
Fichier : comparators\ComparableComparator.java
========================================

Classe : org.apache.commons.collections4.comparators.ComparableComparator
public static ComparableComparator<E> comparableComparator() : 1
public int compare(final E obj1, final E obj2) : 1
public int hashCode() : 1
public boolean equals(final Object object) : 1

========================================
Fichier : comparators\ComparatorChain.java
========================================

Classe : org.apache.commons.collections4.comparators.ComparatorChain
public void addComparator(final Comparator<E> comparator) : 1
public void addComparator(final Comparator<E> comparator, final boolean reverse) : 2
public void setComparator(final int index, final Comparator<E> comparator) throws IndexOutOfBoundsException : 1
public void setComparator(final int index, final Comparator<E> comparator, final boolean reverse) : 2
public void setForwardSort(final int index) : 1
public void setReverseSort(final int index) : 1
public int size() : 1
public boolean isLocked() : 1
private void checkLocked() : 2
private void checkChainIntegrity() : 2
public int compare(final E o1, final E o2) throws UnsupportedOperationException : 6
public int hashCode() : 3
public boolean equals(final Object object) : 4

========================================
Fichier : comparators\FixedOrderComparator.java
========================================

Classe : org.apache.commons.collections4.comparators.FixedOrderComparator
public boolean isLocked() : 1
protected void checkLocked() : 2
public UnknownObjectBehavior getUnknownObjectBehavior() : 1
public void setUnknownObjectBehavior(final UnknownObjectBehavior unknownObjectBehavior) : 1
public boolean add(final T obj) : 1
public boolean addAsEqual(final T existingObj, final T newObj) : 2
public int compare(final T obj1, final T obj2) : 2
public int hashCode() : 1
public boolean equals(final Object object) : 4

========================================
Fichier : comparators\NullComparator.java
========================================

Classe : org.apache.commons.collections4.comparators.NullComparator
public int compare(final E o1, final E o2) : 4
public int hashCode() : 1
public boolean equals(final Object obj) : 4

========================================
Fichier : comparators\package-info.java
========================================

========================================
Fichier : comparators\ReverseComparator.java
========================================

Classe : org.apache.commons.collections4.comparators.ReverseComparator
public int compare(final E obj1, final E obj2) : 1
public int hashCode() : 1
public boolean equals(final Object object) : 4

========================================
Fichier : comparators\TransformingComparator.java
========================================

Classe : org.apache.commons.collections4.comparators.TransformingComparator
public int compare(final I obj1, final I obj2) : 1
public int hashCode() : 1
public boolean equals(final Object object) : 4

========================================
Fichier : ComparatorUtils.java
========================================

Classe : org.apache.commons.collections4.ComparatorUtils
public static Comparator<E> naturalComparator() : 1
public static Comparator<E> chainedComparator(final Comparator<E>... comparators) : 2
public static Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators) : 1
public static Comparator<E> reversedComparator(final Comparator<E> comparator) : 1
public static Comparator<Boolean> booleanComparator(final boolean trueFirst) : 1
public static Comparator<E> nullLowComparator(Comparator<E> comparator) : 2
public static Comparator<E> nullHighComparator(Comparator<E> comparator) : 2
public static Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer) : 2
public static E min(final E o1, final E o2, Comparator<E> comparator) : 2
public static E max(final E o1, final E o2, Comparator<E> comparator) : 2

========================================
Fichier : EnumerationUtils.java
========================================

Classe : org.apache.commons.collections4.EnumerationUtils
public static Iterable<T> asIterable(final Enumeration<T> enumeration) : 1
public static T get(final Enumeration<T> e, final int index) : 3
public static List<E> toList(final Enumeration<? extends E> enumeration) : 1
public static List<String> toList(final StringTokenizer stringTokenizer) : 2

========================================
Fichier : Equator.java
========================================

Classe : org.apache.commons.collections4.Equator
 boolean equate(T o1, T o2) : 1
 int hash(T o) : 1

========================================
Fichier : Factory.java
========================================

Classe : org.apache.commons.collections4.Factory
 T create() : 1

========================================
Fichier : FactoryUtils.java
========================================

Classe : org.apache.commons.collections4.FactoryUtils
public static Factory<T> exceptionFactory() : 1
public static Factory<T> nullFactory() : 1
public static Factory<T> constantFactory(final T constantToReturn) : 1
public static Factory<T> prototypeFactory(final T prototype) : 1
public static Factory<T> instantiateFactory(final Class<T> classToInstantiate) : 1
public static Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args) : 1

========================================
Fichier : FluentIterable.java
========================================

Classe : org.apache.commons.collections4.FluentIterable
public static FluentIterable<T> empty() : 1
public static FluentIterable<T> of(final T singleton) : 1
public static FluentIterable<T> of(final T... elements) : 1
public static FluentIterable<T> of(final Iterable<T> iterable) : 2
public FluentIterable<E> append(final E... elements) : 1
public FluentIterable<E> append(final Iterable<? extends E> other) : 1
public FluentIterable<E> collate(final Iterable<? extends E> other) : 1
public FluentIterable<E> collate(final Iterable<? extends E> other, final Comparator<? super E> comparator) : 1
public FluentIterable<E> eval() : 1
public FluentIterable<E> filter(final Predicate<? super E> predicate) : 1
public FluentIterable<E> limit(final long maxSize) : 1
public FluentIterable<E> loop() : 1
public FluentIterable<E> reverse() : 1
public FluentIterable<E> skip(final long elementsToSkip) : 1
public FluentIterable<O> transform(final Transformer<? super E, ? extends O> transformer) : 1
public FluentIterable<E> unique() : 1
public FluentIterable<E> unmodifiable() : 1
public FluentIterable<E> zip(final Iterable<? extends E> other) : 1
public FluentIterable<E> zip(final Iterable<? extends E>... others) : 1
public Iterator<E> iterator() : 1
public Enumeration<E> asEnumeration() : 1
public boolean allMatch(final Predicate<? super E> predicate) : 1
public boolean anyMatch(final Predicate<? super E> predicate) : 1
public boolean isEmpty() : 1
public boolean contains(final Object object) : 1
public void forEach(final Closure<? super E> closure) : 1
public E get(final int position) : 1
public int size() : 1
public void copyInto(final Collection<? super E> collection) : 1
public E[] toArray(final Class<E> arrayClass) : 1
public List<E> toList() : 1
public String toString() : 1

========================================
Fichier : FunctorException.java
========================================

Classe : org.apache.commons.collections4.FunctorException

========================================
Fichier : functors\AbstractQuantifierPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.AbstractQuantifierPredicate
public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\AllPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.AllPredicate
public static Predicate<T> allPredicate(final Predicate<? super T>... predicates) : 3
public static Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates) : 3
public boolean evaluate(final T object) : 3

========================================
Fichier : functors\AndPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.AndPredicate
public static Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2) : 1
public boolean evaluate(final T object) : 1
public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\AnyPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.AnyPredicate
public static Predicate<T> anyPredicate(final Predicate<? super T>... predicates) : 3
public static Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates) : 3
public boolean evaluate(final T object) : 3

========================================
Fichier : functors\CatchAndRethrowClosure.java
========================================

Classe : org.apache.commons.collections4.functors.CatchAndRethrowClosure
public void execute(final E input) : 1
protected abstract void executeAndThrow(E input) throws Throwable : 1

========================================
Fichier : functors\ChainedClosure.java
========================================

Classe : org.apache.commons.collections4.functors.ChainedClosure
public static Closure<E> chainedClosure(final Closure<? super E>... closures) : 2
public static Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures) : 3
public void execute(final E input) : 2
public Closure<? super E>[] getClosures() : 1

========================================
Fichier : functors\ChainedTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.ChainedTransformer
public static Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers) : 2
public static Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers) : 2
public T transform(T object) : 2
public Transformer<? super T, ? extends T>[] getTransformers() : 1

========================================
Fichier : functors\CloneTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.CloneTransformer
public static Transformer<T, T> cloneTransformer() : 1
public T transform(final T input) : 2

========================================
Fichier : functors\ClosureTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.ClosureTransformer
public static Transformer<T, T> closureTransformer(final Closure<? super T> closure) : 1
public T transform(final T input) : 1
public Closure<? super T> getClosure() : 1

========================================
Fichier : functors\ComparatorPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.ComparatorPredicate
public static Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator) : 1
public static Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion) : 1
public boolean evaluate(final T target) : 1

========================================
Fichier : functors\ConstantFactory.java
========================================

Classe : org.apache.commons.collections4.functors.ConstantFactory
public static Factory<T> constantFactory(final T constantToReturn) : 2
public T create() : 1
public T getConstant() : 1

========================================
Fichier : functors\ConstantTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.ConstantTransformer
public static Transformer<I, O> nullTransformer() : 1
public static Transformer<I, O> constantTransformer(final O constantToReturn) : 2
public O transform(final I input) : 1
public O getConstant() : 1
public boolean equals(final Object obj) : 3
public int hashCode() : 2

========================================
Fichier : functors\DefaultEquator.java
========================================

Classe : org.apache.commons.collections4.functors.DefaultEquator
public static DefaultEquator<T> defaultEquator() : 1
public boolean equate(final T o1, final T o2) : 1
public int hash(final T o) : 1
private Object readResolve() : 1

========================================
Fichier : functors\EqualPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.EqualPredicate
public static Predicate<T> equalPredicate(final T object) : 2
public static Predicate<T> equalPredicate(final T object, final Equator<T> equator) : 2
public boolean evaluate(final T object) : 2
public Object getValue() : 1

========================================
Fichier : functors\ExceptionClosure.java
========================================

Classe : org.apache.commons.collections4.functors.ExceptionClosure
public static Closure<E> exceptionClosure() : 1
public void execute(final E input) : 1
private Object readResolve() : 1

========================================
Fichier : functors\ExceptionFactory.java
========================================

Classe : org.apache.commons.collections4.functors.ExceptionFactory
public static Factory<T> exceptionFactory() : 1
public T create() : 1
private Object readResolve() : 1

========================================
Fichier : functors\ExceptionPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.ExceptionPredicate
public static Predicate<T> exceptionPredicate() : 1
public boolean evaluate(final T object) : 1
private Object readResolve() : 1

========================================
Fichier : functors\ExceptionTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.ExceptionTransformer
public static Transformer<I, O> exceptionTransformer() : 1
public O transform(final I input) : 1
private Object readResolve() : 1

========================================
Fichier : functors\FactoryTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.FactoryTransformer
public static Transformer<I, O> factoryTransformer(final Factory<? extends O> factory) : 1
public O transform(final I input) : 1
public Factory<? extends O> getFactory() : 1

========================================
Fichier : functors\FalsePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.FalsePredicate
public static Predicate<T> falsePredicate() : 1
public boolean evaluate(final T object) : 1
private Object readResolve() : 1

========================================
Fichier : functors\ForClosure.java
========================================

Classe : org.apache.commons.collections4.functors.ForClosure
public static Closure<E> forClosure(final int count, final Closure<? super E> closure) : 3
public void execute(final E input) : 2
public Closure<? super E> getClosure() : 1
public int getCount() : 1

========================================
Fichier : functors\FunctorUtils.java
========================================

Classe : org.apache.commons.collections4.functors.FunctorUtils
 static Predicate<T>[] copy(final Predicate<? super T>... predicates) : 2
 static Predicate<T> coerce(final Predicate<? super T> predicate) : 1
 static void validate(final Predicate<?>... predicates) : 3
 static Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates) : 3
 static Closure<E>[] copy(final Closure<? super E>... closures) : 2
 static void validate(final Closure<?>... closures) : 3
 static Closure<T> coerce(final Closure<? super T> closure) : 1
 static Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers) : 2
 static void validate(final Transformer<?, ?>... transformers) : 3
 static Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer) : 1

========================================
Fichier : functors\IdentityPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.IdentityPredicate
public static Predicate<T> identityPredicate(final T object) : 2
public boolean evaluate(final T object) : 1
public T getValue() : 1

========================================
Fichier : functors\IfClosure.java
========================================

Classe : org.apache.commons.collections4.functors.IfClosure
public static Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure) : 1
public static Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure) : 1
public void execute(final E input) : 2
public Predicate<? super E> getPredicate() : 1
public Closure<? super E> getTrueClosure() : 1
public Closure<? super E> getFalseClosure() : 1

========================================
Fichier : functors\IfTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.IfTransformer
public static Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer) : 1
public static Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer) : 1
public O transform(final I input) : 2
public Predicate<? super I> getPredicate() : 1
public Transformer<? super I, ? extends O> getTrueTransformer() : 1
public Transformer<? super I, ? extends O> getFalseTransformer() : 1

========================================
Fichier : functors\InstanceofPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.InstanceofPredicate
public static Predicate<Object> instanceOfPredicate(final Class<?> type) : 1
public boolean evaluate(final Object object) : 1
public Class<?> getType() : 1

========================================
Fichier : functors\InstantiateFactory.java
========================================

Classe : org.apache.commons.collections4.functors.InstantiateFactory
public static Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args) : 3
private void findConstructor() : 1
public T create() : 2

========================================
Fichier : functors\InstantiateTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.InstantiateTransformer
public static Transformer<Class<? extends T>, T> instantiateTransformer() : 1
public static Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args) : 3
public T transform(final Class<? extends T> input) : 1

========================================
Fichier : functors\InvokerTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.InvokerTransformer
public static Transformer<I, O> invokerTransformer(final String methodName) : 1
public static Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args) : 3
public O transform(final Object input) : 2

========================================
Fichier : functors\MapTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.MapTransformer
public static Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map) : 2
public O transform(final I input) : 1
public Map<? super I, ? extends O> getMap() : 1

========================================
Fichier : functors\NonePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NonePredicate
public static Predicate<T> nonePredicate(final Predicate<? super T>... predicates) : 2
public static Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates) : 2
public boolean evaluate(final T object) : 3

========================================
Fichier : functors\NOPClosure.java
========================================

Classe : org.apache.commons.collections4.functors.NOPClosure
public static Closure<E> nopClosure() : 1
public void execute(final E input) : 1
private Object readResolve() : 1

========================================
Fichier : functors\NOPTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.NOPTransformer
public static Transformer<T, T> nopTransformer() : 1
public T transform(final T input) : 1
private Object readResolve() : 1

========================================
Fichier : functors\NotNullPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NotNullPredicate
public static Predicate<T> notNullPredicate() : 1
public boolean evaluate(final T object) : 1
private Object readResolve() : 1

========================================
Fichier : functors\NotPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NotPredicate
public static Predicate<T> notPredicate(final Predicate<? super T> predicate) : 1
public boolean evaluate(final T object) : 1
public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\NullIsExceptionPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NullIsExceptionPredicate
public static Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate) : 1
public boolean evaluate(final T object) : 2
public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\NullIsFalsePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NullIsFalsePredicate
public static Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate) : 1
public boolean evaluate(final T object) : 2
public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\NullIsTruePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NullIsTruePredicate
public static Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate) : 1
public boolean evaluate(final T object) : 2
public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\NullPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NullPredicate
public static Predicate<T> nullPredicate() : 1
public boolean evaluate(final T object) : 1
private Object readResolve() : 1

========================================
Fichier : functors\OnePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.OnePredicate
public static Predicate<T> onePredicate(final Predicate<? super T>... predicates) : 3
public static Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates) : 1
public boolean evaluate(final T object) : 4

========================================
Fichier : functors\OrPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.OrPredicate
public static Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2) : 1
public boolean evaluate(final T object) : 1
public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\package-info.java
========================================

========================================
Fichier : functors\PredicateDecorator.java
========================================

Classe : org.apache.commons.collections4.functors.PredicateDecorator
 Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\PredicateTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.PredicateTransformer
public static Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate) : 2
public Boolean transform(final T input) : 1
public Predicate<? super T> getPredicate() : 1

========================================
Fichier : functors\PrototypeFactory.java
========================================

Classe : org.apache.commons.collections4.functors.PrototypeFactory
public static Factory<T> prototypeFactory(final T prototype) : 2

Classe : org.apache.commons.collections4.functors.PrototypeFactory.PrototypeCloneFactory
private void findCloneMethod() : 1
public T create() : 2

Classe : org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory
public T create() : 1

========================================
Fichier : functors\StringValueTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.StringValueTransformer
public static Transformer<T, String> stringValueTransformer() : 1
public String transform(final T input) : 1
private Object readResolve() : 1

========================================
Fichier : functors\SwitchClosure.java
========================================

Classe : org.apache.commons.collections4.functors.SwitchClosure
public static Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure) : 3
public static Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures) : 3
public void execute(final E input) : 3
public Predicate<? super E>[] getPredicates() : 1
public Closure<? super E>[] getClosures() : 1
public Closure<? super E> getDefaultClosure() : 1

========================================
Fichier : functors\SwitchTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.SwitchTransformer
public static Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer) : 3
public static Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map) : 4
public O transform(final I input) : 3
public Predicate<? super I>[] getPredicates() : 1
public Transformer<? super I, ? extends O>[] getTransformers() : 1
public Transformer<? super I, ? extends O> getDefaultTransformer() : 1

========================================
Fichier : functors\TransformedPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.TransformedPredicate
public static Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate) : 1
public boolean evaluate(final T object) : 1
public Predicate<? super T>[] getPredicates() : 1
public Transformer<? super T, ? extends T> getTransformer() : 1

========================================
Fichier : functors\TransformerClosure.java
========================================

Classe : org.apache.commons.collections4.functors.TransformerClosure
public static Closure<E> transformerClosure(final Transformer<? super E, ?> transformer) : 2
public void execute(final E input) : 1
public Transformer<? super E, ?> getTransformer() : 1

========================================
Fichier : functors\TransformerPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.TransformerPredicate
public static Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer) : 1
public boolean evaluate(final T object) : 2
public Transformer<? super T, Boolean> getTransformer() : 1

========================================
Fichier : functors\TruePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.TruePredicate
public static Predicate<T> truePredicate() : 1
public boolean evaluate(final T object) : 1
private Object readResolve() : 1

========================================
Fichier : functors\UniquePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.UniquePredicate
public static Predicate<T> uniquePredicate() : 1
public boolean evaluate(final T object) : 1

========================================
Fichier : functors\WhileClosure.java
========================================

Classe : org.apache.commons.collections4.functors.WhileClosure
public static Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop) : 1
public void execute(final E input) : 3
public Predicate<? super E> getPredicate() : 1
public Closure<? super E> getClosure() : 1
public boolean isDoLoop() : 1

========================================
Fichier : Get.java
========================================

Classe : org.apache.commons.collections4.Get
 boolean containsKey(Object key) : 1
 boolean containsValue(Object value) : 1
 Set<java.util.Map.Entry<K, V>> entrySet() : 1
 V get(Object key) : 1
 V remove(Object key) : 1
 boolean isEmpty() : 1
 Set<K> keySet() : 1
 int size() : 1
 Collection<V> values() : 1

========================================
Fichier : IterableGet.java
========================================

Classe : org.apache.commons.collections4.IterableGet
 MapIterator<K, V> mapIterator() : 1

========================================
Fichier : IterableMap.java
========================================

Classe : org.apache.commons.collections4.IterableMap

========================================
Fichier : IterableSortedMap.java
========================================

Classe : org.apache.commons.collections4.IterableSortedMap

========================================
Fichier : IterableUtils.java
========================================

Classe : org.apache.commons.collections4.IterableUtils
public static Iterable<E> emptyIterable() : 1
public static Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b) : 1
public static Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c) : 1
public static Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d) : 1
public static Iterable<E> chainedIterable(final Iterable<? extends E>... iterables) : 1
public static Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b) : 1
public static Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b) : 1
public static Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate) : 1
public static Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize) : 2
public static Iterable<E> loopingIterable(final Iterable<E> iterable) : 1
public static Iterable<E> reversedIterable(final Iterable<E> iterable) : 1
public static Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip) : 2
public static Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer) : 1
public static Iterable<E> uniqueIterable(final Iterable<E> iterable) : 1
public static Iterable<E> unmodifiableIterable(final Iterable<E> iterable) : 2
public static Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b) : 1
public static Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others) : 1
public static Iterable<E> emptyIfNull(final Iterable<E> iterable) : 1
public static void forEach(final Iterable<E> iterable, final Closure<? super E> closure) : 1
public static E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure) : 1
public static E find(final Iterable<E> iterable, final Predicate<? super E> predicate) : 1
public static int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate) : 1
public static boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate) : 1
public static boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate) : 1
public static long countMatches(final Iterable<E> input, final Predicate<? super E> predicate) : 1
public static boolean isEmpty(final Iterable<?> iterable) : 2
public static boolean contains(final Iterable<E> iterable, final Object object) : 2
public static boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator) : 1
public static int frequency(final Iterable<E> iterable, final T obj) : 3
public static T get(final Iterable<T> iterable, final int index) : 2
public static T first(final Iterable<T> iterable) : 1
public static int size(final Iterable<?> iterable) : 3
public static List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate) : 1
public static List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates) : 1
public static List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates) : 9
public static List<E> toList(final Iterable<E> iterable) : 1
public static String toString(final Iterable<E> iterable) : 1
public static String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer) : 1
public static String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix) : 1
 static void checkNotNull(final Iterable<?> iterable) : 1
 static void checkNotNull(final Iterable<?>... iterables) : 2
private static Iterator<E> emptyIteratorIfNull(final Iterable<E> iterable) : 1

Classe : org.apache.commons.collections4.IterableUtils.UnmodifiableIterable
public Iterator<E> iterator() : 1

========================================
Fichier : iterators\AbstractEmptyIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractEmptyIterator
public boolean hasNext() : 1
public E next() : 1
public boolean hasPrevious() : 1
public E previous() : 1
public int nextIndex() : 1
public int previousIndex() : 1
public void add(final E obj) : 1
public void set(final E obj) : 1
public void remove() : 1
public void reset() : 1

========================================
Fichier : iterators\AbstractEmptyMapIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractEmptyMapIterator
public K getKey() : 1
public V getValue() : 1
public V setValue(final V value) : 1

========================================
Fichier : iterators\AbstractIteratorDecorator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractIteratorDecorator
public E next() : 1

========================================
Fichier : iterators\AbstractListIteratorDecorator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractListIteratorDecorator
protected ListIterator<E> getListIterator() : 1
public boolean hasNext() : 1
public E next() : 1
public int nextIndex() : 1
public boolean hasPrevious() : 1
public E previous() : 1
public int previousIndex() : 1
public void remove() : 1
public void set(final E obj) : 1
public void add(final E obj) : 1

========================================
Fichier : iterators\AbstractMapIteratorDecorator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator
protected MapIterator<K, V> getMapIterator() : 1
public boolean hasNext() : 1
public K next() : 1
public void remove() : 1
public K getKey() : 1
public V getValue() : 1
public V setValue(final V obj) : 1

========================================
Fichier : iterators\AbstractOrderedMapIteratorDecorator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator
protected OrderedMapIterator<K, V> getOrderedMapIterator() : 1
public boolean hasNext() : 1
public K next() : 1
public boolean hasPrevious() : 1
public K previous() : 1
public void remove() : 1
public K getKey() : 1
public V getValue() : 1
public V setValue(final V obj) : 1

========================================
Fichier : iterators\AbstractUntypedIteratorDecorator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator
protected Iterator<I> getIterator() : 1
public boolean hasNext() : 1
public void remove() : 1

========================================
Fichier : iterators\ArrayIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ArrayIterator
protected void checkBound(final int bound, final int len, final String type) : 3
public boolean hasNext() : 1
public E next() : 2
public void remove() : 1
public Object getArray() : 1
public int getStartIndex() : 1
public int getEndIndex() : 1
public void reset() : 1

========================================
Fichier : iterators\ArrayListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ArrayListIterator
public boolean hasPrevious() : 1
public E previous() : 2
public E next() : 2
public int nextIndex() : 1
public int previousIndex() : 1
public void add(final Object o) : 1
public void set(final Object o) : 2
public void reset() : 1

========================================
Fichier : iterators\BoundedIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.BoundedIterator
private void init() : 2
public boolean hasNext() : 2
private boolean checkBounds() : 2
public E next() : 2
public void remove() : 2

========================================
Fichier : iterators\CollatingIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.CollatingIterator
public void addIterator(final Iterator<? extends E> iterator) : 1
public void setIterator(final int index, final Iterator<? extends E> iterator) : 1
public List<Iterator<? extends E>> getIterators() : 1
public Comparator<? super E> getComparator() : 1
public void setComparator(final Comparator<? super E> comp) : 1
public boolean hasNext() : 1
public E next() throws NoSuchElementException : 3
public void remove() : 2
public int getIteratorIndex() : 2
private void start() : 3
private boolean set(final int i) : 2
private void clear(final int i) : 1
private void checkNotStarted() throws IllegalStateException : 2
private int least() : 6
private boolean anyValueSet(final BitSet set) : 3
private boolean anyHasNext(final List<Iterator<? extends E>> iterators) : 3

========================================
Fichier : iterators\EmptyIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EmptyIterator
public static ResettableIterator<E> resettableEmptyIterator() : 1
public static Iterator<E> emptyIterator() : 1

========================================
Fichier : iterators\EmptyListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EmptyListIterator
public static ResettableListIterator<E> resettableEmptyListIterator() : 1
public static ListIterator<E> emptyListIterator() : 1

========================================
Fichier : iterators\EmptyMapIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EmptyMapIterator
public static MapIterator<K, V> emptyMapIterator() : 1

========================================
Fichier : iterators\EmptyOrderedIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EmptyOrderedIterator
public static OrderedIterator<E> emptyOrderedIterator() : 1

========================================
Fichier : iterators\EmptyOrderedMapIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EmptyOrderedMapIterator
public static OrderedMapIterator<K, V> emptyOrderedMapIterator() : 1

========================================
Fichier : iterators\EntrySetMapIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EntrySetMapIterator
public boolean hasNext() : 1
public K next() : 1
public void remove() : 2
public K getKey() : 2
public V getValue() : 2
public V setValue(final V value) : 2
public void reset() : 1
public String toString() : 2

========================================
Fichier : iterators\EnumerationIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EnumerationIterator
public boolean hasNext() : 1
public E next() : 1
public void remove() : 3
public Enumeration<? extends E> getEnumeration() : 1
public void setEnumeration(final Enumeration<? extends E> enumeration) : 1

========================================
Fichier : iterators\FilterIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.FilterIterator
public boolean hasNext() : 1
public E next() : 2
public void remove() : 2
public Iterator<? extends E> getIterator() : 1
public void setIterator(final Iterator<? extends E> iterator) : 1
public Predicate<? super E> getPredicate() : 1
public void setPredicate(final Predicate<? super E> predicate) : 1
private boolean setNextObject() : 3

========================================
Fichier : iterators\FilterListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.FilterListIterator
public void add(final E o) : 1
public boolean hasNext() : 1
public boolean hasPrevious() : 1
public E next() : 2
public int nextIndex() : 1
public E previous() : 2
public int previousIndex() : 1
public void remove() : 1
public void set(final E o) : 1
public ListIterator<? extends E> getListIterator() : 1
public void setListIterator(final ListIterator<? extends E> iterator) : 1
public Predicate<? super E> getPredicate() : 1
public void setPredicate(final Predicate<? super E> predicate) : 1
private void clearNextObject() : 1
private boolean setNextObject() : 6
private void clearPreviousObject() : 1
private boolean setPreviousObject() : 6

========================================
Fichier : iterators\IteratorChain.java
========================================

Classe : org.apache.commons.collections4.iterators.IteratorChain
public void addIterator(final Iterator<? extends E> iterator) : 1
public int size() : 1
public boolean isLocked() : 1
private void checkLocked() : 2
private void lockChain() : 2
protected void updateCurrentIterator() : 4
public boolean hasNext() : 1
public E next() : 1
public void remove() : 2

========================================
Fichier : iterators\IteratorEnumeration.java
========================================

Classe : org.apache.commons.collections4.iterators.IteratorEnumeration
public boolean hasMoreElements() : 1
public E nextElement() : 1
public Iterator<? extends E> getIterator() : 1
public void setIterator(final Iterator<? extends E> iterator) : 1

========================================
Fichier : iterators\IteratorIterable.java
========================================

Classe : org.apache.commons.collections4.iterators.IteratorIterable
private static Iterator<E> createTypesafeIterator(final Iterator<? extends E> iterator) : 1
public Iterator<E> iterator() : 2

========================================
Fichier : iterators\LazyIteratorChain.java
========================================

Classe : org.apache.commons.collections4.iterators.LazyIteratorChain
protected abstract Iterator<? extends E> nextIterator(int count) : 1
private void updateCurrentIterator() : 5
public boolean hasNext() : 1
public E next() : 1
public void remove() : 2

========================================
Fichier : iterators\ListIteratorWrapper.java
========================================

Classe : org.apache.commons.collections4.iterators.ListIteratorWrapper
public void add(final E obj) throws UnsupportedOperationException : 2
public boolean hasNext() : 2
public boolean hasPrevious() : 2
public E next() throws NoSuchElementException : 3
public int nextIndex() : 2
public E previous() throws NoSuchElementException : 3
public int previousIndex() : 2
public void remove() throws IllegalStateException : 4
public void set(final E obj) throws UnsupportedOperationException : 2
public void reset() : 3

========================================
Fichier : iterators\LoopingIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.LoopingIterator
public boolean hasNext() : 1
public E next() : 3
public void remove() : 1
public void reset() : 1
public int size() : 1

========================================
Fichier : iterators\LoopingListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.LoopingListIterator
public boolean hasNext() : 1
public E next() : 3
public int nextIndex() : 3
public boolean hasPrevious() : 1
public E previous() : 4
public int previousIndex() : 3
public void remove() : 1
public void add(final E obj) : 1
public void set(final E obj) : 1
public void reset() : 1
private void _reset() : 1
public int size() : 1

========================================
Fichier : iterators\NodeListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.NodeListIterator
public boolean hasNext() : 1
public Node next() : 2
public void remove() : 1

========================================
Fichier : iterators\ObjectArrayIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ObjectArrayIterator
public boolean hasNext() : 1
public E next() : 2
public void remove() : 1
public E[] getArray() : 1
public int getStartIndex() : 1
public int getEndIndex() : 1
public void reset() : 1

========================================
Fichier : iterators\ObjectArrayListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ObjectArrayListIterator
public boolean hasPrevious() : 1
public E previous() : 2
public E next() : 2
public int nextIndex() : 1
public int previousIndex() : 1
public void add(final E obj) : 1
public void set(final E obj) : 2
public void reset() : 1

========================================
Fichier : iterators\ObjectGraphIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ObjectGraphIterator
protected void updateCurrentIterator() : 5
protected void findNext(final E value) : 2
protected void findNextByIterator(final Iterator<? extends E> iterator) : 6
public boolean hasNext() : 1
public E next() : 2
public void remove() : 2

========================================
Fichier : iterators\package-info.java
========================================

========================================
Fichier : iterators\PeekingIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.PeekingIterator
public static PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator) : 2
private void fill() : 3
public boolean hasNext() : 2
public E peek() : 1
public E element() : 2
public E next() : 2
public void remove() : 2

========================================
Fichier : iterators\PermutationIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.PermutationIterator
public boolean hasNext() : 1
public List<E> next() : 8
public void remove() : 1

========================================
Fichier : iterators\PushbackIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.PushbackIterator
public static PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator) : 2
public void pushback(final E item) : 1
public boolean hasNext() : 1
public E next() : 1
public void remove() : 1

========================================
Fichier : iterators\ReverseListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ReverseListIterator
public boolean hasNext() : 1
public E next() : 1
public int nextIndex() : 1
public boolean hasPrevious() : 1
public E previous() : 1
public int previousIndex() : 1
public void remove() : 2
public void set(final E obj) : 2
public void add(final E obj) : 2
public void reset() : 1

========================================
Fichier : iterators\SingletonIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.SingletonIterator
public boolean hasNext() : 1
public E next() : 2
public void remove() : 3
public void reset() : 1

========================================
Fichier : iterators\SingletonListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.SingletonListIterator
public boolean hasNext() : 1
public boolean hasPrevious() : 1
public int nextIndex() : 1
public int previousIndex() : 1
public E next() : 2
public E previous() : 2
public void remove() : 2
public void add(final E obj) : 1
public void set(final E obj) : 2
public void reset() : 1

========================================
Fichier : iterators\SkippingIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.SkippingIterator
private void init() : 2
public E next() : 1
public void remove() : 2

========================================
Fichier : iterators\TransformIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.TransformIterator
public boolean hasNext() : 1
public O next() : 1
public void remove() : 1
public Iterator<? extends I> getIterator() : 1
public void setIterator(final Iterator<? extends I> iterator) : 1
public Transformer<? super I, ? extends O> getTransformer() : 1
public void setTransformer(final Transformer<? super I, ? extends O> transformer) : 1
protected O transform(final I source) : 1

========================================
Fichier : iterators\UniqueFilterIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.UniqueFilterIterator

========================================
Fichier : iterators\UnmodifiableIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.UnmodifiableIterator
public static Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator) : 2
public boolean hasNext() : 1
public E next() : 1
public void remove() : 1

========================================
Fichier : iterators\UnmodifiableListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.UnmodifiableListIterator
public static ListIterator<E> unmodifiableListIterator(final ListIterator<? extends E> iterator) : 2
public static ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator) : 1
public boolean hasNext() : 1
public E next() : 1
public int nextIndex() : 1
public boolean hasPrevious() : 1
public E previous() : 1
public int previousIndex() : 1
public void remove() : 1
public void set(final E obj) : 1
public void add(final E obj) : 1

========================================
Fichier : iterators\UnmodifiableMapIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.UnmodifiableMapIterator
public static MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator) : 2
public boolean hasNext() : 1
public K next() : 1
public K getKey() : 1
public V getValue() : 1
public V setValue(final V value) : 1
public void remove() : 1

========================================
Fichier : iterators\UnmodifiableOrderedMapIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator
public static OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator) : 2
public boolean hasNext() : 1
public K next() : 1
public boolean hasPrevious() : 1
public K previous() : 1
public K getKey() : 1
public V getValue() : 1
public V setValue(final V value) : 1
public void remove() : 1

========================================
Fichier : iterators\ZippingIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ZippingIterator
public boolean hasNext() : 4
public E next() throws NoSuchElementException : 2
public void remove() : 2

========================================
Fichier : IteratorUtils.java
========================================

Classe : org.apache.commons.collections4.IteratorUtils
public static ResettableIterator<E> emptyIterator() : 1
public static ResettableListIterator<E> emptyListIterator() : 1
public static OrderedIterator<E> emptyOrderedIterator() : 1
public static MapIterator<K, V> emptyMapIterator() : 1
public static OrderedMapIterator<K, V> emptyOrderedMapIterator() : 1
public static ResettableIterator<E> singletonIterator(final E object) : 1
public static ListIterator<E> singletonListIterator(final E object) : 1
public static ResettableIterator<E> arrayIterator(final E... array) : 1
public static ResettableIterator<E> arrayIterator(final Object array) : 1
public static ResettableIterator<E> arrayIterator(final E[] array, final int start) : 1
public static ResettableIterator<E> arrayIterator(final Object array, final int start) : 1
public static ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) : 1
public static ResettableIterator<E> arrayIterator(final Object array, final int start, final int end) : 1
public static ResettableListIterator<E> arrayListIterator(final E... array) : 1
public static ResettableListIterator<E> arrayListIterator(final Object array) : 1
public static ResettableListIterator<E> arrayListIterator(final E[] array, final int start) : 1
public static ResettableListIterator<E> arrayListIterator(final Object array, final int start) : 1
public static ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) : 1
public static ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end) : 1
public static BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, final long max) : 1
public static BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, final long offset, final long max) : 1
public static Iterator<E> unmodifiableIterator(final Iterator<E> iterator) : 1
public static ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator) : 1
public static MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator) : 1
public static Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2) : 1
public static Iterator<E> chainedIterator(final Iterator<? extends E>... iterators) : 1
public static Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators) : 1
public static Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2) : 1
public static Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators) : 1
public static Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators) : 1
public static Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer) : 1
public static Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transformer) : 1
public static Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate) : 1
public static ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate) : 1
public static ResettableIterator<E> loopingIterator(final Collection<? extends E> collection) : 1
public static ResettableListIterator<E> loopingListIterator(final List<E> list) : 1
public static NodeListIterator nodeListIterator(final NodeList nodeList) : 1
public static NodeListIterator nodeListIterator(final Node node) : 1
public static Iterator<E> peekingIterator(final Iterator<? extends E> iterator) : 1
public static Iterator<E> pushbackIterator(final Iterator<? extends E> iterator) : 1
public static SkippingIterator<E> skippingIterator(final Iterator<E> iterator, final long offset) : 1
public static ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b) : 1
public static ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c) : 1
public static ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators) : 1
public static Iterator<E> asIterator(final Enumeration<? extends E> enumeration) : 1
public static Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection) : 1
public static Enumeration<E> asEnumeration(final Iterator<? extends E> iterator) : 1
public static Iterable<E> asIterable(final Iterator<? extends E> iterator) : 1
public static Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator) : 1
public static ListIterator<E> toListIterator(final Iterator<? extends E> iterator) : 1
public static Object[] toArray(final Iterator<?> iterator) : 1
public static E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass) : 1
public static List<E> toList(final Iterator<? extends E> iterator) : 1
public static List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize) : 3
public static Iterator<?> getIterator(final Object obj) : 11
public static void forEach(final Iterator<E> iterator, final Closure<? super E> closure) : 3
public static E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure) : 4
public static E find(final Iterator<E> iterator, final Predicate<? super E> predicate) : 4
public static int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate) : 4
public static boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate) : 1
public static boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate) : 4
public static boolean isEmpty(final Iterator<?> iterator) : 1
public static boolean contains(final Iterator<E> iterator, final Object object) : 1
public static E get(final Iterator<E> iterator, final int index) : 3
public static E first(final Iterator<E> iterator) : 1
public static int size(final Iterator<?> iterator) : 3
public static String toString(final Iterator<E> iterator) : 1
public static String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer) : 1
public static String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix) : 4

========================================
Fichier : keyvalue\AbstractKeyValue.java
========================================

Classe : org.apache.commons.collections4.keyvalue.AbstractKeyValue
public K getKey() : 1
protected K setKey(final K key) : 1
public V getValue() : 1
protected V setValue(final V value) : 1
public String toString() : 1

========================================
Fichier : keyvalue\AbstractMapEntry.java
========================================

Classe : org.apache.commons.collections4.keyvalue.AbstractMapEntry
public V setValue(final V value) : 1
public boolean equals(final Object obj) : 3
public int hashCode() : 1

========================================
Fichier : keyvalue\AbstractMapEntryDecorator.java
========================================

Classe : org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator
protected Map.Entry<K, V> getMapEntry() : 1
public K getKey() : 1
public V getValue() : 1
public V setValue(final V object) : 1
public boolean equals(final Object object) : 2
public int hashCode() : 1
public String toString() : 1

========================================
Fichier : keyvalue\DefaultKeyValue.java
========================================

Classe : org.apache.commons.collections4.keyvalue.DefaultKeyValue
public K setKey(final K key) : 2
public V setValue(final V value) : 2
public Map.Entry<K, V> toMapEntry() : 1
public boolean equals(final Object obj) : 3
public int hashCode() : 1

========================================
Fichier : keyvalue\DefaultMapEntry.java
========================================

Classe : org.apache.commons.collections4.keyvalue.DefaultMapEntry

========================================
Fichier : keyvalue\MultiKey.java
========================================

Classe : org.apache.commons.collections4.keyvalue.MultiKey
private static Class<? extends T> getClass(final T value) : 1
private static Class<? extends T> getComponentType(final T... values) : 4
private static T[] newArray(final T key1, final T key2) : 1
private static T[] newArray(final T key1, final T key2, final T key3) : 1
private static T[] newArray(final T key1, final T key2, final T key3, final T key4) : 1
private static T[] newArray(final T key1, final T key2, final T key3, final T key4, final T key5) : 1
private void calculateHashCode(final Object[] keys) : 3
public boolean equals(final Object other) : 3
public K getKey(final int index) : 1
public K[] getKeys() : 1
public int hashCode() : 1
protected Object readResolve() : 1
public int size() : 1
public String toString() : 1

========================================
Fichier : keyvalue\package-info.java
========================================

========================================
Fichier : keyvalue\TiedMapEntry.java
========================================

Classe : org.apache.commons.collections4.keyvalue.TiedMapEntry
public K getKey() : 1
public V getValue() : 1
public V setValue(final V value) : 2
public boolean equals(final Object obj) : 3
public int hashCode() : 1
public String toString() : 1

========================================
Fichier : keyvalue\UnmodifiableMapEntry.java
========================================

Classe : org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry
public V setValue(final V value) : 1

========================================
Fichier : KeyValue.java
========================================

Classe : org.apache.commons.collections4.KeyValue
 K getKey() : 1
 V getValue() : 1

========================================
Fichier : list\AbstractLinkedList.java
========================================

Classe : org.apache.commons.collections4.list.AbstractLinkedList
protected void init() : 1
public int size() : 1
public boolean isEmpty() : 1
public E get(final int index) : 1
public Iterator<E> iterator() : 1
public ListIterator<E> listIterator() : 1
public ListIterator<E> listIterator(final int fromIndex) : 1
public int indexOf(final Object value) : 3
public int lastIndexOf(final Object value) : 3
public boolean contains(final Object value) : 1
public boolean containsAll(final Collection<?> coll) : 3
public Object[] toArray() : 1
public T[] toArray(T[] array) : 4
public List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) : 1
public boolean add(final E value) : 1
public void add(final int index, final E value) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public boolean addAll(final int index, final Collection<? extends E> coll) : 2
public E remove(final int index) : 1
public boolean remove(final Object value) : 3
public boolean removeAll(final Collection<?> coll) : 3
public boolean retainAll(final Collection<?> coll) : 3
public E set(final int index, final E value) : 1
public void clear() : 1
public E getFirst() : 2
public E getLast() : 2
public boolean addFirst(final E o) : 1
public boolean addLast(final E o) : 1
public E removeFirst() : 2
public E removeLast() : 2
public boolean equals(final Object obj) : 6
public int hashCode() : 2
public String toString() : 4
protected boolean isEqualValue(final Object value1, final Object value2) : 1
protected void updateNode(final Node<E> node, final E value) : 1
protected Node<E> createHeaderNode() : 1
protected Node<E> createNode(final E value) : 1
protected void addNodeBefore(final Node<E> node, final E value) : 1
protected void addNodeAfter(final Node<E> node, final E value) : 1
protected void addNode(final Node<E> nodeToInsert, final Node<E> insertBeforeNode) : 1
protected void removeNode(final Node<E> node) : 1
protected void removeAllNodes() : 1
protected Node<E> getNode(final int index, final boolean endMarkerAllowed) throws IndexOutOfBoundsException : 7
protected Iterator<E> createSubListIterator(final LinkedSubList<E> subList) : 1
protected ListIterator<E> createSubListListIterator(final LinkedSubList<E> subList, final int fromIndex) : 1
protected void doWriteObject(final ObjectOutputStream outputStream) throws IOException : 2
protected void doReadObject(final ObjectInputStream inputStream) throws IOException, ClassNotFoundException : 2

Classe : org.apache.commons.collections4.list.AbstractLinkedList.Node
protected E getValue() : 1
protected void setValue(final E value) : 1
protected Node<E> getPreviousNode() : 1
protected void setPreviousNode(final Node<E> previous) : 1
protected Node<E> getNextNode() : 1
protected void setNextNode(final Node<E> next) : 1

Classe : org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator
protected void checkModCount() : 2
protected Node<E> getLastNodeReturned() throws IllegalStateException : 2
public boolean hasNext() : 1
public E next() : 2
public boolean hasPrevious() : 1
public E previous() : 2
public int nextIndex() : 1
public int previousIndex() : 1
public void remove() : 2
public void set(final E obj) : 1
public void add(final E obj) : 1

Classe : org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubListIterator
public boolean hasNext() : 1
public boolean hasPrevious() : 1
public int nextIndex() : 1
public void add(final E obj) : 1
public void remove() : 1

Classe : org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList
public int size() : 1
public E get(final int index) : 1
public void add(final int index, final E obj) : 1
public E remove(final int index) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public boolean addAll(final int index, final Collection<? extends E> coll) : 2
public E set(final int index, final E obj) : 1
public void clear() : 2
public Iterator<E> iterator() : 1
public ListIterator<E> listIterator(final int index) : 1
public List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) : 1
protected void rangeCheck(final int index, final int beyond) : 2
protected void checkModCount() : 2

========================================
Fichier : list\AbstractListDecorator.java
========================================

Classe : org.apache.commons.collections4.list.AbstractListDecorator
protected List<E> decorated() : 1
public boolean equals(final Object object) : 1
public int hashCode() : 1
public void add(final int index, final E object) : 1
public boolean addAll(final int index, final Collection<? extends E> coll) : 1
public E get(final int index) : 1
public int indexOf(final Object object) : 1
public int lastIndexOf(final Object object) : 1
public ListIterator<E> listIterator() : 1
public ListIterator<E> listIterator(final int index) : 1
public E remove(final int index) : 1
public E set(final int index, final E object) : 1
public List<E> subList(final int fromIndex, final int toIndex) : 1

========================================
Fichier : list\AbstractSerializableListDecorator.java
========================================

Classe : org.apache.commons.collections4.list.AbstractSerializableListDecorator
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : list\CursorableLinkedList.java
========================================

Classe : org.apache.commons.collections4.list.CursorableLinkedList
protected void init() : 1
public Iterator<E> iterator() : 1
public ListIterator<E> listIterator() : 1
public ListIterator<E> listIterator(final int fromIndex) : 1
public CursorableLinkedList.Cursor<E> cursor() : 1
public CursorableLinkedList.Cursor<E> cursor(final int fromIndex) : 1
protected void updateNode(final Node<E> node, final E value) : 1
protected void addNode(final Node<E> nodeToInsert, final Node<E> insertBeforeNode) : 1
protected void removeNode(final Node<E> node) : 1
protected void removeAllNodes() : 3
protected void registerCursor(final Cursor<E> cursor) : 1
protected void unregisterCursor(final Cursor<E> cursor) : 3
protected void broadcastNodeChanged(final Node<E> node) : 3
protected void broadcastNodeRemoved(final Node<E> node) : 3
protected void broadcastNodeInserted(final Node<E> node) : 3
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
protected ListIterator<E> createSubListListIterator(final LinkedSubList<E> subList, final int fromIndex) : 1

Classe : org.apache.commons.collections4.list.CursorableLinkedList.Cursor
public void remove() : 2
public void add(final E obj) : 1
public int nextIndex() : 4
protected void nodeChanged(final Node<E> node) : 1
protected void nodeRemoved(final Node<E> node) : 2
protected void nodeInserted(final Node<E> node) : 2
protected void checkModCount() : 2
public void close() : 2

Classe : org.apache.commons.collections4.list.CursorableLinkedList.SubCursor
public boolean hasNext() : 1
public boolean hasPrevious() : 1
public int nextIndex() : 1
public void add(final E obj) : 1
public void remove() : 1

========================================
Fichier : list\FixedSizeList.java
========================================

Classe : org.apache.commons.collections4.list.FixedSizeList
public static FixedSizeList<E> fixedSizeList(final List<E> list) : 1
public boolean add(final E object) : 1
public void add(final int index, final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public boolean addAll(final int index, final Collection<? extends E> coll) : 1
public void clear() : 1
public E get(final int index) : 1
public int indexOf(final Object object) : 1
public Iterator<E> iterator() : 1
public int lastIndexOf(final Object object) : 1
public ListIterator<E> listIterator() : 1
public ListIterator<E> listIterator(final int index) : 1
public E remove(final int index) : 1
public boolean remove(final Object object) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1
public E set(final int index, final E object) : 1
public List<E> subList(final int fromIndex, final int toIndex) : 1
public boolean isFull() : 1
public int maxSize() : 1
private static UnsupportedOperationException unsupportedOperationException() : 1

Classe : org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator
public void remove() : 1
public void add(final Object object) : 1

========================================
Fichier : list\GrowthList.java
========================================

Classe : org.apache.commons.collections4.list.GrowthList
public static GrowthList<E> growthList(final List<E> list) : 1
public void add(final int index, final E element) : 2
public boolean addAll(final int index, final Collection<? extends E> coll) : 2
public E set(final int index, final E element) : 2

========================================
Fichier : list\LazyList.java
========================================

Classe : org.apache.commons.collections4.list.LazyList
public static LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory) : 1
public static LazyList<E> lazyList(final List<E> list, final Transformer<Integer, ? extends E> transformer) : 1
public E get(final int index) : 4
public List<E> subList(final int fromIndex, final int toIndex) : 3
private E element(final int index) : 3

========================================
Fichier : list\NodeCachingLinkedList.java
========================================

Classe : org.apache.commons.collections4.list.NodeCachingLinkedList
protected int getMaximumCacheSize() : 1
protected void setMaximumCacheSize(final int maximumCacheSize) : 1
protected void shrinkCacheToMaximumSize() : 2
protected Node<E> getNodeFromCache() : 2
protected boolean isCacheFull() : 1
protected void addNodeToCache(final Node<E> node) : 2
protected Node<E> createNode(final E value) : 2
protected void removeNode(final Node<E> node) : 1
protected void removeAllNodes() : 2
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : list\package-info.java
========================================

========================================
Fichier : list\PredicatedList.java
========================================

Classe : org.apache.commons.collections4.list.PredicatedList
public static PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate) : 1
protected List<E> decorated() : 1
public boolean equals(final Object object) : 1
public int hashCode() : 1
public E get(final int index) : 1
public int indexOf(final Object object) : 1
public int lastIndexOf(final Object object) : 1
public E remove(final int index) : 1
public void add(final int index, final E object) : 1
public boolean addAll(final int index, final Collection<? extends E> coll) : 2
public ListIterator<E> listIterator() : 1
public ListIterator<E> listIterator(final int i) : 1
public E set(final int index, final E object) : 1
public List<E> subList(final int fromIndex, final int toIndex) : 1

Classe : org.apache.commons.collections4.list.PredicatedList.PredicatedListIterator
public void add(final E object) : 1
public void set(final E object) : 1

========================================
Fichier : list\SetUniqueList.java
========================================

Classe : org.apache.commons.collections4.list.SetUniqueList
public static SetUniqueList<E> setUniqueList(final List<E> list) : 2
public Set<E> asSet() : 1
public boolean add(final E object) : 1
public void add(final int index, final E object) : 2
public boolean addAll(final Collection<? extends E> coll) : 1
public boolean addAll(final int index, final Collection<? extends E> coll) : 3
public E set(final int index, final E object) : 2
public boolean remove(final Object object) : 2
public E remove(final int index) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 2
public boolean retainAll(final Collection<?> coll) : 3
public void clear() : 1
public boolean contains(final Object object) : 1
public boolean containsAll(final Collection<?> coll) : 1
public Iterator<E> iterator() : 1
public ListIterator<E> listIterator() : 1
public ListIterator<E> listIterator(final int index) : 1
public List<E> subList(final int fromIndex, final int toIndex) : 1
protected Set<E> createSetBasedOnList(final Set<E> set, final List<E> list) : 2

Classe : org.apache.commons.collections4.list.SetUniqueList.SetListIterator
public E next() : 1
public void remove() : 1

Classe : org.apache.commons.collections4.list.SetUniqueList.SetListListIterator
public E next() : 1
public E previous() : 1
public void remove() : 1
public void add(final E object) : 2
public void set(final E object) : 1

========================================
Fichier : list\TransformedList.java
========================================

Classe : org.apache.commons.collections4.list.TransformedList
public static TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer) : 1
public static TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer) : 3
protected List<E> getList() : 1
public boolean equals(final Object object) : 1
public int hashCode() : 1
public E get(final int index) : 1
public int indexOf(final Object object) : 1
public int lastIndexOf(final Object object) : 1
public E remove(final int index) : 1
public void add(final int index, E object) : 1
public boolean addAll(final int index, Collection<? extends E> coll) : 1
public ListIterator<E> listIterator() : 1
public ListIterator<E> listIterator(final int i) : 1
public E set(final int index, E object) : 1
public List<E> subList(final int fromIndex, final int toIndex) : 1

Classe : org.apache.commons.collections4.list.TransformedList.TransformedListIterator
public void add(E object) : 1
public void set(E object) : 1

========================================
Fichier : list\TreeList.java
========================================

Classe : org.apache.commons.collections4.list.TreeList
public E get(final int index) : 1
public int size() : 1
public Iterator<E> iterator() : 1
public ListIterator<E> listIterator() : 1
public ListIterator<E> listIterator(final int fromIndex) : 1
public int indexOf(final Object object) : 2
public boolean contains(final Object object) : 1
public Object[] toArray() : 2
public void add(final int index, final E obj) : 2
public boolean addAll(final Collection<? extends E> c) : 2
public E set(final int index, final E obj) : 1
public E remove(final int index) : 1
public void clear() : 1
private void checkInterval(final int index, final int startIndex, final int endIndex) : 2

Classe : org.apache.commons.collections4.list.TreeList.AVLNode
 E getValue() : 1
 void setValue(final E obj) : 1
 AVLNode<E> get(final int index) : 3
 int indexOf(final Object object, final int index) : 5
 void toArray(final Object[] array, final int index) : 3
 AVLNode<E> next() : 2
 AVLNode<E> previous() : 2
 AVLNode<E> insert(final int index, final E obj) : 2
private AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) : 3
private AVLNode<E> insertOnRight(final int indexRelativeToMe, final E obj) : 3
private AVLNode<E> getLeftSubTree() : 1
private AVLNode<E> getRightSubTree() : 1
private AVLNode<E> max() : 1
private AVLNode<E> min() : 1
 AVLNode<E> remove(final int index) : 5
private AVLNode<E> removeMax() : 3
private AVLNode<E> removeMin() : 3
private AVLNode<E> removeSelf() : 11
private AVLNode<E> balance() : 1
private int getOffset(final AVLNode<E> node) : 2
private int setOffset(final AVLNode<E> node, final int newOffset) : 2
private void recalcHeight() : 1
private int getHeight(final AVLNode<E> node) : 1
private int heightRightMinusLeft() : 1
private AVLNode<E> rotateLeft() : 1
private AVLNode<E> rotateRight() : 1
private void setLeft(final AVLNode<E> node, final AVLNode<E> previous) : 1
private void setRight(final AVLNode<E> node, final AVLNode<E> next) : 1
private AVLNode<E> addAll(AVLNode<E> otherTree, final int currentSize) : 12
public String toString() : 1

Classe : org.apache.commons.collections4.list.TreeList.TreeListIterator
protected void checkModCount() : 2
public boolean hasNext() : 1
public E next() : 3
public boolean hasPrevious() : 1
public E previous() : 3
public int nextIndex() : 1
public int previousIndex() : 1
public void remove() : 3
public void set(final E obj) : 2
public void add(final E obj) : 1

========================================
Fichier : list\UnmodifiableList.java
========================================

Classe : org.apache.commons.collections4.list.UnmodifiableList
public static List<E> unmodifiableList(final List<? extends E> list) : 2
public Iterator<E> iterator() : 1
public boolean add(final Object object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public void clear() : 1
public boolean remove(final Object object) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1
public ListIterator<E> listIterator() : 1
public ListIterator<E> listIterator(final int index) : 1
public void add(final int index, final E object) : 1
public boolean addAll(final int index, final Collection<? extends E> coll) : 1
public E remove(final int index) : 1
public E set(final int index, final E object) : 1
public List<E> subList(final int fromIndex, final int toIndex) : 1

========================================
Fichier : ListUtils.java
========================================

Classe : org.apache.commons.collections4.ListUtils
public static List<T> defaultIfNull(final List<T> list, final List<T> defaultList) : 1
public static List<T> emptyIfNull(final List<T> list) : 1
public static List<E> fixedSizeList(final List<E> list) : 1
public static T getFirst(final List<T> list) : 1
public static T getLast(final List<T> list) : 1
public static int hashCodeForList(final Collection<?> list) : 3
public static int indexOf(final List<E> list, final Predicate<E> predicate) : 4
public static List<E> intersection(final List<? extends E> list1, final List<? extends E> list2) : 4
public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2) : 5
public static List<E> lazyList(final List<E> list, final Factory<? extends E> factory) : 1
public static List<E> lazyList(final List<E> list, final Transformer<Integer, ? extends E> transformer) : 1
public static String longestCommonSubsequence(final CharSequence charSequenceA, final CharSequence charSequenceB) : 2
public static List<E> longestCommonSubsequence(final List<E> a, final List<E> b) : 1
public static List<E> longestCommonSubsequence(final List<E> listA, final List<E> listB, final Equator<? super E> equator) : 1
public static List<List<T>> partition(final List<T> list, final int size) : 2
public static List<E> predicatedList(final List<E> list, final Predicate<E> predicate) : 1
public static List<E> removeAll(final Collection<E> collection, final Collection<?> remove) : 3
public static List<E> retainAll(final Collection<E> collection, final Collection<?> retain) : 3
public static List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate) : 1
public static List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate) : 1
public static List<E> subtract(final List<E> list1, final List<? extends E> list2) : 3
public static List<E> sum(final List<? extends E> list1, final List<? extends E> list2) : 1
public static List<E> synchronizedList(final List<E> list) : 1
public static List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer) : 1
public static List<E> union(final List<? extends E> list1, final List<? extends E> list2) : 1
public static List<E> unmodifiableList(final List<? extends E> list) : 1

Classe : org.apache.commons.collections4.ListUtils.CharSequenceAsList
public Character get(final int index) : 1
public int size() : 1

Classe : org.apache.commons.collections4.ListUtils.LcsVisitor
public List<E> getSubSequence() : 1
public void visitDeleteCommand(final E object) : 1
public void visitInsertCommand(final E object) : 1
public void visitKeepCommand(final E object) : 1

Classe : org.apache.commons.collections4.ListUtils.Partition
public List<T> get(final int index) : 3
public boolean isEmpty() : 1
public int size() : 1

========================================
Fichier : ListValuedMap.java
========================================

Classe : org.apache.commons.collections4.ListValuedMap
 List<V> get(K key) : 1
 List<V> remove(Object key) : 1

========================================
Fichier : map\AbstractHashedMap.java
========================================

Classe : org.apache.commons.collections4.map.AbstractHashedMap
protected void init() : 1
public V get(Object key) : 3
public int size() : 1
public boolean isEmpty() : 1
public boolean containsKey(Object key) : 3
public boolean containsValue(final Object value) : 8
public V put(final K key, final V value) : 3
public void putAll(final Map<? extends K, ? extends V> map) : 1
private void _putAll(final Map<? extends K, ? extends V> map) : 3
public V remove(Object key) : 3
public void clear() : 1
protected Object convertKey(final Object key) : 1
protected int hash(final Object key) : 1
protected boolean isEqualKey(final Object key1, final Object key2) : 1
protected boolean isEqualValue(final Object value1, final Object value2) : 1
protected int hashIndex(final int hashCode, final int dataSize) : 1
protected HashEntry<K, V> getEntry(Object key) : 3
protected void updateEntry(final HashEntry<K, V> entry, final V newValue) : 1
protected void reuseEntry(final HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) : 1
protected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) : 1
protected HashEntry<K, V> createEntry(final HashEntry<K, V> next, final int hashCode, final K key, final V value) : 1
protected void addEntry(final HashEntry<K, V> entry, final int hashIndex) : 1
protected void removeMapping(final HashEntry<K, V> entry, final int hashIndex, final HashEntry<K, V> previous) : 1
protected void removeEntry(final HashEntry<K, V> entry, final int hashIndex, final HashEntry<K, V> previous) : 2
protected void destroyEntry(final HashEntry<K, V> entry) : 1
protected void checkCapacity() : 3
protected void ensureCapacity(final int newCapacity) : 5
protected int calculateNewCapacity(final int proposedCapacity) : 4
protected int calculateThreshold(final int newCapacity, final float factor) : 1
protected HashEntry<K, V> entryNext(final HashEntry<K, V> entry) : 1
protected int entryHashCode(final HashEntry<K, V> entry) : 1
protected K entryKey(final HashEntry<K, V> entry) : 1
protected V entryValue(final HashEntry<K, V> entry) : 1
public MapIterator<K, V> mapIterator() : 2
public Set<Map.Entry<K, V>> entrySet() : 2
protected Iterator<Map.Entry<K, V>> createEntrySetIterator() : 2
public Set<K> keySet() : 2
protected Iterator<K> createKeySetIterator() : 2
public Collection<V> values() : 2
protected Iterator<V> createValuesIterator() : 2
protected void doWriteObject(final ObjectOutputStream out) throws IOException : 2
protected void doReadObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 2
protected AbstractHashedMap<K, V> clone() : 1
public boolean equals(final Object obj) : 4
public int hashCode() : 2
public String toString() : 4

Classe : org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator
public K next() : 1
public K getKey() : 2
public V getValue() : 2
public V setValue(final V value) : 2

Classe : org.apache.commons.collections4.map.AbstractHashedMap.EntrySet
public int size() : 1
public void clear() : 1
public boolean contains(final Object entry) : 2
public boolean remove(final Object obj) : 3
public Iterator<Map.Entry<K, V>> iterator() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.EntrySetIterator
public Map.Entry<K, V> next() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.KeySet
public int size() : 1
public void clear() : 1
public boolean contains(final Object key) : 1
public boolean remove(final Object key) : 1
public Iterator<K> iterator() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator
public K next() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.Values
public int size() : 1
public void clear() : 1
public boolean contains(final Object value) : 1
public Iterator<V> iterator() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.ValuesIterator
public V next() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry
public K getKey() : 2
public V getValue() : 1
public V setValue(final V value) : 1
public boolean equals(final Object obj) : 3
public int hashCode() : 1
public String toString() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.HashIterator
public boolean hasNext() : 1
protected HashEntry<K, V> nextEntry() : 4
protected HashEntry<K, V> currentEntry() : 1
public void remove() : 3
public String toString() : 2

========================================
Fichier : map\AbstractInputCheckedMapDecorator.java
========================================

Classe : org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator
protected abstract V checkSetValue(V value) : 1
protected boolean isSetValueChecking() : 1
public Set<Map.Entry<K, V>> entrySet() : 2

Classe : org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet
public Iterator<Map.Entry<K, V>> iterator() : 1
public Object[] toArray() : 2
public T[] toArray(final T[] array) : 5

Classe : org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySetIterator
public Map.Entry<K, V> next() : 1

Classe : org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.MapEntry
public V setValue(V value) : 1

========================================
Fichier : map\AbstractIterableMap.java
========================================

Classe : org.apache.commons.collections4.map.AbstractIterableMap
public MapIterator<K, V> mapIterator() : 1

========================================
Fichier : map\AbstractLinkedMap.java
========================================

Classe : org.apache.commons.collections4.map.AbstractLinkedMap
protected void init() : 1
public boolean containsValue(final Object value) : 6
public void clear() : 1
public K firstKey() : 2
public K lastKey() : 2
public K nextKey(final Object key) : 1
protected LinkEntry<K, V> getEntry(final Object key) : 1
public K previousKey(final Object key) : 1
protected LinkEntry<K, V> getEntry(final int index) : 6
protected void addEntry(final HashEntry<K, V> entry, final int hashIndex) : 1
protected LinkEntry<K, V> createEntry(final HashEntry<K, V> next, final int hashCode, final K key, final V value) : 1
protected void removeEntry(final HashEntry<K, V> entry, final int hashIndex, final HashEntry<K, V> previous) : 1
protected LinkEntry<K, V> entryBefore(final LinkEntry<K, V> entry) : 1
protected LinkEntry<K, V> entryAfter(final LinkEntry<K, V> entry) : 1
public OrderedMapIterator<K, V> mapIterator() : 2
protected Iterator<Map.Entry<K, V>> createEntrySetIterator() : 2
protected Iterator<K> createKeySetIterator() : 2
protected Iterator<V> createValuesIterator() : 2

Classe : org.apache.commons.collections4.map.AbstractLinkedMap.LinkMapIterator
public K next() : 1
public K previous() : 1
public K getKey() : 2
public V getValue() : 2
public V setValue(final V value) : 2

Classe : org.apache.commons.collections4.map.AbstractLinkedMap.EntrySetIterator
public Map.Entry<K, V> next() : 1
public Map.Entry<K, V> previous() : 1

Classe : org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator
public K next() : 1
public K previous() : 1

Classe : org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator
public V next() : 1
public V previous() : 1

Classe : org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry

Classe : org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator
public boolean hasNext() : 1
public boolean hasPrevious() : 1
protected LinkEntry<K, V> nextEntry() : 3
protected LinkEntry<K, V> previousEntry() : 3
protected LinkEntry<K, V> currentEntry() : 1
public void remove() : 3
public void reset() : 1
public String toString() : 2

========================================
Fichier : map\AbstractMapDecorator.java
========================================

Classe : org.apache.commons.collections4.map.AbstractMapDecorator
protected Map<K, V> decorated() : 1
public void clear() : 1
public boolean containsKey(final Object key) : 1
public boolean containsValue(final Object value) : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public V get(final Object key) : 1
public boolean isEmpty() : 1
public Set<K> keySet() : 1
public V put(final K key, final V value) : 1
public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
public V remove(final Object key) : 1
public int size() : 1
public Collection<V> values() : 1
public boolean equals(final Object object) : 2
public int hashCode() : 1
public String toString() : 1

========================================
Fichier : map\AbstractOrderedMapDecorator.java
========================================

Classe : org.apache.commons.collections4.map.AbstractOrderedMapDecorator
protected OrderedMap<K, V> decorated() : 1
public K firstKey() : 1
public K lastKey() : 1
public K nextKey(final K key) : 1
public K previousKey(final K key) : 1
public OrderedMapIterator<K, V> mapIterator() : 1

========================================
Fichier : map\AbstractReferenceMap.java
========================================

Classe : org.apache.commons.collections4.map.AbstractReferenceMap
protected void init() : 1
public int size() : 1
public boolean isEmpty() : 1
public boolean containsKey(final Object key) : 2
public boolean containsValue(final Object value) : 2
public V get(final Object key) : 2
public V put(final K key, final V value) : 1
public V remove(final Object key) : 2
public void clear() : 2
public MapIterator<K, V> mapIterator() : 1
public Set<Map.Entry<K, V>> entrySet() : 2
public Set<K> keySet() : 2
public Collection<V> values() : 2
protected void purgeBeforeRead() : 1
protected void purgeBeforeWrite() : 1
protected void purge() : 2
protected void purge(final Reference<?> ref) : 4
protected HashEntry<K, V> getEntry(final Object key) : 2
protected int hashEntry(final Object key, final Object value) : 1
protected boolean isEqualKey(final Object key1, Object key2) : 1
protected ReferenceEntry<K, V> createEntry(final HashEntry<K, V> next, final int hashCode, final K key, final V value) : 1
protected Iterator<Map.Entry<K, V>> createEntrySetIterator() : 1
protected Iterator<K> createKeySetIterator() : 1
protected Iterator<V> createValuesIterator() : 1
protected void doWriteObject(final ObjectOutputStream out) throws IOException : 2
protected void doReadObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 3
protected boolean isKeyType(final ReferenceStrength type) : 1
protected boolean isValueType(final ReferenceStrength type) : 1

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet
public Object[] toArray() : 1
public T[] toArray(final T[] arr) : 2

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet
public Object[] toArray() : 1
public T[] toArray(final T[] arr) : 2

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues
public Object[] toArray() : 1
public T[] toArray(final T[] arr) : 2

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry
public K getKey() : 1
public V getValue() : 1
public V setValue(final V obj) : 2
public boolean equals(final Object obj) : 4
public int hashCode() : 1
protected Object toReference(final ReferenceStrength type, final T referent, final int hash) : 4
protected void onPurge() : 1
protected boolean purge(final Reference<?> ref) : 4
protected ReferenceEntry<K, V> next() : 1
protected void nullValue() : 1

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator
public boolean hasNext() : 5
private void checkMod() : 2
private boolean nextNull() : 1
protected ReferenceEntry<K, V> nextEntry() : 2
protected ReferenceEntry<K, V> currentEntry() : 1
public void remove() : 2

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySetIterator
public Map.Entry<K, V> next() : 1

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySetIterator
public K next() : 1

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValuesIterator
public V next() : 1

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator
public K next() : 1
public K getKey() : 2
public V getValue() : 2
public V setValue(final V value) : 2

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef
public int hashCode() : 1
public boolean equals(final Object obj) : 4

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef
public int hashCode() : 1
public boolean equals(final Object obj) : 4

========================================
Fichier : map\AbstractSortedMapDecorator.java
========================================

Classe : org.apache.commons.collections4.map.AbstractSortedMapDecorator
protected SortedMap<K, V> decorated() : 1
public Comparator<? super K> comparator() : 1
public K firstKey() : 1
public K lastKey() : 1
public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
public SortedMap<K, V> headMap(final K toKey) : 1
public SortedMap<K, V> tailMap(final K fromKey) : 1
public K previousKey(final K key) : 1
public K nextKey(final K key) : 1
public OrderedMapIterator<K, V> mapIterator() : 1

Classe : org.apache.commons.collections4.map.AbstractSortedMapDecorator.SortedMapIterator
public synchronized void reset() : 1
public boolean hasPrevious() : 1
public K previous() : 1

========================================
Fichier : map\CaseInsensitiveMap.java
========================================

Classe : org.apache.commons.collections4.map.CaseInsensitiveMap
protected Object convertKey(final Object key) : 3
public CaseInsensitiveMap<K, V> clone() : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : map\CompositeMap.java
========================================

Classe : org.apache.commons.collections4.map.CompositeMap
public void setMutator(final MapMutator<K, V> mutator) : 1
public synchronized void addComposited(final Map<K, V> map) throws IllegalArgumentException : 5
public synchronized Map<K, V> removeComposited(final Map<K, V> map) : 3
public void clear() : 2
public boolean containsKey(final Object key) : 3
public boolean containsValue(final Object value) : 3
public Set<Map.Entry<K, V>> entrySet() : 2
public V get(final Object key) : 3
public boolean isEmpty() : 3
public Set<K> keySet() : 2
public V put(final K key, final V value) : 2
public void putAll(final Map<? extends K, ? extends V> map) : 2
public V remove(final Object key) : 3
public int size() : 2
public Collection<V> values() : 2
public boolean equals(final Object obj) : 2
public int hashCode() : 2

Classe : org.apache.commons.collections4.map.CompositeMap.MapMutator
 void resolveCollision(CompositeMap<K, V> composite, Map<K, V> existing, Map<K, V> added, Collection<K> intersect) : 1
 V put(CompositeMap<K, V> map, Map<K, V>[] composited, K key, V value) : 1
 void putAll(CompositeMap<K, V> map, Map<K, V>[] composited, Map<? extends K, ? extends V> mapToAdd) : 1

========================================
Fichier : map\DefaultedMap.java
========================================

Classe : org.apache.commons.collections4.map.DefaultedMap
public static DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue) : 1
public static DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory) : 1
public static Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public V get(final Object key) : 1

========================================
Fichier : map\EntrySetToMapIteratorAdapter.java
========================================

Classe : org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter
public K getKey() : 1
public V getValue() : 1
public V setValue(final V value) : 1
public boolean hasNext() : 1
public K next() : 1
public synchronized void reset() : 1
public void remove() : 1
protected synchronized Map.Entry<K, V> current() : 2

========================================
Fichier : map\FixedSizeMap.java
========================================

Classe : org.apache.commons.collections4.map.FixedSizeMap
public static FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public V put(final K key, final V value) : 2
public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 3
public void clear() : 1
public V remove(final Object key) : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public Set<K> keySet() : 1
public Collection<V> values() : 1
public boolean isFull() : 1
public int maxSize() : 1

========================================
Fichier : map\FixedSizeSortedMap.java
========================================

Classe : org.apache.commons.collections4.map.FixedSizeSortedMap
public static FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map) : 1
protected SortedMap<K, V> getSortedMap() : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public V put(final K key, final V value) : 2
public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 2
public void clear() : 1
public V remove(final Object key) : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public Set<K> keySet() : 1
public Collection<V> values() : 1
public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
public SortedMap<K, V> headMap(final K toKey) : 1
public SortedMap<K, V> tailMap(final K fromKey) : 1
public boolean isFull() : 1
public int maxSize() : 1

========================================
Fichier : map\Flat3Map.java
========================================

Classe : org.apache.commons.collections4.map.Flat3Map
public V get(final Object key) : 4
public int size() : 2
public boolean isEmpty() : 1
public boolean containsKey(final Object key) : 4
public boolean containsValue(final Object value) : 3
public V put(final K key, final V value) : 4
public void putAll(final Map<? extends K, ? extends V> map) : 5
private void convertToMap() : 1
protected AbstractHashedMap<K, V> createDelegateMap() : 1
public V remove(final Object key) : 5
public void clear() : 2
public MapIterator<K, V> mapIterator() : 3
public Set<Map.Entry<K, V>> entrySet() : 2
public Set<K> keySet() : 2
public Collection<V> values() : 2
private void writeObject(final ObjectOutputStream out) throws IOException : 2
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 3
public Flat3Map<K, V> clone() : 1
public boolean equals(final Object obj) : 6
public int hashCode() : 2
public String toString() : 3

Classe : org.apache.commons.collections4.map.Flat3Map.FlatMapIterator
public boolean hasNext() : 1
public K next() : 2
public void remove() : 2
public K getKey() : 2
public V getValue() : 2
public V setValue(final V value) : 2
public void reset() : 1
public String toString() : 2

Classe : org.apache.commons.collections4.map.Flat3Map.EntrySet
public int size() : 1
public void clear() : 1
public boolean remove(final Object obj) : 2
public Iterator<Map.Entry<K, V>> iterator() : 3

Classe : org.apache.commons.collections4.map.Flat3Map.FlatMapEntry
 void setRemoved(final boolean flag) : 1
public K getKey() : 2
public V getValue() : 2
public V setValue(final V value) : 2
public boolean equals(final Object obj) : 3
public int hashCode() : 2
public String toString() : 2

Classe : org.apache.commons.collections4.map.Flat3Map.EntryIterator
public boolean hasNext() : 1
public Map.Entry<K, V> nextEntry() : 2
public void remove() : 2

Classe : org.apache.commons.collections4.map.Flat3Map.EntrySetIterator
public Map.Entry<K, V> next() : 1

Classe : org.apache.commons.collections4.map.Flat3Map.KeySet
public int size() : 1
public void clear() : 1
public boolean contains(final Object key) : 1
public boolean remove(final Object key) : 1
public Iterator<K> iterator() : 3

Classe : org.apache.commons.collections4.map.Flat3Map.KeySetIterator
public K next() : 1

Classe : org.apache.commons.collections4.map.Flat3Map.Values
public int size() : 1
public void clear() : 1
public boolean contains(final Object value) : 1
public Iterator<V> iterator() : 3

Classe : org.apache.commons.collections4.map.Flat3Map.ValuesIterator
public V next() : 1

========================================
Fichier : map\HashedMap.java
========================================

Classe : org.apache.commons.collections4.map.HashedMap
public HashedMap<K, V> clone() : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : map\LazyMap.java
========================================

Classe : org.apache.commons.collections4.map.LazyMap
public static LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory) : 1
public static LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public V get(final Object key) : 2

========================================
Fichier : map\LazySortedMap.java
========================================

Classe : org.apache.commons.collections4.map.LazySortedMap
public static LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory) : 1
public static LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory) : 1
protected SortedMap<K, V> getSortedMap() : 1
public K firstKey() : 1
public K lastKey() : 1
public Comparator<? super K> comparator() : 1
public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
public SortedMap<K, V> headMap(final K toKey) : 1
public SortedMap<K, V> tailMap(final K fromKey) : 1

========================================
Fichier : map\LinkedMap.java
========================================

Classe : org.apache.commons.collections4.map.LinkedMap
public LinkedMap<K, V> clone() : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public K get(final int index) : 1
public V getValue(final int index) : 1
public int indexOf(Object key) : 3
public V remove(final int index) : 1
public List<K> asList() : 1

Classe : org.apache.commons.collections4.map.LinkedMap.LinkedMapList
public int size() : 1
public K get(final int index) : 1
public boolean contains(final Object obj) : 1
public int indexOf(final Object obj) : 1
public int lastIndexOf(final Object obj) : 1
public boolean containsAll(final Collection<?> coll) : 1
public K remove(final int index) : 1
public boolean remove(final Object obj) : 1
public boolean removeIf(final Predicate<? super K> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1
public void clear() : 1
public Object[] toArray() : 1
public T[] toArray(final T[] array) : 1
public Iterator<K> iterator() : 1
public ListIterator<K> listIterator() : 1
public ListIterator<K> listIterator(final int fromIndex) : 1
public List<K> subList(final int fromIndexInclusive, final int toIndexExclusive) : 1

========================================
Fichier : map\ListOrderedMap.java
========================================

Classe : org.apache.commons.collections4.map.ListOrderedMap
public static ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public OrderedMapIterator<K, V> mapIterator() : 1
public K firstKey() : 2
public K lastKey() : 2
public K nextKey(final Object key) : 2
public K previousKey(final Object key) : 2
public V put(final K key, final V value) : 2
public void putAll(final Map<? extends K, ? extends V> map) : 2
public void putAll(int index, final Map<? extends K, ? extends V> map) : 4
public V remove(final Object key) : 2
public void clear() : 1
public Set<K> keySet() : 1
public List<K> keyList() : 1
public Collection<V> values() : 1
public List<V> valueList() : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public String toString() : 4
public K get(final int index) : 1
public V getValue(final int index) : 1
public int indexOf(final Object key) : 1
public V setValue(final int index, final V value) : 1
public V put(int index, final K key, final V value) : 4
public V remove(final int index) : 1
public List<K> asList() : 1

Classe : org.apache.commons.collections4.map.ListOrderedMap.ValuesView
public int size() : 1
public boolean contains(final Object value) : 1
public void clear() : 1
public Iterator<V> iterator() : 1
public V get(final int index) : 1
public V set(final int index, final V value) : 1
public V remove(final int index) : 1

Classe : org.apache.commons.collections4.map.ListOrderedMap.KeySetView
public int size() : 1
public boolean contains(final Object value) : 1
public void clear() : 1
public Iterator<K> iterator() : 1

Classe : org.apache.commons.collections4.map.ListOrderedMap.EntrySetView
private Set<Map.Entry<K, V>> getEntrySet() : 2
public int size() : 1
public boolean isEmpty() : 1
public boolean contains(final Object obj) : 1
public boolean containsAll(final Collection<?> coll) : 1
public boolean remove(final Object obj) : 3
public void clear() : 1
public boolean equals(final Object obj) : 2
public int hashCode() : 1
public String toString() : 1
public Iterator<Map.Entry<K, V>> iterator() : 1

Classe : org.apache.commons.collections4.map.ListOrderedMap.ListOrderedIterator
public Map.Entry<K, V> next() : 1
public void remove() : 1

Classe : org.apache.commons.collections4.map.ListOrderedMap.ListOrderedMapEntry
public V getValue() : 1
public V setValue(final V value) : 1

Classe : org.apache.commons.collections4.map.ListOrderedMap.ListOrderedMapIterator
public boolean hasNext() : 1
public K next() : 1
public boolean hasPrevious() : 1
public K previous() : 1
public void remove() : 2
public K getKey() : 2
public V getValue() : 2
public V setValue(final V value) : 2
public void reset() : 1
public String toString() : 2

========================================
Fichier : map\LRUMap.java
========================================

Classe : org.apache.commons.collections4.map.LRUMap
public V get(final Object key) : 1
public V get(final Object key, final boolean updateToMRU) : 3
protected void moveToMRU(final LinkEntry<K, V> entry) : 3
protected void updateEntry(final HashEntry<K, V> entry, final V newValue) : 1
protected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) : 8
protected void reuseMapping(final LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) : 1
protected boolean removeLRU(final LinkEntry<K, V> entry) : 1
public boolean isFull() : 1
public int maxSize() : 1
public boolean isScanUntilRemovable() : 1
public LRUMap<K, V> clone() : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
protected void doWriteObject(final ObjectOutputStream out) throws IOException : 1
protected void doReadObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : map\MultiKeyMap.java
========================================

Classe : org.apache.commons.collections4.map.MultiKeyMap
public static MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map) : 2
public V get(final Object key1, final Object key2) : 3
public boolean containsKey(final Object key1, final Object key2) : 3
public V put(final K key1, final K key2, final V value) : 3
public V removeMultiKey(final Object key1, final Object key2) : 3
protected int hash(final Object key1, final Object key2) : 3
protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry, final Object key1, final Object key2) : 1
public V get(final Object key1, final Object key2, final Object key3) : 3
public boolean containsKey(final Object key1, final Object key2, final Object key3) : 3
public V put(final K key1, final K key2, final K key3, final V value) : 3
public V removeMultiKey(final Object key1, final Object key2, final Object key3) : 3
protected int hash(final Object key1, final Object key2, final Object key3) : 4
protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry, final Object key1, final Object key2, final Object key3) : 1
public V get(final Object key1, final Object key2, final Object key3, final Object key4) : 3
public boolean containsKey(final Object key1, final Object key2, final Object key3, final Object key4) : 3
public V put(final K key1, final K key2, final K key3, final K key4, final V value) : 3
public V removeMultiKey(final Object key1, final Object key2, final Object key3, final Object key4) : 3
protected int hash(final Object key1, final Object key2, final Object key3, final Object key4) : 5
protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry, final Object key1, final Object key2, final Object key3, final Object key4) : 1
public V get(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) : 3
public boolean containsKey(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) : 3
public V put(final K key1, final K key2, final K key3, final K key4, final K key5, final V value) : 3
public V removeMultiKey(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) : 3
protected int hash(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) : 6
protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry, final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) : 1
public boolean removeAll(final Object key1) : 3
public boolean removeAll(final Object key1, final Object key2) : 3
public boolean removeAll(final Object key1, final Object key2, final Object key3) : 3
public boolean removeAll(final Object key1, final Object key2, final Object key3, final Object key4) : 3
protected void checkKey(final MultiKey<?> key) : 1
public MultiKeyMap<K, V> clone() : 1
public V put(final MultiKey<? extends K> key, final V value) : 1
public void putAll(final Map<? extends MultiKey<? extends K>, ? extends V> mapToCopy) : 2
public MapIterator<MultiKey<? extends K>, V> mapIterator() : 1
protected AbstractHashedMap<MultiKey<? extends K>, V> decorated() : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : map\MultiValueMap.java
========================================

Classe : org.apache.commons.collections4.map.MultiValueMap
public static MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map) : 1
public static MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass) : 1
public static MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public void clear() : 1
public boolean removeMapping(final Object key, final Object value) : 4
public boolean containsValue(final Object value) : 4
public Object put(final K key, final Object value) : 3
public void putAll(final Map<? extends K, ?> map) : 4
public Set<Entry<K, Object>> entrySet() : 1
public Collection<Object> values() : 1
public boolean containsValue(final Object key, final Object value) : 2
public Collection<V> getCollection(final Object key) : 1
public int size(final Object key) : 2
public boolean putAll(final K key, final Collection<V> values) : 4
public Iterator<V> iterator(final Object key) : 2
public Iterator<Entry<K, V>> iterator() : 1
public int totalSize() : 2
protected Collection<V> createCollection(final int size) : 1

Classe : org.apache.commons.collections4.map.MultiValueMap.Values
public Iterator<V> iterator() : 2
public int size() : 1
public void clear() : 1

Classe : org.apache.commons.collections4.map.MultiValueMap.ValuesIterator
public void remove() : 2
public boolean hasNext() : 1
public V next() : 1

Classe : org.apache.commons.collections4.map.MultiValueMap.ReflectionFactory
public T create() : 1
private void readObject(final ObjectInputStream is) throws IOException, ClassNotFoundException : 2

========================================
Fichier : map\package-info.java
========================================

========================================
Fichier : map\PassiveExpiringMap.java
========================================

Classe : org.apache.commons.collections4.map.PassiveExpiringMap
private static long validateAndConvertToMillis(final long timeToLive, final TimeUnit timeUnit) : 1
public void clear() : 1
public boolean containsKey(final Object key) : 1
public boolean containsValue(final Object value) : 1
public Set<Entry<K, V>> entrySet() : 1
public V get(final Object key) : 1
public boolean isEmpty() : 1
private boolean isExpired(final long now, final Long expirationTimeObject) : 2
public Set<K> keySet() : 1
private long now() : 1
public V put(final K key, final V value) : 1
public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 2
public V remove(final Object key) : 1
private void removeAllExpired(final long nowMillis) : 3
private void removeIfExpired(final Object key, final long nowMillis) : 2
public int size() : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
public Collection<V> values() : 1

Classe : org.apache.commons.collections4.map.PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy
public long expirationTime(final K key, final V value) : 3

Classe : org.apache.commons.collections4.map.PassiveExpiringMap.ExpirationPolicy
 long expirationTime(K key, V value) : 1

========================================
Fichier : map\PredicatedMap.java
========================================

Classe : org.apache.commons.collections4.map.PredicatedMap
public static PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
protected void validate(final K key, final V value) : 3
protected V checkSetValue(final V value) : 2
protected boolean isSetValueChecking() : 1
public V put(final K key, final V value) : 1
public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 2

========================================
Fichier : map\PredicatedSortedMap.java
========================================

Classe : org.apache.commons.collections4.map.PredicatedSortedMap
public static PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate) : 1
protected SortedMap<K, V> getSortedMap() : 1
public K firstKey() : 1
public K lastKey() : 1
public Comparator<? super K> comparator() : 1
public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
public SortedMap<K, V> headMap(final K toKey) : 1
public SortedMap<K, V> tailMap(final K fromKey) : 1

========================================
Fichier : map\ReferenceIdentityMap.java
========================================

Classe : org.apache.commons.collections4.map.ReferenceIdentityMap
protected int hash(final Object key) : 1
protected int hashEntry(final Object key, final Object value) : 1
protected boolean isEqualKey(final Object key1, Object key2) : 1
protected boolean isEqualValue(final Object value1, final Object value2) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : map\ReferenceMap.java
========================================

Classe : org.apache.commons.collections4.map.ReferenceMap
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : map\SingletonMap.java
========================================

Classe : org.apache.commons.collections4.map.SingletonMap
public K getKey() : 1
public V getValue() : 1
public V setValue(final V value) : 1
public boolean isFull() : 1
public int maxSize() : 1
public V get(final Object key) : 2
public int size() : 1
public boolean isEmpty() : 1
public boolean containsKey(final Object key) : 1
public boolean containsValue(final Object value) : 1
public V put(final K key, final V value) : 2
public void putAll(final Map<? extends K, ? extends V> map) : 1
public V remove(final Object key) : 1
public void clear() : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public Set<K> keySet() : 1
public Collection<V> values() : 1
public OrderedMapIterator<K, V> mapIterator() : 1
public K firstKey() : 1
public K lastKey() : 1
public K nextKey(final K key) : 1
public K previousKey(final K key) : 1
protected boolean isEqualKey(final Object key) : 1
protected boolean isEqualValue(final Object value) : 1
public SingletonMap<K, V> clone() : 1
public boolean equals(final Object obj) : 4
public int hashCode() : 1
public String toString() : 1

Classe : org.apache.commons.collections4.map.SingletonMap.SingletonMapIterator
public boolean hasNext() : 1
public K next() : 2
public boolean hasPrevious() : 1
public K previous() : 2
public void remove() : 1
public K getKey() : 2
public V getValue() : 2
public V setValue(final V value) : 2
public void reset() : 1
public String toString() : 2

Classe : org.apache.commons.collections4.map.SingletonMap.SingletonValues
public int size() : 1
public boolean isEmpty() : 1
public boolean contains(final Object object) : 1
public void clear() : 1
public Iterator<V> iterator() : 1

========================================
Fichier : map\StaticBucketMap.java
========================================

Classe : org.apache.commons.collections4.map.StaticBucketMap
private int getHash(final Object key) : 2
public int size() : 2
public boolean isEmpty() : 1
public V get(final Object key) : 1
public boolean containsKey(final Object key) : 1
public boolean containsValue(final Object value) : 2
public V put(final K key, final V value) : 1
public V remove(final Object key) : 1
public Set<K> keySet() : 1
public Collection<V> values() : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public void putAll(final Map<? extends K, ? extends V> map) : 2
public void clear() : 2
public boolean equals(final Object obj) : 3
public int hashCode() : 2
public void atomic(final Runnable runnable) : 1
private void atomic(final Runnable r, final int bucket) : 2

Classe : org.apache.commons.collections4.map.StaticBucketMap.Node
public K getKey() : 1
public V getValue() : 1
public int hashCode() : 1
public boolean equals(final Object obj) : 3
public V setValue(final V obj) : 1

Classe : org.apache.commons.collections4.map.StaticBucketMap.Lock

Classe : org.apache.commons.collections4.map.StaticBucketMap.BaseIterator
public boolean hasNext() : 3
protected Map.Entry<K, V> nextEntry() : 2
public void remove() : 2

Classe : org.apache.commons.collections4.map.StaticBucketMap.EntryIterator
public Map.Entry<K, V> next() : 1

Classe : org.apache.commons.collections4.map.StaticBucketMap.ValueIterator
public V next() : 1

Classe : org.apache.commons.collections4.map.StaticBucketMap.KeyIterator
public K next() : 1

Classe : org.apache.commons.collections4.map.StaticBucketMap.EntrySet
public int size() : 1
public void clear() : 1
public Iterator<Map.Entry<K, V>> iterator() : 1
public boolean contains(final Object obj) : 1
public boolean remove(final Object obj) : 2

Classe : org.apache.commons.collections4.map.StaticBucketMap.KeySet
public int size() : 1
public void clear() : 1
public Iterator<K> iterator() : 1
public boolean contains(final Object obj) : 1
public boolean remove(final Object obj) : 1

Classe : org.apache.commons.collections4.map.StaticBucketMap.Values
public int size() : 1
public void clear() : 1
public Iterator<V> iterator() : 1

========================================
Fichier : map\TransformedMap.java
========================================

Classe : org.apache.commons.collections4.map.TransformedMap
public static TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 1
public static TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 2
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
protected K transformKey(final K object) : 2
protected V transformValue(final V object) : 2
protected Map<K, V> transformMap(final Map<? extends K, ? extends V> map) : 3
protected V checkSetValue(final V value) : 1
protected boolean isSetValueChecking() : 1
public V put(K key, V value) : 1
public void putAll(Map<? extends K, ? extends V> mapToCopy) : 1

========================================
Fichier : map\TransformedSortedMap.java
========================================

Classe : org.apache.commons.collections4.map.TransformedSortedMap
public static TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 1
public static TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 2
protected SortedMap<K, V> getSortedMap() : 1
public K firstKey() : 1
public K lastKey() : 1
public Comparator<? super K> comparator() : 1
public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
public SortedMap<K, V> headMap(final K toKey) : 1
public SortedMap<K, V> tailMap(final K fromKey) : 1

========================================
Fichier : map\UnmodifiableEntrySet.java
========================================

Classe : org.apache.commons.collections4.map.UnmodifiableEntrySet
public static Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set) : 2
public boolean add(final Map.Entry<K, V> object) : 1
public boolean addAll(final Collection<? extends Map.Entry<K, V>> coll) : 1
public void clear() : 1
public boolean remove(final Object object) : 1
public boolean removeIf(final Predicate<? super Map.Entry<K, V>> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1
public Iterator<Map.Entry<K, V>> iterator() : 1
public Object[] toArray() : 2
public T[] toArray(final T[] array) : 5

Classe : org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntrySetIterator
public Map.Entry<K, V> next() : 1
public void remove() : 1

Classe : org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry
public V setValue(final V obj) : 1

========================================
Fichier : map\UnmodifiableMap.java
========================================

Classe : org.apache.commons.collections4.map.UnmodifiableMap
public static Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map) : 2
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public void clear() : 1
public V put(final K key, final V value) : 1
public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
public V remove(final Object key) : 1
public MapIterator<K, V> mapIterator() : 2
public Set<Map.Entry<K, V>> entrySet() : 1
public Set<K> keySet() : 1
public Collection<V> values() : 1

========================================
Fichier : map\UnmodifiableOrderedMap.java
========================================

Classe : org.apache.commons.collections4.map.UnmodifiableOrderedMap
public static OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map) : 2
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public OrderedMapIterator<K, V> mapIterator() : 1
public void clear() : 1
public V put(final K key, final V value) : 1
public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
public V remove(final Object key) : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public Set<K> keySet() : 1
public Collection<V> values() : 1

========================================
Fichier : map\UnmodifiableSortedMap.java
========================================

Classe : org.apache.commons.collections4.map.UnmodifiableSortedMap
public static SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map) : 2
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public void clear() : 1
public V put(final K key, final V value) : 1
public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
public V remove(final Object key) : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public Set<K> keySet() : 1
public Collection<V> values() : 1
public K firstKey() : 1
public K lastKey() : 1
public Comparator<? super K> comparator() : 1
public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
public SortedMap<K, V> headMap(final K toKey) : 1
public SortedMap<K, V> tailMap(final K fromKey) : 1

========================================
Fichier : MapIterator.java
========================================

Classe : org.apache.commons.collections4.MapIterator
 boolean hasNext() : 1
 K next() : 1
 K getKey() : 1
 V getValue() : 1
 void remove() : 1
 V setValue(V value) : 1

========================================
Fichier : MapUtils.java
========================================

Classe : org.apache.commons.collections4.MapUtils
private static R applyDefaultFunction(final Map<? super K, ?> map, final K key, final BiFunction<Map<? super K, ?>, K, R> getFunction, final Function<K, R> defaultFunction) : 1
private static R applyDefaultFunction(final Map<? super K, ?> map, final K key, final BiFunction<Map<? super K, ?>, K, R> getFunction, final Function<K, R> defaultFunction, final R defaultValue) : 2
private static R applyDefaultValue(final Map<? super K, ?> map, final K key, final BiFunction<Map<? super K, ?>, K, R> getFunction, final R defaultValue) : 1
public static void debugPrint(final PrintStream out, final Object label, final Map<?, ?> map) : 1
public static Map<K, V> emptyIfNull(final Map<K, V> map) : 1
public static IterableMap<K, V> fixedSizeMap(final Map<K, V> map) : 1
public static SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map) : 1
public static Boolean getBoolean(final Map<? super K, ?> map, final K key) : 6
public static Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue) : 1
public static Boolean getBoolean(final Map<? super K, ?> map, final K key, final Function<K, Boolean> defaultFunction) : 1
public static boolean getBooleanValue(final Map<? super K, ?> map, final K key) : 1
public static boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue) : 1
public static boolean getBooleanValue(final Map<? super K, ?> map, final K key, final Function<K, Boolean> defaultFunction) : 1
public static Byte getByte(final Map<? super K, ?> map, final K key) : 3
public static Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue) : 1
public static Byte getByte(final Map<? super K, ?> map, final K key, final Function<K, Byte> defaultFunction) : 1
public static byte getByteValue(final Map<? super K, ?> map, final K key) : 1
public static byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue) : 1
public static byte getByteValue(final Map<? super K, ?> map, final K key, final Function<K, Byte> defaultFunction) : 1
public static Double getDouble(final Map<? super K, ?> map, final K key) : 3
public static Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue) : 1
public static Double getDouble(final Map<? super K, ?> map, final K key, final Function<K, Double> defaultFunction) : 1
public static double getDoubleValue(final Map<? super K, ?> map, final K key) : 1
public static double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue) : 1
public static double getDoubleValue(final Map<? super K, ?> map, final K key, final Function<K, Double> defaultFunction) : 1
public static Float getFloat(final Map<? super K, ?> map, final K key) : 3
public static Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue) : 1
public static Float getFloat(final Map<? super K, ?> map, final K key, final Function<K, Float> defaultFunction) : 1
public static float getFloatValue(final Map<? super K, ?> map, final K key) : 1
public static float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue) : 1
public static float getFloatValue(final Map<? super K, ?> map, final K key, final Function<K, Float> defaultFunction) : 1
public static Integer getInteger(final Map<? super K, ?> map, final K key) : 3
public static Integer getInteger(final Map<? super K, ?> map, final K key, final Function<K, Integer> defaultFunction) : 1
public static Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue) : 1
public static int getIntValue(final Map<? super K, ?> map, final K key) : 1
public static int getIntValue(final Map<? super K, ?> map, final K key, final Function<K, Integer> defaultFunction) : 1
public static int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue) : 1
public static Long getLong(final Map<? super K, ?> map, final K key) : 3
public static Long getLong(final Map<? super K, ?> map, final K key, final Function<K, Long> defaultFunction) : 1
public static Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue) : 1
public static long getLongValue(final Map<? super K, ?> map, final K key) : 1
public static long getLongValue(final Map<? super K, ?> map, final K key, final Function<K, Long> defaultFunction) : 1
public static long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue) : 1
public static Map<?, ?> getMap(final Map<? super K, ?> map, final K key) : 3
public static Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Function<K, Map<?, ?>> defaultFunction) : 1
public static Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue) : 1
public static Number getNumber(final Map<? super K, ?> map, final K key) : 5
public static Number getNumber(final Map<? super K, ?> map, final K key, final Function<K, Number> defaultFunction) : 1
public static Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue) : 1
public static V getObject(final Map<? super K, V> map, final K key) : 2
public static V getObject(final Map<K, V> map, final K key, final V defaultValue) : 3
public static Short getShort(final Map<? super K, ?> map, final K key) : 3
public static Short getShort(final Map<? super K, ?> map, final K key, final Function<K, Short> defaultFunction) : 1
public static Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue) : 1
public static short getShortValue(final Map<? super K, ?> map, final K key) : 1
public static short getShortValue(final Map<? super K, ?> map, final K key, final Function<K, Short> defaultFunction) : 1
public static short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue) : 1
public static String getString(final Map<? super K, ?> map, final K key) : 3
public static String getString(final Map<? super K, ?> map, final K key, final Function<K, String> defaultFunction) : 1
public static String getString(final Map<? super K, ?> map, final K key, final String defaultValue) : 1
public static Map<V, K> invertMap(final Map<K, V> map) : 2
public static boolean isEmpty(final Map<?, ?> map) : 1
public static boolean isNotEmpty(final Map<?, ?> map) : 1
public static IterableMap<K, V> iterableMap(final Map<K, V> map) : 1
public static IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap) : 1
public static IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory) : 1
public static IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory) : 1
public static SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory) : 1
public static SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory) : 1
public static MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map) : 1
public static MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass) : 1
public static MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory) : 1
public static OrderedMap<K, V> orderedMap(final Map<K, V> map) : 1
public static void populateMap(final Map<K, V> map, final Iterable<? extends E> elements, final Transformer<E, K> keyTransformer, final Transformer<E, V> valueTransformer) : 2
public static void populateMap(final Map<K, V> map, final Iterable<? extends V> elements, final Transformer<V, K> keyTransformer) : 1
public static void populateMap(final MultiMap<K, V> map, final Iterable<? extends E> elements, final Transformer<E, K> keyTransformer, final Transformer<E, V> valueTransformer) : 2
public static void populateMap(final MultiMap<K, V> map, final Iterable<? extends V> elements, final Transformer<V, K> keyTransformer) : 1
public static IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred) : 1
public static SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred) : 1
private static void printIndent(final PrintStream out, final int indent) : 2
public static Map<K, V> putAll(final Map<K, V> map, final Object[] array) : 4
public static void safeAddToMap(final Map<? super K, Object> map, final K key, final Object value) throws NullPointerException : 1
public static int size(final Map<?, ?> map) : 1
public static Map<K, V> synchronizedMap(final Map<K, V> map) : 1
public static SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map) : 1
public static Map<String, Object> toMap(final ResourceBundle resourceBundle) : 2
public static Properties toProperties(final Map<K, V> map) : 3
public static IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 1
public static SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 1
public static Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map) : 1
public static SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map) : 1
public static void verbosePrint(final PrintStream out, final Object label, final Map<?, ?> map) : 1
private static void verbosePrintInternal(final PrintStream out, final Object label, final Map<?, ?> map, final Deque<Map<?, ?>> lineage, final boolean debug) : 8

========================================
Fichier : multimap\AbstractListValuedMap.java
========================================

Classe : org.apache.commons.collections4.multimap.AbstractListValuedMap
protected Map<K, List<V>> getMap() : 1
protected abstract List<V> createCollection() : 1
public List<V> get(final K key) : 1
 List<V> wrappedCollection(final K key) : 1
public List<V> remove(final Object key) : 1

Classe : org.apache.commons.collections4.multimap.AbstractListValuedMap.WrappedList
protected List<V> getMapping() : 1
public void add(final int index, final V value) : 2
public boolean addAll(final int index, final Collection<? extends V> c) : 3
public V get(final int index) : 1
public int indexOf(final Object o) : 1
public int lastIndexOf(final Object o) : 1
public ListIterator<V> listIterator() : 1
public ListIterator<V> listIterator(final int index) : 1
public V remove(final int index) : 2
public V set(final int index, final V value) : 1
public List<V> subList(final int fromIndex, final int toIndex) : 1
public boolean equals(final Object other) : 3
public int hashCode() : 1

Classe : org.apache.commons.collections4.multimap.AbstractListValuedMap.ValuesListIterator
public void add(final V value) : 2
public boolean hasNext() : 1
public boolean hasPrevious() : 1
public V next() : 1
public int nextIndex() : 1
public V previous() : 1
public int previousIndex() : 1
public void remove() : 2
public void set(final V value) : 1

========================================
Fichier : multimap\AbstractMultiValuedMap.java
========================================

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap
protected Map<K, ? extends Collection<V>> getMap() : 1
protected void setMap(final Map<K, ? extends Collection<V>> map) : 1
protected abstract Collection<V> createCollection() : 1
public boolean containsKey(final Object key) : 1
public boolean containsValue(final Object value) : 1
public boolean containsMapping(final Object key, final Object value) : 1
public Collection<Entry<K, V>> entries() : 1
public Collection<V> get(final K key) : 1
 Collection<V> wrappedCollection(final K key) : 1
public Collection<V> remove(final Object key) : 1
public boolean removeMapping(final Object key, final Object value) : 3
public boolean isEmpty() : 1
public Set<K> keySet() : 1
public int size() : 2
public Collection<V> values() : 1
public void clear() : 1
public boolean put(final K key, final V value) : 3
public boolean putAll(final Map<? extends K, ? extends V> map) : 2
public boolean putAll(final MultiValuedMap<? extends K, ? extends V> map) : 2
public MultiSet<K> keys() : 2
public Map<K, Collection<V>> asMap() : 1
public boolean putAll(final K key, final Iterable<? extends V> values) : 2
public MapIterator<K, V> mapIterator() : 2
public boolean equals(final Object obj) : 3
public int hashCode() : 1
public String toString() : 1
protected void doWriteObject(final ObjectOutputStream out) throws IOException : 3
protected void doReadObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 3

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.WrappedCollection
protected Collection<V> getMapping() : 1
public boolean add(final V value) : 2
public boolean addAll(final Collection<? extends V> other) : 2
public void clear() : 2
public Iterator<V> iterator() : 2
public int size() : 1
public boolean contains(final Object obj) : 1
public boolean containsAll(final Collection<?> other) : 1
public boolean isEmpty() : 1
public boolean remove(final Object item) : 3
public boolean removeAll(final Collection<?> c) : 3
public boolean retainAll(final Collection<?> c) : 3
public Object[] toArray() : 2
public T[] toArray(final T[] a) : 2
public String toString() : 2

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.KeysMultiSet
public boolean contains(final Object o) : 1
public boolean isEmpty() : 1
public int size() : 1
protected int uniqueElements() : 1
public int getCount(final Object object) : 2
protected Iterator<MultiSet.Entry<K>> createEntrySetIterator() : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.KeysMultiSet.MapEntryTransformer
public MultiSet.Entry<K> transform(final Map.Entry<K, Collection<V>> mapEntry) : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.EntryValues
public Iterator<Entry<K, V>> iterator() : 1
public int size() : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.MultiValuedMapEntry
public V setValue(final V value) : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.MultiValuedMapIterator
public boolean hasNext() : 1
public K next() : 1
public K getKey() : 2
public V getValue() : 2
public void remove() : 1
public V setValue(final V value) : 2

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.Values
public Iterator<V> iterator() : 2
public int size() : 1
public void clear() : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.ValuesIterator
public void remove() : 2
public boolean hasNext() : 1
public V next() : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.AsMap
public Set<Map.Entry<K, Collection<V>>> entrySet() : 1
public boolean containsKey(final Object key) : 1
public Collection<V> get(final Object key) : 2
public Set<K> keySet() : 1
public int size() : 1
public Collection<V> remove(final Object key) : 2
public boolean equals(final Object object) : 1
public int hashCode() : 1
public String toString() : 1
public void clear() : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.AsMap.AsMapEntrySet
public Iterator<Map.Entry<K, Collection<V>>> iterator() : 1
public int size() : 1
public void clear() : 1
public boolean contains(final Object o) : 1
public boolean remove(final Object o) : 2

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.AsMap.AsMapEntrySetIterator
public Map.Entry<K, Collection<V>> next() : 1

========================================
Fichier : multimap\AbstractMultiValuedMapDecorator.java
========================================

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator
protected MultiValuedMap<K, V> decorated() : 1
public int size() : 1
public boolean isEmpty() : 1
public boolean containsKey(final Object key) : 1
public boolean containsValue(final Object value) : 1
public boolean containsMapping(final Object key, final Object value) : 1
public Collection<V> get(final K key) : 1
public Collection<V> remove(final Object key) : 1
public boolean removeMapping(final Object key, final Object item) : 1
public void clear() : 1
public boolean put(final K key, final V value) : 1
public Set<K> keySet() : 1
public Collection<Entry<K, V>> entries() : 1
public MultiSet<K> keys() : 1
public Collection<V> values() : 1
public Map<K, Collection<V>> asMap() : 1
public boolean putAll(final K key, final Iterable<? extends V> values) : 1
public boolean putAll(final Map<? extends K, ? extends V> map) : 1
public boolean putAll(final MultiValuedMap<? extends K, ? extends V> map) : 1
public MapIterator<K, V> mapIterator() : 1
public boolean equals(final Object object) : 2
public int hashCode() : 1
public String toString() : 1

========================================
Fichier : multimap\AbstractSetValuedMap.java
========================================

Classe : org.apache.commons.collections4.multimap.AbstractSetValuedMap
protected Map<K, Set<V>> getMap() : 1
protected abstract Set<V> createCollection() : 1
public Set<V> get(final K key) : 1
 Set<V> wrappedCollection(final K key) : 1
public Set<V> remove(final Object key) : 1

Classe : org.apache.commons.collections4.multimap.AbstractSetValuedMap.WrappedSet
public boolean equals(final Object other) : 3
public int hashCode() : 1

========================================
Fichier : multimap\ArrayListValuedHashMap.java
========================================

Classe : org.apache.commons.collections4.multimap.ArrayListValuedHashMap
protected ArrayList<V> createCollection() : 1
public void trimToSize() : 2
private void writeObject(final ObjectOutputStream oos) throws IOException : 1
private void readObject(final ObjectInputStream ois) throws IOException, ClassNotFoundException : 1

========================================
Fichier : multimap\HashSetValuedHashMap.java
========================================

Classe : org.apache.commons.collections4.multimap.HashSetValuedHashMap
protected HashSet<V> createCollection() : 1
private void writeObject(final ObjectOutputStream oos) throws IOException : 1
private void readObject(final ObjectInputStream ois) throws IOException, ClassNotFoundException : 1

========================================
Fichier : multimap\package-info.java
========================================

========================================
Fichier : multimap\TransformedMultiValuedMap.java
========================================

Classe : org.apache.commons.collections4.multimap.TransformedMultiValuedMap
public static TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 1
public static TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 2
protected K transformKey(final K object) : 2
protected V transformValue(final V object) : 2
public boolean put(final K key, final V value) : 1
public boolean putAll(final K key, final Iterable<? extends V> values) : 1
public boolean putAll(final Map<? extends K, ? extends V> map) : 2
public boolean putAll(final MultiValuedMap<? extends K, ? extends V> map) : 2

========================================
Fichier : multimap\UnmodifiableMultiValuedMap.java
========================================

Classe : org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap
public static UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map) : 2
public Collection<V> remove(final Object key) : 1
public boolean removeMapping(final Object key, final Object item) : 1
public void clear() : 1
public Collection<V> get(final K key) : 1
public boolean put(final K key, final V value) : 1
public Set<K> keySet() : 1
public Collection<Entry<K, V>> entries() : 1
public MultiSet<K> keys() : 1
public Collection<V> values() : 1
public Map<K, Collection<V>> asMap() : 1
public MapIterator<K, V> mapIterator() : 1
public boolean putAll(final K key, final Iterable<? extends V> values) : 1
public boolean putAll(final Map<? extends K, ? extends V> map) : 1
public boolean putAll(final MultiValuedMap<? extends K, ? extends V> map) : 1

========================================
Fichier : MultiMap.java
========================================

Classe : org.apache.commons.collections4.MultiMap
 boolean removeMapping(K key, V item) : 1
 int size() : 1
 Object get(Object key) : 1
 boolean containsValue(Object value) : 1
 Object put(K key, Object value) : 1
 Object remove(Object key) : 1
 Collection<Object> values() : 1

========================================
Fichier : MultiMapUtils.java
========================================

Classe : org.apache.commons.collections4.MultiMapUtils
public static MultiValuedMap<K, V> emptyMultiValuedMap() : 1
public static MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map) : 1
public static boolean isEmpty(final MultiValuedMap<?, ?> map) : 1
public static Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key) : 2
public static List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key) : 3
public static Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key) : 3
public static Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key) : 3
public static ListValuedMap<K, V> newListValuedHashMap() : 1
public static SetValuedMap<K, V> newSetValuedHashMap() : 1
public static MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map) : 1
public static MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 1

========================================
Fichier : multiset\AbstractMapMultiSet.java
========================================

Classe : org.apache.commons.collections4.multiset.AbstractMapMultiSet
protected Map<E, MutableInteger> getMap() : 1
protected void setMap(final Map<E, MutableInteger> map) : 1
public int size() : 1
public boolean isEmpty() : 1
public int getCount(final Object object) : 2
public boolean contains(final Object object) : 1
public Iterator<E> iterator() : 1
public int add(final E object, final int occurrences) : 4
public void clear() : 1
public int remove(final Object object, final int occurrences) : 5
protected Iterator<E> createUniqueSetIterator() : 1
protected int uniqueElements() : 1
protected Iterator<Entry<E>> createEntrySetIterator() : 1
protected void doWriteObject(final ObjectOutputStream out) throws IOException : 2
protected void doReadObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 2
public Object[] toArray() : 3
public T[] toArray(T[] array) : 5
public boolean equals(final Object object) : 6
public int hashCode() : 2

Classe : org.apache.commons.collections4.multiset.AbstractMapMultiSet.MapBasedMultiSetIterator
public boolean hasNext() : 1
public E next() : 3
public void remove() : 4

Classe : org.apache.commons.collections4.multiset.AbstractMapMultiSet.MutableInteger
public boolean equals(final Object obj) : 2
public int hashCode() : 1

Classe : org.apache.commons.collections4.multiset.AbstractMapMultiSet.UniqueSetIterator
public E next() : 1
public void remove() : 2

Classe : org.apache.commons.collections4.multiset.AbstractMapMultiSet.EntrySetIterator
public boolean hasNext() : 1
public Entry<E> next() : 1
public void remove() : 2

Classe : org.apache.commons.collections4.multiset.AbstractMapMultiSet.MultiSetEntry
public E getElement() : 1
public int getCount() : 1

========================================
Fichier : multiset\AbstractMultiSet.java
========================================

Classe : org.apache.commons.collections4.multiset.AbstractMultiSet
public int size() : 2
public int getCount(final Object object) : 3
public int setCount(final E object, final int count) : 3
public boolean contains(final Object object) : 1
public Iterator<E> iterator() : 1
public boolean add(final E object) : 1
public int add(final E object, final int occurrences) : 1
public void clear() : 2
public boolean remove(final Object object) : 1
public int remove(final Object object, final int occurrences) : 1
public boolean removeAll(final Collection<?> coll) : 2
public Set<E> uniqueSet() : 2
protected Set<E> createUniqueSet() : 1
protected Iterator<E> createUniqueSetIterator() : 1
public Set<Entry<E>> entrySet() : 2
protected Set<Entry<E>> createEntrySet() : 1
protected abstract int uniqueElements() : 1
protected abstract Iterator<Entry<E>> createEntrySetIterator() : 1
protected void doWriteObject(final ObjectOutputStream out) throws IOException : 2
protected void doReadObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 2
public boolean equals(final Object object) : 6
public int hashCode() : 1
public String toString() : 1

Classe : org.apache.commons.collections4.multiset.AbstractMultiSet.MultiSetIterator
public boolean hasNext() : 1
public E next() : 2
public void remove() : 3

Classe : org.apache.commons.collections4.multiset.AbstractMultiSet.UniqueSet
public Iterator<E> iterator() : 1
public boolean contains(final Object key) : 1
public boolean containsAll(final Collection<?> coll) : 1
public boolean remove(final Object key) : 1
public int size() : 1
public void clear() : 1

Classe : org.apache.commons.collections4.multiset.AbstractMultiSet.EntrySet
public int size() : 1
public Iterator<Entry<E>> iterator() : 1
public boolean contains(final Object obj) : 2
public boolean remove(final Object obj) : 4

Classe : org.apache.commons.collections4.multiset.AbstractMultiSet.AbstractEntry
public boolean equals(final Object object) : 2
public int hashCode() : 1
public String toString() : 1

========================================
Fichier : multiset\AbstractMultiSetDecorator.java
========================================

Classe : org.apache.commons.collections4.multiset.AbstractMultiSetDecorator
protected MultiSet<E> decorated() : 1
public boolean equals(final Object object) : 1
public int hashCode() : 1
public int getCount(final Object object) : 1
public int setCount(final E object, final int count) : 1
public int add(final E object, final int count) : 1
public int remove(final Object object, final int count) : 1
public Set<E> uniqueSet() : 1
public Set<Entry<E>> entrySet() : 1

========================================
Fichier : multiset\HashMultiSet.java
========================================

Classe : org.apache.commons.collections4.multiset.HashMultiSet
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : multiset\package-info.java
========================================

========================================
Fichier : multiset\PredicatedMultiSet.java
========================================

Classe : org.apache.commons.collections4.multiset.PredicatedMultiSet
public static PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate) : 1
protected MultiSet<E> decorated() : 1
public boolean equals(final Object object) : 1
public int hashCode() : 1
public int add(final E object, final int count) : 1
public int remove(final Object object, final int count) : 1
public int getCount(final Object object) : 1
public int setCount(final E object, final int count) : 1
public Set<E> uniqueSet() : 1
public Set<MultiSet.Entry<E>> entrySet() : 1

========================================
Fichier : multiset\SynchronizedMultiSet.java
========================================

Classe : org.apache.commons.collections4.multiset.SynchronizedMultiSet
public static SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset) : 1
protected MultiSet<E> decorated() : 1
public boolean equals(final Object object) : 2
public int hashCode() : 1
public int add(final E object, final int count) : 1
public int remove(final Object object, final int count) : 1
public int getCount(final Object object) : 1
public int setCount(final E object, final int count) : 1
public Set<E> uniqueSet() : 1
public Set<Entry<E>> entrySet() : 1

Classe : org.apache.commons.collections4.multiset.SynchronizedMultiSet.SynchronizedSet

========================================
Fichier : multiset\UnmodifiableMultiSet.java
========================================

Classe : org.apache.commons.collections4.multiset.UnmodifiableMultiSet
public static MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset) : 2
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public Iterator<E> iterator() : 1
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public void clear() : 1
public boolean remove(final Object object) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1
public int setCount(final E object, final int count) : 1
public int add(final E object, final int count) : 1
public int remove(final Object object, final int count) : 1
public Set<E> uniqueSet() : 1
public Set<MultiSet.Entry<E>> entrySet() : 1

========================================
Fichier : MultiSet.java
========================================

Classe : org.apache.commons.collections4.MultiSet
 int getCount(Object object) : 1
 int setCount(E object, int count) : 1
 boolean add(E object) : 1
 int add(E object, int occurrences) : 1
 boolean remove(Object object) : 1
 int remove(Object object, int occurrences) : 1
 Set<E> uniqueSet() : 1
 Set<Entry<E>> entrySet() : 1
 Iterator<E> iterator() : 1
 int size() : 1
 boolean containsAll(Collection<?> coll) : 1
 boolean removeAll(Collection<?> coll) : 1
 boolean retainAll(Collection<?> coll) : 1
 boolean equals(Object obj) : 1
 int hashCode() : 1

Classe : org.apache.commons.collections4.MultiSet.Entry
 E getElement() : 1
 int getCount() : 1
 boolean equals(Object o) : 1
 int hashCode() : 1

========================================
Fichier : MultiSetUtils.java
========================================

Classe : org.apache.commons.collections4.MultiSetUtils
public static MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset) : 1
public static MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset) : 1
public static MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate) : 1
public static MultiSet<E> emptyMultiSet() : 1

========================================
Fichier : MultiValuedMap.java
========================================

Classe : org.apache.commons.collections4.MultiValuedMap
 int size() : 1
 boolean isEmpty() : 1
 boolean containsKey(Object key) : 1
 boolean containsValue(Object value) : 1
 boolean containsMapping(Object key, Object value) : 1
 Collection<V> get(K key) : 1
 boolean put(K key, V value) : 1
 boolean putAll(K key, Iterable<? extends V> values) : 1
 boolean putAll(Map<? extends K, ? extends V> map) : 1
 boolean putAll(MultiValuedMap<? extends K, ? extends V> map) : 1
 Collection<V> remove(Object key) : 1
 boolean removeMapping(Object key, Object item) : 1
 void clear() : 1
 Collection<Entry<K, V>> entries() : 1
 MultiSet<K> keys() : 1
 Set<K> keySet() : 1
 Collection<V> values() : 1
 Map<K, Collection<V>> asMap() : 1
 MapIterator<K, V> mapIterator() : 1

========================================
Fichier : OrderedBidiMap.java
========================================

Classe : org.apache.commons.collections4.OrderedBidiMap
 OrderedBidiMap<V, K> inverseBidiMap() : 1

========================================
Fichier : OrderedIterator.java
========================================

Classe : org.apache.commons.collections4.OrderedIterator
 boolean hasPrevious() : 1
 E previous() : 1

========================================
Fichier : OrderedMap.java
========================================

Classe : org.apache.commons.collections4.OrderedMap
 OrderedMapIterator<K, V> mapIterator() : 1
 K firstKey() : 1
 K lastKey() : 1
 K nextKey(K key) : 1
 K previousKey(K key) : 1

========================================
Fichier : OrderedMapIterator.java
========================================

Classe : org.apache.commons.collections4.OrderedMapIterator
 boolean hasPrevious() : 1
 K previous() : 1

========================================
Fichier : package-info.java
========================================

========================================
Fichier : Predicate.java
========================================

Classe : org.apache.commons.collections4.Predicate
 boolean evaluate(T object) : 1

========================================
Fichier : PredicateUtils.java
========================================

Classe : org.apache.commons.collections4.PredicateUtils
public static Predicate<T> exceptionPredicate() : 1
public static Predicate<T> truePredicate() : 1
public static Predicate<T> falsePredicate() : 1
public static Predicate<T> nullPredicate() : 1
public static Predicate<T> notNullPredicate() : 1
public static Predicate<T> equalPredicate(final T value) : 1
public static Predicate<T> identityPredicate(final T value) : 1
public static Predicate<Object> instanceofPredicate(final Class<?> type) : 1
public static Predicate<T> uniquePredicate() : 1
public static Predicate<T> invokerPredicate(final String methodName) : 1
public static Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args) : 1
public static Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2) : 1
public static Predicate<T> allPredicate(final Predicate<? super T>... predicates) : 1
public static Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates) : 1
public static Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2) : 1
public static Predicate<T> anyPredicate(final Predicate<? super T>... predicates) : 1
public static Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates) : 1
public static Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2) : 1
public static Predicate<T> onePredicate(final Predicate<? super T>... predicates) : 1
public static Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates) : 1
public static Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2) : 1
public static Predicate<T> nonePredicate(final Predicate<? super T>... predicates) : 1
public static Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates) : 1
public static Predicate<T> notPredicate(final Predicate<? super T> predicate) : 1
public static Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer) : 1
public static Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate) : 1
public static Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate) : 1
public static Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate) : 1
public static Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate) : 1

========================================
Fichier : properties\AbstractPropertiesFactory.java
========================================

Classe : org.apache.commons.collections4.properties.AbstractPropertiesFactory
protected abstract T createProperties() : 1
public T load(final ClassLoader classLoader, final String name) throws IOException : 1
public T load(final File file) throws FileNotFoundException, IOException : 1
public T load(final InputStream inputStream) throws IOException : 2
public T load(final InputStream inputStream, final PropertyFormat propertyFormat) throws IOException : 3
public T load(final Path path) throws IOException : 1
public T load(final Reader reader) throws IOException : 1
public T load(final String name) throws IOException : 1
public T load(final URI uri) throws IOException : 1
public T load(final URL url) throws IOException : 1

========================================
Fichier : properties\OrderedProperties.java
========================================

Classe : org.apache.commons.collections4.properties.OrderedProperties
public synchronized void clear() : 1
public synchronized Object compute(final Object key, final BiFunction<? super Object, ? super Object, ? extends Object> remappingFunction) : 2
public synchronized Object computeIfAbsent(final Object key, final Function<? super Object, ? extends Object> mappingFunction) : 2
public Set<Map.Entry<Object, Object>> entrySet() : 1
public synchronized void forEach(final BiConsumer<? super Object, ? super Object> action) : 1
public synchronized Enumeration<Object> keys() : 1
public Set<Object> keySet() : 1
public synchronized Object merge(final Object key, final Object value, final BiFunction<? super Object, ? super Object, ? extends Object> remappingFunction) : 1
public Enumeration<?> propertyNames() : 1
public synchronized Object put(final Object key, final Object value) : 2
public synchronized void putAll(final Map<? extends Object, ? extends Object> t) : 1
public synchronized Object putIfAbsent(final Object key, final Object value) : 2
public synchronized Object remove(final Object key) : 2
public synchronized boolean remove(final Object key, final Object value) : 2
public synchronized String toString() : 4

========================================
Fichier : properties\OrderedPropertiesFactory.java
========================================

Classe : org.apache.commons.collections4.properties.OrderedPropertiesFactory
protected OrderedProperties createProperties() : 1

========================================
Fichier : properties\package-info.java
========================================

========================================
Fichier : properties\PropertiesFactory.java
========================================

Classe : org.apache.commons.collections4.properties.PropertiesFactory
protected Properties createProperties() : 1

Classe : org.apache.commons.collections4.properties.PropertiesFactory.EmptyProperties
public synchronized void clear() : 1
public synchronized Object compute(final Object key, final BiFunction<? super Object, ? super Object, ? extends Object> remappingFunction) : 1
public synchronized Object computeIfAbsent(final Object key, final Function<? super Object, ? extends Object> mappingFunction) : 1
public synchronized Object computeIfPresent(final Object key, final BiFunction<? super Object, ? super Object, ? extends Object> remappingFunction) : 1
public synchronized boolean contains(final Object value) : 1
public synchronized boolean containsKey(final Object key) : 1
public boolean containsValue(final Object value) : 1
public synchronized Enumeration<Object> elements() : 1
public Set<Entry<Object, Object>> entrySet() : 1
public synchronized boolean equals(final Object o) : 1
public synchronized void forEach(final BiConsumer<? super Object, ? super Object> action) : 1
public synchronized Object get(final Object key) : 1
public synchronized Object getOrDefault(final Object key, final Object defaultValue) : 1
public String getProperty(final String key) : 1
public String getProperty(final String key, final String defaultValue) : 1
public synchronized int hashCode() : 1
public synchronized boolean isEmpty() : 1
public synchronized Enumeration<Object> keys() : 1
public Set<Object> keySet() : 1
public synchronized void load(final InputStream inStream) throws IOException : 1
public synchronized void load(final Reader reader) throws IOException : 1
public synchronized void loadFromXML(final InputStream in) throws IOException, InvalidPropertiesFormatException : 1
public synchronized Object merge(final Object key, final Object value, final BiFunction<? super Object, ? super Object, ? extends Object> remappingFunction) : 1
public Enumeration<?> propertyNames() : 1
public synchronized Object put(final Object key, final Object value) : 1
public synchronized void putAll(final Map<? extends Object, ? extends Object> t) : 1
public synchronized Object putIfAbsent(final Object key, final Object value) : 1
protected void rehash() : 1
public synchronized Object remove(final Object key) : 1
public synchronized boolean remove(final Object key, final Object value) : 1
public synchronized Object replace(final Object key, final Object value) : 1
public synchronized boolean replace(final Object key, final Object oldValue, final Object newValue) : 1
public synchronized void replaceAll(final BiFunction<? super Object, ? super Object, ? extends Object> function) : 1
public void save(final OutputStream out, final String comments) : 1
public synchronized Object setProperty(final String key, final String value) : 1
public synchronized int size() : 1
public void store(final OutputStream out, final String comments) throws IOException : 1
public void store(final Writer writer, final String comments) throws IOException : 1
public void storeToXML(final OutputStream os, final String comment) throws IOException : 1
public void storeToXML(final OutputStream os, final String comment, final String encoding) throws IOException : 1
public Set<String> stringPropertyNames() : 1
public synchronized String toString() : 1
public Collection<Object> values() : 1

========================================
Fichier : properties\SortedProperties.java
========================================

Classe : org.apache.commons.collections4.properties.SortedProperties
public Set<Map.Entry<Object, Object>> entrySet() : 1
public synchronized Enumeration<Object> keys() : 1
private Stream<String> sortedKeys() : 1

========================================
Fichier : properties\SortedPropertiesFactory.java
========================================

Classe : org.apache.commons.collections4.properties.SortedPropertiesFactory
protected SortedProperties createProperties() : 1

========================================
Fichier : Put.java
========================================

Classe : org.apache.commons.collections4.Put
 void clear() : 1
 Object put(K key, V value) : 1
 void putAll(Map<? extends K, ? extends V> t) : 1

========================================
Fichier : queue\AbstractQueueDecorator.java
========================================

Classe : org.apache.commons.collections4.queue.AbstractQueueDecorator
protected Queue<E> decorated() : 1
public boolean offer(final E obj) : 1
public E poll() : 1
public E peek() : 1
public E element() : 1
public E remove() : 1

========================================
Fichier : queue\CircularFifoQueue.java
========================================

Classe : org.apache.commons.collections4.queue.CircularFifoQueue
private void writeObject(final ObjectOutputStream out) throws IOException : 2
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 3
public int size() : 2
public boolean isEmpty() : 1
public boolean isFull() : 1
public boolean isAtFullCapacity() : 1
public int maxSize() : 1
public void clear() : 1
public boolean add(final E element) : 4
public E get(final int index) : 2
public boolean offer(final E element) : 1
public E poll() : 2
public E element() : 2
public E peek() : 2
public E remove() : 4
private int increment(int index) : 2
private int decrement(int index) : 2
public Iterator<E> iterator() : 1

========================================
Fichier : queue\package-info.java
========================================

========================================
Fichier : queue\PredicatedQueue.java
========================================

Classe : org.apache.commons.collections4.queue.PredicatedQueue
public static PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate) : 1
protected Queue<E> decorated() : 1
public boolean offer(final E object) : 1
public E poll() : 1
public E peek() : 1
public E element() : 1
public E remove() : 1

========================================
Fichier : queue\SynchronizedQueue.java
========================================

Classe : org.apache.commons.collections4.queue.SynchronizedQueue
public static SynchronizedQueue<E> synchronizedQueue(final Queue<E> queue) : 1
protected Queue<E> decorated() : 1
public E element() : 1
public boolean equals(final Object object) : 2
public int hashCode() : 1
public boolean offer(final E e) : 1
public E peek() : 1
public E poll() : 1
public E remove() : 1

========================================
Fichier : queue\TransformedQueue.java
========================================

Classe : org.apache.commons.collections4.queue.TransformedQueue
public static TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer) : 1
public static TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer) : 3
protected Queue<E> getQueue() : 1
public boolean offer(final E obj) : 1
public E poll() : 1
public E peek() : 1
public E element() : 1
public E remove() : 1

========================================
Fichier : queue\UnmodifiableQueue.java
========================================

Classe : org.apache.commons.collections4.queue.UnmodifiableQueue
public static Queue<E> unmodifiableQueue(final Queue<? extends E> queue) : 2
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
public Iterator<E> iterator() : 1
public boolean add(final Object object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public void clear() : 1
public boolean remove(final Object object) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1
public boolean offer(final E obj) : 1
public E poll() : 1
public E remove() : 1

========================================
Fichier : QueueUtils.java
========================================

Classe : org.apache.commons.collections4.QueueUtils
public static Queue<E> synchronizedQueue(final Queue<E> queue) : 1
public static Queue<E> unmodifiableQueue(final Queue<? extends E> queue) : 1
public static Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate) : 1
public static Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer) : 1
public static Queue<E> emptyQueue() : 1

========================================
Fichier : ResettableIterator.java
========================================

Classe : org.apache.commons.collections4.ResettableIterator
 void reset() : 1

========================================
Fichier : ResettableListIterator.java
========================================

Classe : org.apache.commons.collections4.ResettableListIterator

========================================
Fichier : sequence\CommandVisitor.java
========================================

Classe : org.apache.commons.collections4.sequence.CommandVisitor
 void visitInsertCommand(T object) : 1
 void visitKeepCommand(T object) : 1
 void visitDeleteCommand(T object) : 1

========================================
Fichier : sequence\DeleteCommand.java
========================================

Classe : org.apache.commons.collections4.sequence.DeleteCommand
public void accept(final CommandVisitor<T> visitor) : 1

========================================
Fichier : sequence\EditCommand.java
========================================

Classe : org.apache.commons.collections4.sequence.EditCommand
protected T getObject() : 1
public abstract void accept(CommandVisitor<T> visitor) : 1

========================================
Fichier : sequence\EditScript.java
========================================

Classe : org.apache.commons.collections4.sequence.EditScript
public void append(final KeepCommand<T> command) : 1
public void append(final InsertCommand<T> command) : 1
public void append(final DeleteCommand<T> command) : 1
public void visit(final CommandVisitor<T> visitor) : 2
public int getLCSLength() : 1
public int getModifications() : 1

========================================
Fichier : sequence\InsertCommand.java
========================================

Classe : org.apache.commons.collections4.sequence.InsertCommand
public void accept(final CommandVisitor<T> visitor) : 1

========================================
Fichier : sequence\KeepCommand.java
========================================

Classe : org.apache.commons.collections4.sequence.KeepCommand
public void accept(final CommandVisitor<T> visitor) : 1

========================================
Fichier : sequence\package-info.java
========================================

========================================
Fichier : sequence\ReplacementsFinder.java
========================================

Classe : org.apache.commons.collections4.sequence.ReplacementsFinder
public void visitInsertCommand(final T object) : 1
public void visitKeepCommand(final T object) : 2
public void visitDeleteCommand(final T object) : 1

========================================
Fichier : sequence\ReplacementsHandler.java
========================================

Classe : org.apache.commons.collections4.sequence.ReplacementsHandler
 void handleReplacement(int skipped, List<T> from, List<T> to) : 1

========================================
Fichier : sequence\SequencesComparator.java
========================================

Classe : org.apache.commons.collections4.sequence.SequencesComparator
public EditScript<T> getScript() : 1
private Snake buildSnake(final int start, final int diag, final int end1, final int end2) : 2
private Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) : 11
private void buildScript(final int start1, final int end1, final int start2, final int end2, final EditScript<T> script) : 6

Classe : org.apache.commons.collections4.sequence.SequencesComparator.Snake
public int getStart() : 1
public int getEnd() : 1
public int getDiag() : 1

========================================
Fichier : set\AbstractNavigableSetDecorator.java
========================================

Classe : org.apache.commons.collections4.set.AbstractNavigableSetDecorator
protected NavigableSet<E> decorated() : 1
public E lower(final E e) : 1
public E floor(final E e) : 1
public E ceiling(final E e) : 1
public E higher(final E e) : 1
public E pollFirst() : 1
public E pollLast() : 1
public NavigableSet<E> descendingSet() : 1
public Iterator<E> descendingIterator() : 1
public NavigableSet<E> subSet(final E fromElement, final boolean fromInclusive, final E toElement, final boolean toInclusive) : 1
public NavigableSet<E> headSet(final E toElement, final boolean inclusive) : 1
public NavigableSet<E> tailSet(final E fromElement, final boolean inclusive) : 1

========================================
Fichier : set\AbstractSerializableSetDecorator.java
========================================

Classe : org.apache.commons.collections4.set.AbstractSerializableSetDecorator
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : set\AbstractSetDecorator.java
========================================

Classe : org.apache.commons.collections4.set.AbstractSetDecorator
protected Set<E> decorated() : 1
public boolean equals(final Object object) : 1
public int hashCode() : 1

========================================
Fichier : set\AbstractSortedSetDecorator.java
========================================

Classe : org.apache.commons.collections4.set.AbstractSortedSetDecorator
protected SortedSet<E> decorated() : 1
public SortedSet<E> subSet(final E fromElement, final E toElement) : 1
public SortedSet<E> headSet(final E toElement) : 1
public SortedSet<E> tailSet(final E fromElement) : 1
public E first() : 1
public E last() : 1
public Comparator<? super E> comparator() : 1

========================================
Fichier : set\CompositeSet.java
========================================

Classe : org.apache.commons.collections4.set.CompositeSet
public int size() : 2
public boolean isEmpty() : 3
public boolean contains(final Object obj) : 3
public Iterator<E> iterator() : 2
public Object[] toArray() : 2
public T[] toArray(final T[] array) : 5
public boolean add(final E obj) : 2
public boolean remove(final Object obj) : 3
public boolean containsAll(final Collection<?> coll) : 4
public boolean addAll(final Collection<? extends E> coll) : 2
public boolean removeIf(final Predicate<? super E> filter) : 3
public boolean removeAll(final Collection<?> coll) : 3
public boolean retainAll(final Collection<?> coll) : 2
public void clear() : 2
public void setMutator(final SetMutator<E> mutator) : 1
public synchronized void addComposited(final Set<E> set) : 6
public void addComposited(final Set<E> set1, final Set<E> set2) : 1
public void addComposited(final Set<E>... sets) : 3
public void removeComposited(final Set<E> set) : 1
public Set<E> toSet() : 1
public List<Set<E>> getSets() : 1
protected SetMutator<E> getMutator() : 1
public boolean equals(final Object obj) : 2
public int hashCode() : 2

Classe : org.apache.commons.collections4.set.CompositeSet.SetMutator
 boolean add(CompositeSet<E> composite, List<Set<E>> sets, E obj) : 1
 boolean addAll(CompositeSet<E> composite, List<Set<E>> sets, Collection<? extends E> coll) : 1
 void resolveCollision(CompositeSet<E> comp, Set<E> existing, Set<E> added, Collection<E> intersects) : 1

========================================
Fichier : set\ListOrderedSet.java
========================================

Classe : org.apache.commons.collections4.set.ListOrderedSet
public static ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list) : 2
public static ListOrderedSet<E> listOrderedSet(final Set<E> set) : 1
public static ListOrderedSet<E> listOrderedSet(final List<E> list) : 1
public List<E> asList() : 1
public void clear() : 1
public OrderedIterator<E> iterator() : 1
public boolean add(final E object) : 2
public boolean addAll(final Collection<? extends E> coll) : 2
public boolean remove(final Object object) : 2
public boolean removeIf(final Predicate<? super E> filter) : 3
public boolean removeAll(final Collection<?> coll) : 2
public boolean retainAll(final Collection<?> coll) : 3
public Object[] toArray() : 1
public T[] toArray(final T[] a) : 1
public E get(final int index) : 1
public int indexOf(final Object object) : 1
public void add(final int index, final E object) : 2
public boolean addAll(final int index, final Collection<? extends E> coll) : 4
public E remove(final int index) : 1
public String toString() : 1

Classe : org.apache.commons.collections4.set.ListOrderedSet.OrderedSetIterator
public E next() : 1
public void remove() : 1
public boolean hasPrevious() : 1
public E previous() : 1

========================================
Fichier : set\MapBackedSet.java
========================================

Classe : org.apache.commons.collections4.set.MapBackedSet
public static MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map) : 1
public static MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue) : 1
public int size() : 1
public boolean isEmpty() : 1
public Iterator<E> iterator() : 1
public boolean contains(final Object obj) : 1
public boolean containsAll(final Collection<?> coll) : 1
public boolean add(final E obj) : 1
public boolean addAll(final Collection<? extends E> coll) : 2
public boolean remove(final Object obj) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1
public void clear() : 1
public Object[] toArray() : 1
public T[] toArray(final T[] array) : 1
public boolean equals(final Object obj) : 1
public int hashCode() : 1

========================================
Fichier : set\package-info.java
========================================

========================================
Fichier : set\PredicatedNavigableSet.java
========================================

Classe : org.apache.commons.collections4.set.PredicatedNavigableSet
public static PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate) : 1
protected NavigableSet<E> decorated() : 1
public E lower(final E e) : 1
public E floor(final E e) : 1
public E ceiling(final E e) : 1
public E higher(final E e) : 1
public E pollFirst() : 1
public E pollLast() : 1
public NavigableSet<E> descendingSet() : 1
public Iterator<E> descendingIterator() : 1
public NavigableSet<E> subSet(final E fromElement, final boolean fromInclusive, final E toElement, final boolean toInclusive) : 1
public NavigableSet<E> headSet(final E toElement, final boolean inclusive) : 1
public NavigableSet<E> tailSet(final E fromElement, final boolean inclusive) : 1

========================================
Fichier : set\PredicatedSet.java
========================================

Classe : org.apache.commons.collections4.set.PredicatedSet
public static PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate) : 1
protected Set<E> decorated() : 1
public boolean equals(final Object object) : 1
public int hashCode() : 1

========================================
Fichier : set\PredicatedSortedSet.java
========================================

Classe : org.apache.commons.collections4.set.PredicatedSortedSet
public static PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate) : 1
protected SortedSet<E> decorated() : 1
public Comparator<? super E> comparator() : 1
public E first() : 1
public E last() : 1
public SortedSet<E> subSet(final E fromElement, final E toElement) : 1
public SortedSet<E> headSet(final E toElement) : 1
public SortedSet<E> tailSet(final E fromElement) : 1

========================================
Fichier : set\TransformedNavigableSet.java
========================================

Classe : org.apache.commons.collections4.set.TransformedNavigableSet
public static TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer) : 1
public static TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer) : 3
protected NavigableSet<E> decorated() : 1
public E lower(final E e) : 1
public E floor(final E e) : 1
public E ceiling(final E e) : 1
public E higher(final E e) : 1
public E pollFirst() : 1
public E pollLast() : 1
public NavigableSet<E> descendingSet() : 1
public Iterator<E> descendingIterator() : 1
public NavigableSet<E> subSet(final E fromElement, final boolean fromInclusive, final E toElement, final boolean toInclusive) : 1
public NavigableSet<E> headSet(final E toElement, final boolean inclusive) : 1
public NavigableSet<E> tailSet(final E fromElement, final boolean inclusive) : 1

========================================
Fichier : set\TransformedSet.java
========================================

Classe : org.apache.commons.collections4.set.TransformedSet
public static TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer) : 1
public static Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer) : 3
public boolean equals(final Object object) : 1
public int hashCode() : 1

========================================
Fichier : set\TransformedSortedSet.java
========================================

Classe : org.apache.commons.collections4.set.TransformedSortedSet
public static TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer) : 1
public static TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer) : 3
protected SortedSet<E> getSortedSet() : 1
public E first() : 1
public E last() : 1
public Comparator<? super E> comparator() : 1
public SortedSet<E> subSet(final E fromElement, final E toElement) : 1
public SortedSet<E> headSet(final E toElement) : 1
public SortedSet<E> tailSet(final E fromElement) : 1

========================================
Fichier : set\UnmodifiableNavigableSet.java
========================================

Classe : org.apache.commons.collections4.set.UnmodifiableNavigableSet
public static NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set) : 2
public Iterator<E> iterator() : 1
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public void clear() : 1
public boolean remove(final Object object) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public E pollFirst() : 1
public E pollLast() : 1
public boolean retainAll(final Collection<?> coll) : 1
public SortedSet<E> subSet(final E fromElement, final E toElement) : 1
public SortedSet<E> headSet(final E toElement) : 1
public SortedSet<E> tailSet(final E fromElement) : 1
public NavigableSet<E> descendingSet() : 1
public Iterator<E> descendingIterator() : 1
public NavigableSet<E> subSet(final E fromElement, final boolean fromInclusive, final E toElement, final boolean toInclusive) : 1
public NavigableSet<E> headSet(final E toElement, final boolean inclusive) : 1
public NavigableSet<E> tailSet(final E fromElement, final boolean inclusive) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : set\UnmodifiableSet.java
========================================

Classe : org.apache.commons.collections4.set.UnmodifiableSet
public static Set<E> unmodifiableSet(final Set<? extends E> set) : 2
public Iterator<E> iterator() : 1
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public void clear() : 1
public boolean remove(final Object object) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1

========================================
Fichier : set\UnmodifiableSortedSet.java
========================================

Classe : org.apache.commons.collections4.set.UnmodifiableSortedSet
public static SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set) : 2
public Iterator<E> iterator() : 1
public boolean add(final E object) : 1
public boolean addAll(final Collection<? extends E> coll) : 1
public void clear() : 1
public boolean remove(final Object object) : 1
public boolean removeIf(final Predicate<? super E> filter) : 1
public boolean removeAll(final Collection<?> coll) : 1
public boolean retainAll(final Collection<?> coll) : 1
public SortedSet<E> subSet(final E fromElement, final E toElement) : 1
public SortedSet<E> headSet(final E toElement) : 1
public SortedSet<E> tailSet(final E fromElement) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : SetUtils.java
========================================

Classe : org.apache.commons.collections4.SetUtils
public static SetView<E> difference(final Set<? extends E> setA, final Set<? extends E> setB) : 1
public static SetView<E> disjunction(final Set<? extends E> setA, final Set<? extends E> setB) : 1
public static Set<T> emptyIfNull(final Set<T> set) : 1
public static Set<E> emptySet() : 1
public static SortedSet<E> emptySortedSet() : 1
public static int hashCodeForSet(final Collection<T> set) : 4
public static HashSet<E> hashSet(final E... items) : 2
public static SetView<E> intersection(final Set<? extends E> setA, final Set<? extends E> setB) : 1
public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2) : 3
public static Set<E> newIdentityHashSet() : 1
public static Set<E> orderedSet(final Set<E> set) : 1
public static SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate) : 1
public static Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate) : 1
public static SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate) : 1
public static Set<E> synchronizedSet(final Set<E> set) : 1
public static SortedSet<E> synchronizedSortedSet(final SortedSet<E> set) : 1
public static SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer) : 1
public static Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer) : 1
public static SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer) : 1
public static SetView<E> union(final Set<? extends E> setA, final Set<? extends E> setB) : 1
public static SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set) : 1
public static Set<E> unmodifiableSet(final E... items) : 2
public static Set<E> unmodifiableSet(final Set<? extends E> set) : 1
public static SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set) : 1

Classe : org.apache.commons.collections4.SetUtils.SetView
public void copyInto(final S set) : 1
protected abstract Iterator<E> createIterator() : 1
public Iterator<E> iterator() : 1
public int size() : 1
public Set<E> toSet() : 1

========================================
Fichier : SetValuedMap.java
========================================

Classe : org.apache.commons.collections4.SetValuedMap
 Set<V> get(K key) : 1
 Set<V> remove(Object key) : 1

========================================
Fichier : SortedBag.java
========================================

Classe : org.apache.commons.collections4.SortedBag
 Comparator<? super E> comparator() : 1
 E first() : 1
 E last() : 1

========================================
Fichier : SortedBidiMap.java
========================================

Classe : org.apache.commons.collections4.SortedBidiMap
 SortedBidiMap<V, K> inverseBidiMap() : 1
 Comparator<? super V> valueComparator() : 1

========================================
Fichier : splitmap\AbstractIterableGetMapDecorator.java
========================================

Classe : org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator
protected Map<K, V> decorated() : 1
public boolean containsKey(final Object key) : 1
public boolean containsValue(final Object value) : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public V get(final Object key) : 1
public V remove(final Object key) : 1
public boolean isEmpty() : 1
public Set<K> keySet() : 1
public int size() : 1
public Collection<V> values() : 1
public MapIterator<K, V> mapIterator() : 1
public boolean equals(final Object object) : 2
public int hashCode() : 1
public String toString() : 1

========================================
Fichier : splitmap\package-info.java
========================================

========================================
Fichier : splitmap\TransformedSplitMap.java
========================================

Classe : org.apache.commons.collections4.splitmap.TransformedSplitMap
public static TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer) : 1
private void writeObject(final ObjectOutputStream out) throws IOException : 1
private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
protected K transformKey(final J object) : 1
protected V transformValue(final U object) : 1
protected Map<K, V> transformMap(final Map<? extends J, ? extends U> map) : 3
protected V checkSetValue(final U value) : 1
public V put(final J key, final U value) : 1
public void putAll(final Map<? extends J, ? extends U> mapToCopy) : 1
public void clear() : 1

========================================
Fichier : SplitMapUtils.java
========================================

Classe : org.apache.commons.collections4.SplitMapUtils
public static IterableMap<K, V> readableMap(final Get<K, V> get) : 2
public static Map<K, V> writableMap(final Put<K, V> put) : 2

Classe : org.apache.commons.collections4.SplitMapUtils.WrappedGet
public void clear() : 1
public boolean containsKey(final Object key) : 1
public boolean containsValue(final Object value) : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public boolean equals(final Object arg0) : 2
public V get(final Object key) : 1
public int hashCode() : 1
public boolean isEmpty() : 1
public Set<K> keySet() : 1
public V put(final K key, final V value) : 1
public void putAll(final Map<? extends K, ? extends V> t) : 1
public V remove(final Object key) : 1
public int size() : 1
public Collection<V> values() : 1
public MapIterator<K, V> mapIterator() : 2

Classe : org.apache.commons.collections4.SplitMapUtils.WrappedPut
public void clear() : 1
public boolean containsKey(final Object key) : 1
public boolean containsValue(final Object value) : 1
public Set<Map.Entry<K, V>> entrySet() : 1
public boolean equals(final Object obj) : 2
public V get(final Object key) : 1
public int hashCode() : 1
public boolean isEmpty() : 1
public Set<K> keySet() : 1
public V put(final K key, final V value) : 1
public void putAll(final Map<? extends K, ? extends V> t) : 1
public V remove(final Object key) : 1
public int size() : 1
public Collection<V> values() : 1

========================================
Fichier : Transformer.java
========================================

Classe : org.apache.commons.collections4.Transformer
 O transform(I input) : 1

========================================
Fichier : TransformerUtils.java
========================================

Classe : org.apache.commons.collections4.TransformerUtils
public static Transformer<I, O> exceptionTransformer() : 1
public static Transformer<I, O> nullTransformer() : 1
public static Transformer<T, T> nopTransformer() : 1
public static Transformer<T, T> cloneTransformer() : 1
public static Transformer<I, O> constantTransformer(final O constantToReturn) : 1
public static Transformer<T, T> asTransformer(final Closure<? super T> closure) : 1
public static Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate) : 1
public static Transformer<I, O> asTransformer(final Factory<? extends O> factory) : 1
public static Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers) : 1
public static Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers) : 1
public static Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer) : 1
public static Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer) : 1
public static Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer) : 1
public static Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers) : 1
public static Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer) : 1
public static Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers) : 1
public static Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers) : 2
public static Transformer<Class<? extends T>, T> instantiateTransformer() : 1
public static Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args) : 1
public static Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map) : 1
public static Transformer<I, O> invokerTransformer(final String methodName) : 1
public static Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args) : 1
public static Transformer<T, String> stringValueTransformer() : 1

========================================
Fichier : trie\AbstractBitwiseTrie.java
========================================

Classe : org.apache.commons.collections4.trie.AbstractBitwiseTrie
protected KeyAnalyzer<? super K> getKeyAnalyzer() : 1
public String toString() : 2
 final K castKey(final Object key) : 1
 final int lengthInBits(final K key) : 2
 final int bitsPerElement() : 1
 final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) : 2
 final int bitIndex(final K key, final K foundKey) : 1
 final boolean compareKeys(final K key, final K other) : 3
 static boolean compare(final Object a, final Object b) : 1

Classe : org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry
public V setKeyValue(final K key, final V value) : 1
public K getKey() : 1
public V getValue() : 1
public V setValue(final V value) : 1
public int hashCode() : 1
public boolean equals(final Object o) : 4
public String toString() : 1

========================================
Fichier : trie\AbstractPatriciaTrie.java
========================================

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie
public void clear() : 1
public int size() : 1
 void incrementSize() : 1
 void decrementSize() : 1
private void incrementModCount() : 1
public V put(final K key, final V value) : 10
 TrieEntry<K, V> addEntry(final TrieEntry<K, V> entry, final int lengthInBits) : 8
public V get(final Object k) : 1
 TrieEntry<K, V> getEntry(final Object k) : 2
public Map.Entry<K, V> select(final K key) : 2
public K selectKey(final K key) : 2
public V selectValue(final K key) : 2
private boolean selectR(final TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final Reference<Map.Entry<K, V>> reference) : 6
public boolean containsKey(final Object k) : 2
public Set<Map.Entry<K, V>> entrySet() : 2
public Set<K> keySet() : 2
public Collection<V> values() : 2
public V remove(final Object k) : 6
 TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) : 4
 V removeEntry(final TrieEntry<K, V> h) : 3
private void removeExternalEntry(final TrieEntry<K, V> h) : 5
private void removeInternalEntry(final TrieEntry<K, V> h) : 5
 TrieEntry<K, V> nextEntry(final TrieEntry<K, V> node) : 2
 TrieEntry<K, V> nextEntryImpl(final TrieEntry<K, V> start, final TrieEntry<K, V> previous, final TrieEntry<K, V> tree) : 15
 TrieEntry<K, V> firstEntry() : 2
 TrieEntry<K, V> followLeft(TrieEntry<K, V> node) : 4
public Comparator<? super K> comparator() : 1
public K firstKey() : 2
public K lastKey() : 2
public K nextKey(final K key) : 2
public K previousKey(final K key) : 2
public OrderedMapIterator<K, V> mapIterator() : 1
public SortedMap<K, V> prefixMap(final K key) : 1
private SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) : 3
public SortedMap<K, V> headMap(final K toKey) : 1
public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
public SortedMap<K, V> tailMap(final K fromKey) : 1
 TrieEntry<K, V> higherEntry(final K key) : 10
 TrieEntry<K, V> ceilingEntry(final K key) : 8
 TrieEntry<K, V> lowerEntry(final K key) : 6
 TrieEntry<K, V> floorEntry(final K key) : 8
 TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) : 8
 TrieEntry<K, V> lastEntry() : 1
 TrieEntry<K, V> followRight(TrieEntry<K, V> node) : 3
 TrieEntry<K, V> previousEntry(final TrieEntry<K, V> start) : 9
 TrieEntry<K, V> nextEntryInSubtree(final TrieEntry<K, V> node, final TrieEntry<K, V> parentOfSubtree) : 2
 static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from) : 1
private void readObject(final ObjectInputStream stream) throws IOException, ClassNotFoundException : 2
private void writeObject(final ObjectOutputStream stream) throws IOException : 2

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference
public void set(final E item) : 1
public E get() : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry
public boolean isEmpty() : 1
public boolean isInternalNode() : 1
public boolean isExternalNode() : 1
public String toString() : 10

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet
public Iterator<Map.Entry<K, V>> iterator() : 1
public boolean contains(final Object o) : 2
public boolean remove(final Object obj) : 3
public int size() : 1
public void clear() : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator
public Map.Entry<K, V> next() : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet
public Iterator<K> iterator() : 1
public int size() : 1
public boolean contains(final Object o) : 1
public boolean remove(final Object o) : 1
public void clear() : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator
public K next() : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values
public Iterator<V> iterator() : 1
public int size() : 1
public boolean contains(final Object o) : 1
public void clear() : 1
public boolean remove(final Object o) : 3

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator
public V next() : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.AbstractTrieIterator
protected TrieEntry<K, V> nextEntry() : 3
protected TrieEntry<K, V> findNext(final TrieEntry<K, V> prior) : 1
public boolean hasNext() : 1
public void remove() : 3

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieMapIterator
public K next() : 1
public K getKey() : 2
public V getValue() : 2
public V setValue(final V value) : 2
public boolean hasPrevious() : 1
public K previous() : 1
protected TrieEntry<K, V> nextEntry() : 1
protected TrieEntry<K, V> previousEntry() : 3

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.AbstractRangeMap
protected abstract Set<Map.Entry<K, V>> createEntrySet() : 1
protected abstract K getFromKey() : 1
protected abstract boolean isFromInclusive() : 1
protected abstract K getToKey() : 1
protected abstract boolean isToInclusive() : 1
public Comparator<? super K> comparator() : 1
public boolean containsKey(final Object key) : 2
public V remove(final Object key) : 2
public V get(final Object key) : 2
public V put(final K key, final V value) : 2
public Set<Map.Entry<K, V>> entrySet() : 2
public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 3
public SortedMap<K, V> headMap(final K toKey) : 2
public SortedMap<K, V> tailMap(final K fromKey) : 2
protected boolean inRange(final K key) : 1
protected boolean inRange2(final K key) : 1
protected boolean inFromRange(final K key, final boolean forceInclusive) : 2
protected boolean inToRange(final K key, final boolean forceInclusive) : 2
protected abstract SortedMap<K, V> createRangeMap(K fromKey, boolean fromInclusive, K toKey, boolean toInclusive) : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap
public K firstKey() : 4
public K lastKey() : 4
protected Set<Entry<K, V>> createEntrySet() : 1
public K getFromKey() : 1
public K getToKey() : 1
public boolean isFromInclusive() : 1
public boolean isToInclusive() : 1
protected SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet
public Iterator<Map.Entry<K, V>> iterator() : 3
public int size() : 3
public boolean isEmpty() : 1
public boolean contains(final Object o) : 3
public boolean remove(final Object o) : 4

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator
public boolean hasNext() : 1
public Map.Entry<K, V> next() : 2

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeMap
private int fixup() : 6
public K firstKey() : 3
public K lastKey() : 3
protected boolean inRange(final K key) : 1
protected boolean inRange2(final K key) : 1
protected boolean inFromRange(final K key, final boolean forceInclusive) : 1
protected boolean inToRange(final K key, final boolean forceInclusive) : 1
protected Set<Map.Entry<K, V>> createEntrySet() : 1
public K getFromKey() : 1
public K getToKey() : 1
public boolean isFromInclusive() : 1
public boolean isToInclusive() : 1
protected SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) : 1
public void clear() : 3

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet
public int size() : 1
public Iterator<Map.Entry<K, V>> iterator() : 4

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet.SingletonIterator
public boolean hasNext() : 1
public Map.Entry<K, V> next() : 2
public void remove() : 2

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet.EntryIterator
public Map.Entry<K, V> next() : 2
protected TrieEntry<K, V> findNext(final TrieEntry<K, V> prior) : 1
public void remove() : 4

========================================
Fichier : trie\analyzer\package-info.java
========================================

========================================
Fichier : trie\analyzer\StringKeyAnalyzer.java
========================================

Classe : org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer
private static int mask(final int bit) : 1
public int bitsPerElement() : 1
public int lengthInBits(final String key) : 1
public int bitIndex(final String key, final int offsetInBits, final int lengthInBits, final String other, final int otherOffsetInBits, final int otherLengthInBits) : 8
public boolean isBitSet(final String key, final int bitIndex, final int lengthInBits) : 2
public boolean isPrefix(final String prefix, final int offsetInBits, final int lengthInBits, final String key) : 2

========================================
Fichier : trie\KeyAnalyzer.java
========================================

Classe : org.apache.commons.collections4.trie.KeyAnalyzer
 static boolean isOutOfBoundsIndex(final int bitIndex) : 1
 static boolean isEqualBitKey(final int bitIndex) : 1
 static boolean isNullBitKey(final int bitIndex) : 1
 static boolean isValidBitIndex(final int bitIndex) : 1
public abstract int bitsPerElement() : 1
public abstract int lengthInBits(K key) : 1
public abstract boolean isBitSet(K key, int bitIndex, int lengthInBits) : 1
public abstract int bitIndex(K key, int offsetInBits, int lengthInBits, K other, int otherOffsetInBits, int otherLengthInBits) : 1
public abstract boolean isPrefix(K prefix, int offsetInBits, int lengthInBits, K key) : 1
public int compare(final K o1, final K o2) : 3

========================================
Fichier : trie\package-info.java
========================================

========================================
Fichier : trie\PatriciaTrie.java
========================================

Classe : org.apache.commons.collections4.trie.PatriciaTrie

========================================
Fichier : trie\UnmodifiableTrie.java
========================================

Classe : org.apache.commons.collections4.trie.UnmodifiableTrie
public static Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie) : 2
public Set<Entry<K, V>> entrySet() : 1
public Set<K> keySet() : 1
public Collection<V> values() : 1
public void clear() : 1
public boolean containsKey(final Object key) : 1
public boolean containsValue(final Object value) : 1
public V get(final Object key) : 1
public boolean isEmpty() : 1
public V put(final K key, final V value) : 1
public void putAll(final Map<? extends K, ? extends V> m) : 1
public V remove(final Object key) : 1
public int size() : 1
public K firstKey() : 1
public SortedMap<K, V> headMap(final K toKey) : 1
public K lastKey() : 1
public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
public SortedMap<K, V> tailMap(final K fromKey) : 1
public SortedMap<K, V> prefixMap(final K key) : 1
public Comparator<? super K> comparator() : 1
public OrderedMapIterator<K, V> mapIterator() : 1
public K nextKey(final K key) : 1
public K previousKey(final K key) : 1
public int hashCode() : 1
public boolean equals(final Object obj) : 1
public String toString() : 1

========================================
Fichier : Trie.java
========================================

Classe : org.apache.commons.collections4.Trie
 SortedMap<K, V> prefixMap(K key) : 1

========================================
Fichier : TrieUtils.java
========================================

Classe : org.apache.commons.collections4.TrieUtils
public static Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie) : 1

========================================
Fichier : Unmodifiable.java
========================================

Classe : org.apache.commons.collections4.Unmodifiable
