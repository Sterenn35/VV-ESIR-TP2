Complexité cyclomatique de chaque méthode 
 

========================================
Fichier : ArrayStack.java
========================================

Classe : org.apache.commons.collections4.ArrayStack
Method number 0 : public boolean empty() : 1
Method number 1 : public E peek() throws EmptyStackException : 2
Method number 2 : public E peek(final int n) throws EmptyStackException : 2
Method number 3 : public E pop() throws EmptyStackException : 2
Method number 4 : public E push(final E item) : 1
Method number 5 : public int search(final Object object) : 3

========================================
Fichier : ArrayUtils.java
========================================

Classe : org.apache.commons.collections4.ArrayUtils
Method number 6 :  static boolean contains(final Object[] array, final Object objectToFind) : 1
Method number 7 :  static int indexOf(final T[] array, final Object objectToFind) : 1
Method number 8 :  static int indexOf(final Object[] array, final Object objectToFind, int startIndex) : 8

========================================
Fichier : bag\AbstractBagDecorator.java
========================================

Classe : org.apache.commons.collections4.bag.AbstractBagDecorator
Method number 9 : protected Bag<E> decorated() : 1
Method number 10 : public boolean equals(final Object object) : 1
Method number 11 : public int hashCode() : 1
Method number 12 : public int getCount(final Object object) : 1
Method number 13 : public boolean add(final E object, final int count) : 1
Method number 14 : public boolean remove(final Object object, final int count) : 1
Method number 15 : public Set<E> uniqueSet() : 1

========================================
Fichier : bag\AbstractMapBag.java
========================================

Classe : org.apache.commons.collections4.bag.AbstractMapBag
Method number 16 : protected Map<E, MutableInteger> getMap() : 1
Method number 17 : public int size() : 1
Method number 18 : public boolean isEmpty() : 1
Method number 19 : public int getCount(final Object object) : 2
Method number 20 : public boolean contains(final Object object) : 1
Method number 21 : public boolean containsAll(final Collection<?> coll) : 2
Method number 22 :  boolean containsAll(final Bag<?> other) : 3
Method number 23 : public Iterator<E> iterator() : 1
Method number 24 : public boolean add(final E object) : 1
Method number 25 : public boolean add(final E object, final int nCopies) : 3
Method number 26 : public boolean addAll(final Collection<? extends E> coll) : 2
Method number 27 : public void clear() : 1
Method number 28 : public boolean remove(final Object object) : 2
Method number 29 : public boolean remove(final Object object, final int nCopies) : 4
Method number 30 : public boolean removeAll(final Collection<?> coll) : 3
Method number 31 : public boolean retainAll(final Collection<?> coll) : 2
Method number 32 :  boolean retainAll(final Bag<?> other) : 4
Method number 33 : public Object[] toArray() : 3
Method number 34 : public T[] toArray(T[] array) : 5
Method number 35 : public Set<E> uniqueSet() : 2
Method number 36 : protected void doWriteObject(final ObjectOutputStream out) throws IOException : 2
Method number 37 : protected void doReadObject(final Map<E, MutableInteger> map, final ObjectInputStream in) throws IOException, ClassNotFoundException : 2
Method number 38 : public boolean equals(final Object object) : 6
Method number 39 : public int hashCode() : 2
Method number 40 : public String toString() : 4

Classe : org.apache.commons.collections4.bag.AbstractMapBag.BagIterator
Method number 41 : public boolean hasNext() : 1
Method number 42 : public E next() : 3
Method number 43 : public void remove() : 4

Classe : org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger
Method number 44 : public boolean equals(final Object obj) : 2
Method number 45 : public int hashCode() : 1

========================================
Fichier : bag\AbstractSortedBagDecorator.java
========================================

Classe : org.apache.commons.collections4.bag.AbstractSortedBagDecorator
Method number 46 : protected SortedBag<E> decorated() : 1
Method number 47 : public E first() : 1
Method number 48 : public E last() : 1
Method number 49 : public Comparator<? super E> comparator() : 1

========================================
Fichier : bag\CollectionBag.java
========================================

Classe : org.apache.commons.collections4.bag.CollectionBag
Method number 50 : public static Bag<E> collectionBag(final Bag<E> bag) : 1
Method number 51 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 52 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 53 : public boolean containsAll(final Collection<?> coll) : 1
Method number 54 : public boolean add(final E object) : 1
Method number 55 : public boolean addAll(final Collection<? extends E> coll) : 2
Method number 56 : public boolean remove(final Object object) : 1
Method number 57 : public boolean removeAll(final Collection<?> coll) : 3
Method number 58 : public boolean retainAll(final Collection<?> coll) : 4
Method number 59 : public boolean add(final E object, final int count) : 1

========================================
Fichier : bag\CollectionSortedBag.java
========================================

Classe : org.apache.commons.collections4.bag.CollectionSortedBag
Method number 60 : public static SortedBag<E> collectionSortedBag(final SortedBag<E> bag) : 1
Method number 61 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 62 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 63 : public boolean containsAll(final Collection<?> coll) : 1
Method number 64 : public boolean add(final E object) : 1
Method number 65 : public boolean addAll(final Collection<? extends E> coll) : 2
Method number 66 : public boolean remove(final Object object) : 1
Method number 67 : public boolean removeAll(final Collection<?> coll) : 3
Method number 68 : public boolean retainAll(final Collection<?> coll) : 4
Method number 69 : public boolean add(final E object, final int count) : 1

========================================
Fichier : bag\HashBag.java
========================================

Classe : org.apache.commons.collections4.bag.HashBag
Method number 70 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 71 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : bag\package-info.java
========================================

========================================
Fichier : bag\PredicatedBag.java
========================================

Classe : org.apache.commons.collections4.bag.PredicatedBag
Method number 72 : public static PredicatedBag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate) : 1
Method number 73 : protected Bag<E> decorated() : 1
Method number 74 : public boolean equals(final Object object) : 1
Method number 75 : public int hashCode() : 1
Method number 76 : public boolean add(final E object, final int count) : 1
Method number 77 : public boolean remove(final Object object, final int count) : 1
Method number 78 : public Set<E> uniqueSet() : 1
Method number 79 : public int getCount(final Object object) : 1

========================================
Fichier : bag\PredicatedSortedBag.java
========================================

Classe : org.apache.commons.collections4.bag.PredicatedSortedBag
Method number 80 : public static PredicatedSortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate) : 1
Method number 81 : protected SortedBag<E> decorated() : 1
Method number 82 : public E first() : 1
Method number 83 : public E last() : 1
Method number 84 : public Comparator<? super E> comparator() : 1

========================================
Fichier : bag\SynchronizedBag.java
========================================

Classe : org.apache.commons.collections4.bag.SynchronizedBag
Method number 85 : public static SynchronizedBag<E> synchronizedBag(final Bag<E> bag) : 1
Method number 86 : protected Bag<E> getBag() : 1
Method number 87 : public boolean equals(final Object object) : 2
Method number 88 : public int hashCode() : 1
Method number 89 : public boolean add(final E object, final int count) : 1
Method number 90 : public boolean remove(final Object object, final int count) : 1
Method number 91 : public Set<E> uniqueSet() : 1
Method number 92 : public int getCount(final Object object) : 1

Classe : org.apache.commons.collections4.bag.SynchronizedBag.SynchronizedBagSet

========================================
Fichier : bag\SynchronizedSortedBag.java
========================================

Classe : org.apache.commons.collections4.bag.SynchronizedSortedBag
Method number 93 : public static SynchronizedSortedBag<E> synchronizedSortedBag(final SortedBag<E> bag) : 1
Method number 94 : protected SortedBag<E> getSortedBag() : 1
Method number 95 : public synchronized E first() : 1
Method number 96 : public synchronized E last() : 1
Method number 97 : public synchronized Comparator<? super E> comparator() : 1

========================================
Fichier : bag\TransformedBag.java
========================================

Classe : org.apache.commons.collections4.bag.TransformedBag
Method number 98 : public static Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer) : 1
Method number 99 : public static Bag<E> transformedBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer) : 3
Method number 100 : protected Bag<E> getBag() : 1
Method number 101 : public boolean equals(final Object object) : 1
Method number 102 : public int hashCode() : 1
Method number 103 : public int getCount(final Object object) : 1
Method number 104 : public boolean remove(final Object object, final int nCopies) : 1
Method number 105 : public boolean add(final E object, final int nCopies) : 1
Method number 106 : public Set<E> uniqueSet() : 1

========================================
Fichier : bag\TransformedSortedBag.java
========================================

Classe : org.apache.commons.collections4.bag.TransformedSortedBag
Method number 107 : public static TransformedSortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer) : 1
Method number 108 : public static TransformedSortedBag<E> transformedSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer) : 3
Method number 109 : protected SortedBag<E> getSortedBag() : 1
Method number 110 : public E first() : 1
Method number 111 : public E last() : 1
Method number 112 : public Comparator<? super E> comparator() : 1

========================================
Fichier : bag\TreeBag.java
========================================

Classe : org.apache.commons.collections4.bag.TreeBag
Method number 113 : public boolean add(final E object) : 2
Method number 114 : public E first() : 1
Method number 115 : public E last() : 1
Method number 116 : public Comparator<? super E> comparator() : 1
Method number 117 : protected SortedMap<E, AbstractMapBag.MutableInteger> getMap() : 1
Method number 118 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 119 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : bag\UnmodifiableBag.java
========================================

Classe : org.apache.commons.collections4.bag.UnmodifiableBag
Method number 120 : public static Bag<E> unmodifiableBag(final Bag<? extends E> bag) : 2
Method number 121 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 122 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 123 : public Iterator<E> iterator() : 1
Method number 124 : public boolean add(final E object) : 1
Method number 125 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 126 : public void clear() : 1
Method number 127 : public boolean remove(final Object object) : 1
Method number 128 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 129 : public boolean removeAll(final Collection<?> coll) : 1
Method number 130 : public boolean retainAll(final Collection<?> coll) : 1
Method number 131 : public boolean add(final E object, final int count) : 1
Method number 132 : public boolean remove(final Object object, final int count) : 1
Method number 133 : public Set<E> uniqueSet() : 1

========================================
Fichier : bag\UnmodifiableSortedBag.java
========================================

Classe : org.apache.commons.collections4.bag.UnmodifiableSortedBag
Method number 134 : public static SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag) : 2
Method number 135 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 136 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 137 : public Iterator<E> iterator() : 1
Method number 138 : public boolean add(final E object) : 1
Method number 139 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 140 : public void clear() : 1
Method number 141 : public boolean remove(final Object object) : 1
Method number 142 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 143 : public boolean removeAll(final Collection<?> coll) : 1
Method number 144 : public boolean retainAll(final Collection<?> coll) : 1
Method number 145 : public boolean add(final E object, final int count) : 1
Method number 146 : public boolean remove(final Object object, final int count) : 1
Method number 147 : public Set<E> uniqueSet() : 1

========================================
Fichier : Bag.java
========================================

Classe : org.apache.commons.collections4.Bag
Method number 148 :  int getCount(Object object) : 1
Method number 149 :  boolean add(E object) : 1
Method number 150 :  boolean add(E object, int nCopies) : 1
Method number 151 :  boolean remove(Object object) : 1
Method number 152 :  boolean remove(Object object, int nCopies) : 1
Method number 153 :  Set<E> uniqueSet() : 1
Method number 154 :  int size() : 1
Method number 155 :  boolean containsAll(Collection<?> coll) : 1
Method number 156 :  boolean removeAll(Collection<?> coll) : 1
Method number 157 :  boolean retainAll(Collection<?> coll) : 1
Method number 158 :  Iterator<E> iterator() : 1

========================================
Fichier : BagUtils.java
========================================

Classe : org.apache.commons.collections4.BagUtils
Method number 159 : public static Bag<E> synchronizedBag(final Bag<E> bag) : 1
Method number 160 : public static Bag<E> unmodifiableBag(final Bag<? extends E> bag) : 1
Method number 161 : public static Bag<E> predicatedBag(final Bag<E> bag, final Predicate<? super E> predicate) : 1
Method number 162 : public static Bag<E> transformingBag(final Bag<E> bag, final Transformer<? super E, ? extends E> transformer) : 1
Method number 163 : public static Bag<E> collectionBag(final Bag<E> bag) : 1
Method number 164 : public static SortedBag<E> synchronizedSortedBag(final SortedBag<E> bag) : 1
Method number 165 : public static SortedBag<E> unmodifiableSortedBag(final SortedBag<E> bag) : 1
Method number 166 : public static SortedBag<E> predicatedSortedBag(final SortedBag<E> bag, final Predicate<? super E> predicate) : 1
Method number 167 : public static SortedBag<E> transformingSortedBag(final SortedBag<E> bag, final Transformer<? super E, ? extends E> transformer) : 1
Method number 168 : public static Bag<E> emptyBag() : 1
Method number 169 : public static SortedBag<E> emptySortedBag() : 1

========================================
Fichier : bidimap\AbstractBidiMapDecorator.java
========================================

Classe : org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator
Method number 170 : protected BidiMap<K, V> decorated() : 1
Method number 171 : public MapIterator<K, V> mapIterator() : 1
Method number 172 : public K getKey(final Object value) : 1
Method number 173 : public K removeValue(final Object value) : 1
Method number 174 : public BidiMap<V, K> inverseBidiMap() : 1
Method number 175 : public Set<V> values() : 1

========================================
Fichier : bidimap\AbstractDualBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap
Method number 176 : protected abstract BidiMap<V, K> createBidiMap(Map<V, K> normalMap, Map<K, V> reverseMap, BidiMap<K, V> inverseMap) : 1
Method number 177 : public V get(final Object key) : 1
Method number 178 : public int size() : 1
Method number 179 : public boolean isEmpty() : 1
Method number 180 : public boolean containsKey(final Object key) : 1
Method number 181 : public boolean equals(final Object obj) : 1
Method number 182 : public int hashCode() : 1
Method number 183 : public String toString() : 1
Method number 184 : public V put(final K key, final V value) : 3
Method number 185 : public void putAll(final Map<? extends K, ? extends V> map) : 2
Method number 186 : public V remove(final Object key) : 2
Method number 187 : public void clear() : 1
Method number 188 : public boolean containsValue(final Object value) : 1
Method number 189 : public MapIterator<K, V> mapIterator() : 1
Method number 190 : public K getKey(final Object value) : 1
Method number 191 : public K removeValue(final Object value) : 2
Method number 192 : public BidiMap<V, K> inverseBidiMap() : 2
Method number 193 : public Set<K> keySet() : 2
Method number 194 : protected Iterator<K> createKeySetIterator(final Iterator<K> iterator) : 1
Method number 195 : public Set<V> values() : 2
Method number 196 : protected Iterator<V> createValuesIterator(final Iterator<V> iterator) : 1
Method number 197 : public Set<Map.Entry<K, V>> entrySet() : 2
Method number 198 : protected Iterator<Map.Entry<K, V>> createEntrySetIterator(final Iterator<Map.Entry<K, V>> iterator) : 1

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.View
Method number 199 : public boolean equals(final Object object) : 1
Method number 200 : public int hashCode() : 1
Method number 201 : public boolean removeIf(final Predicate<? super E> filter) : 4
Method number 202 : public boolean removeAll(final Collection<?> coll) : 3
Method number 203 : public boolean retainAll(final Collection<?> coll) : 5
Method number 204 : public void clear() : 1

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySet
Method number 205 : public Iterator<K> iterator() : 1
Method number 206 : public boolean contains(final Object key) : 1
Method number 207 : public boolean remove(final Object key) : 2

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator
Method number 208 : public K next() : 1
Method number 209 : public void remove() : 2

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values
Method number 210 : public Iterator<V> iterator() : 1
Method number 211 : public boolean contains(final Object value) : 1
Method number 212 : public boolean remove(final Object value) : 2

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.ValuesIterator
Method number 213 : public V next() : 1
Method number 214 : public void remove() : 2

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySet
Method number 215 : public Iterator<Map.Entry<K, V>> iterator() : 1
Method number 216 : public boolean remove(final Object obj) : 4

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySetIterator
Method number 217 : public Map.Entry<K, V> next() : 1
Method number 218 : public void remove() : 2

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.MapEntry
Method number 219 : public V setValue(final V value) : 2

Classe : org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator
Method number 220 : public boolean hasNext() : 1
Method number 221 : public K next() : 1
Method number 222 : public void remove() : 2
Method number 223 : public K getKey() : 2
Method number 224 : public V getValue() : 2
Method number 225 : public V setValue(final V value) : 3
Method number 226 : public void reset() : 1
Method number 227 : public String toString() : 2

========================================
Fichier : bidimap\AbstractOrderedBidiMapDecorator.java
========================================

Classe : org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator
Method number 228 : protected OrderedBidiMap<K, V> decorated() : 1
Method number 229 : public OrderedMapIterator<K, V> mapIterator() : 1
Method number 230 : public K firstKey() : 1
Method number 231 : public K lastKey() : 1
Method number 232 : public K nextKey(final K key) : 1
Method number 233 : public K previousKey(final K key) : 1
Method number 234 : public OrderedBidiMap<V, K> inverseBidiMap() : 1

========================================
Fichier : bidimap\AbstractSortedBidiMapDecorator.java
========================================

Classe : org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator
Method number 235 : protected SortedBidiMap<K, V> decorated() : 1
Method number 236 : public SortedBidiMap<V, K> inverseBidiMap() : 1
Method number 237 : public Comparator<? super K> comparator() : 1
Method number 238 : public Comparator<? super V> valueComparator() : 1
Method number 239 : public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
Method number 240 : public SortedMap<K, V> headMap(final K toKey) : 1
Method number 241 : public SortedMap<K, V> tailMap(final K fromKey) : 1

========================================
Fichier : bidimap\DualHashBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.DualHashBidiMap
Method number 242 : protected BidiMap<V, K> createBidiMap(final Map<V, K> normalMap, final Map<K, V> reverseMap, final BidiMap<K, V> inverseBidiMap) : 1
Method number 243 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 244 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : bidimap\DualLinkedHashBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap
Method number 245 : protected BidiMap<V, K> createBidiMap(final Map<V, K> normalMap, final Map<K, V> reverseMap, final BidiMap<K, V> inverseBidiMap) : 1
Method number 246 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 247 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : bidimap\DualTreeBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.DualTreeBidiMap
Method number 248 : protected DualTreeBidiMap<V, K> createBidiMap(final Map<V, K> normalMap, final Map<K, V> reverseMap, final BidiMap<K, V> inverseMap) : 1
Method number 249 : public Comparator<? super K> comparator() : 1
Method number 250 : public Comparator<? super V> valueComparator() : 1
Method number 251 : public K firstKey() : 1
Method number 252 : public K lastKey() : 1
Method number 253 : public K nextKey(final K key) : 4
Method number 254 : public K previousKey(final K key) : 4
Method number 255 : public OrderedMapIterator<K, V> mapIterator() : 1
Method number 256 : public SortedBidiMap<V, K> inverseSortedBidiMap() : 1
Method number 257 : public OrderedBidiMap<V, K> inverseOrderedBidiMap() : 1
Method number 258 : public SortedMap<K, V> headMap(final K toKey) : 1
Method number 259 : public SortedMap<K, V> tailMap(final K fromKey) : 1
Method number 260 : public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
Method number 261 : public SortedBidiMap<V, K> inverseBidiMap() : 1
Method number 262 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 263 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

Classe : org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap
Method number 264 : public boolean containsValue(final Object value) : 1
Method number 265 : public void clear() : 2
Method number 266 : public SortedMap<K, V> headMap(final K toKey) : 1
Method number 267 : public SortedMap<K, V> tailMap(final K fromKey) : 1
Method number 268 : public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
Method number 269 : protected DualTreeBidiMap<K, V> decorated() : 1
Method number 270 : public K previousKey(final K key) : 1
Method number 271 : public K nextKey(final K key) : 1

Classe : org.apache.commons.collections4.bidimap.DualTreeBidiMap.BidiOrderedMapIterator
Method number 272 : public boolean hasNext() : 1
Method number 273 : public K next() : 1
Method number 274 : public boolean hasPrevious() : 1
Method number 275 : public K previous() : 1
Method number 276 : public void remove() : 1
Method number 277 : public K getKey() : 2
Method number 278 : public V getValue() : 2
Method number 279 : public V setValue(final V value) : 3
Method number 280 : public void reset() : 1
Method number 281 : public String toString() : 2

========================================
Fichier : bidimap\package-info.java
========================================

========================================
Fichier : bidimap\TreeBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap
Method number 282 : public int size() : 1
Method number 283 : public boolean isEmpty() : 1
Method number 284 : public boolean containsKey(final Object key) : 1
Method number 285 : public boolean containsValue(final Object value) : 1
Method number 286 : public V get(final Object key) : 1
Method number 287 : public V put(final K key, final V value) : 1
Method number 288 : public void putAll(final Map<? extends K, ? extends V> map) : 2
Method number 289 : public V remove(final Object key) : 1
Method number 290 : public void clear() : 1
Method number 291 : public K getKey(final Object value) : 1
Method number 292 : public K removeValue(final Object value) : 1
Method number 293 : public K firstKey() : 2
Method number 294 : public K lastKey() : 2
Method number 295 : public K nextKey(final K key) : 1
Method number 296 : public K previousKey(final K key) : 1
Method number 297 : public Set<K> keySet() : 2
Method number 298 : public Set<V> values() : 2
Method number 299 : public Set<Map.Entry<K, V>> entrySet() : 2
Method number 300 : public OrderedMapIterator<K, V> mapIterator() : 2
Method number 301 : public OrderedBidiMap<V, K> inverseBidiMap() : 2
Method number 302 : public boolean equals(final Object obj) : 1
Method number 303 : public int hashCode() : 1
Method number 304 : public String toString() : 1
Method number 305 : private void doPut(final K key, final V value) : 7
Method number 306 : private V doRemoveKey(final Object key) : 2
Method number 307 : private K doRemoveValue(final Object value) : 2
Method number 308 : private Node<K, V> lookup(final Object data, final DataElement dataElement) : 3
Method number 309 : private Node<K, V> lookupKey(final Object key) : 1
Method number 310 : private Node<K, V> lookupValue(final Object value) : 1
Method number 311 : private Node<K, V> nextGreater(final Node<K, V> node, final DataElement dataElement) : 2
Method number 312 : private Node<K, V> nextSmaller(final Node<K, V> node, final DataElement dataElement) : 2
Method number 313 : private static int compare(final T o1, final T o2) : 1
Method number 314 : private Node<K, V> leastNode(final Node<K, V> node, final DataElement dataElement) : 3
Method number 315 : private Node<K, V> greatestNode(final Node<K, V> node, final DataElement dataElement) : 3
Method number 316 : private void copyColor(final Node<K, V> from, final Node<K, V> to, final DataElement dataElement) : 3
Method number 317 : private static boolean isRed(final Node<?, ?> node, final DataElement dataElement) : 1
Method number 318 : private static boolean isBlack(final Node<?, ?> node, final DataElement dataElement) : 1
Method number 319 : private static void makeRed(final Node<?, ?> node, final DataElement dataElement) : 2
Method number 320 : private static void makeBlack(final Node<?, ?> node, final DataElement dataElement) : 2
Method number 321 : private Node<K, V> getGrandParent(final Node<K, V> node, final DataElement dataElement) : 1
Method number 322 : private Node<K, V> getParent(final Node<K, V> node, final DataElement dataElement) : 1
Method number 323 : private Node<K, V> getRightChild(final Node<K, V> node, final DataElement dataElement) : 1
Method number 324 : private Node<K, V> getLeftChild(final Node<K, V> node, final DataElement dataElement) : 1
Method number 325 : private void rotateLeft(final Node<K, V> node, final DataElement dataElement) : 3
Method number 326 : private void rotateRight(final Node<K, V> node, final DataElement dataElement) : 3
Method number 327 : private void doRedBlackInsert(final Node<K, V> insertedNode, final DataElement dataElement) : 9
Method number 328 : private void doRedBlackDelete(final Node<K, V> deletedNode) : 10
Method number 329 : private void doRedBlackDeleteFixup(final Node<K, V> replacementNode, final DataElement dataElement) : 9
Method number 330 : private void swapPosition(final Node<K, V> x, final Node<K, V> y, final DataElement dataElement) : 14
Method number 331 : private static void checkNonNullComparable(final Object obj, final DataElement dataElement) : 2
Method number 332 : private static void checkKey(final Object key) : 1
Method number 333 : private static void checkValue(final Object value) : 1
Method number 334 : private static void checkKeyAndValue(final Object key, final Object value) : 1
Method number 335 : private void modify() : 1
Method number 336 : private void grow() : 1
Method number 337 : private void shrink() : 1
Method number 338 : private void insertValue(final Node<K, V> newNode) throws IllegalArgumentException : 6
Method number 339 : private boolean doEquals(final Object obj, final DataElement dataElement) : 5
Method number 340 : private int doHashCode(final DataElement dataElement) : 3
Method number 341 : private String doToString(final DataElement dataElement) : 4
Method number 342 : private MapIterator<?, ?> getMapIterator(final DataElement dataElement) : 1
Method number 343 : private void readObject(final ObjectInputStream stream) throws IOException, ClassNotFoundException : 2
Method number 344 : private void writeObject(final ObjectOutputStream stream) throws IOException : 2

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.AbstractView
Method number 345 : public int size() : 1
Method number 346 : public void clear() : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView
Method number 347 : public Iterator<K> iterator() : 1
Method number 348 : public boolean contains(final Object obj) : 1
Method number 349 : public boolean remove(final Object o) : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView
Method number 350 : public Iterator<V> iterator() : 1
Method number 351 : public boolean contains(final Object obj) : 1
Method number 352 : public boolean remove(final Object o) : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView
Method number 353 : public boolean contains(final Object obj) : 2
Method number 354 : public boolean remove(final Object obj) : 3
Method number 355 : public Iterator<Map.Entry<K, V>> iterator() : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView
Method number 356 : public boolean contains(final Object obj) : 2
Method number 357 : public boolean remove(final Object obj) : 3
Method number 358 : public Iterator<Map.Entry<V, K>> iterator() : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.AbstractViewIterator
Method number 359 : public final boolean hasNext() : 1
Method number 360 : protected Node<K, V> navigateNext() : 3
Method number 361 : public boolean hasPrevious() : 1
Method number 362 : protected Node<K, V> navigatePrevious() : 4
Method number 363 : public final void remove() : 4

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator
Method number 364 : public K getKey() : 2
Method number 365 : public V getValue() : 2
Method number 366 : public V setValue(final V obj) : 1
Method number 367 : public K next() : 1
Method number 368 : public K previous() : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator
Method number 369 : public V getKey() : 2
Method number 370 : public K getValue() : 2
Method number 371 : public K setValue(final K obj) : 1
Method number 372 : public V next() : 1
Method number 373 : public V previous() : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapEntryIterator
Method number 374 : public Map.Entry<K, V> next() : 1
Method number 375 : public Map.Entry<K, V> previous() : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapEntryIterator
Method number 376 : public Map.Entry<V, K> next() : 1
Method number 377 : public Map.Entry<V, K> previous() : 1
Method number 378 : private Map.Entry<V, K> createEntry(final Node<K, V> node) : 1

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.Node
Method number 379 : private Object getData(final DataElement dataElement) : 1
Method number 380 : private void setLeft(final Node<K, V> node, final DataElement dataElement) : 1
Method number 381 : private Node<K, V> getLeft(final DataElement dataElement) : 1
Method number 382 : private void setRight(final Node<K, V> node, final DataElement dataElement) : 1
Method number 383 : private Node<K, V> getRight(final DataElement dataElement) : 1
Method number 384 : private void setParent(final Node<K, V> node, final DataElement dataElement) : 1
Method number 385 : private Node<K, V> getParent(final DataElement dataElement) : 1
Method number 386 : private void swapColors(final Node<K, V> node, final DataElement dataElement) : 1
Method number 387 : private boolean isBlack(final DataElement dataElement) : 1
Method number 388 : private boolean isRed(final DataElement dataElement) : 1
Method number 389 : private void setBlack(final DataElement dataElement) : 1
Method number 390 : private void setRed(final DataElement dataElement) : 1
Method number 391 : private void copyColor(final Node<K, V> node, final DataElement dataElement) : 1
Method number 392 : private boolean isLeftChild(final DataElement dataElement) : 1
Method number 393 : private boolean isRightChild(final DataElement dataElement) : 1
Method number 394 : public K getKey() : 1
Method number 395 : public V getValue() : 1
Method number 396 : public V setValue(final V ignored) throws UnsupportedOperationException : 1
Method number 397 : public boolean equals(final Object obj) : 3
Method number 398 : public int hashCode() : 2

Classe : org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse
Method number 399 : public int size() : 1
Method number 400 : public boolean isEmpty() : 1
Method number 401 : public K get(final Object key) : 1
Method number 402 : public V getKey(final Object value) : 1
Method number 403 : public boolean containsKey(final Object key) : 1
Method number 404 : public boolean containsValue(final Object value) : 1
Method number 405 : public V firstKey() : 2
Method number 406 : public V lastKey() : 2
Method number 407 : public V nextKey(final V key) : 1
Method number 408 : public V previousKey(final V key) : 1
Method number 409 : public K put(final V key, final K value) : 1
Method number 410 : public void putAll(final Map<? extends V, ? extends K> map) : 2
Method number 411 : public K remove(final Object key) : 1
Method number 412 : public V removeValue(final Object value) : 1
Method number 413 : public void clear() : 1
Method number 414 : public Set<V> keySet() : 2
Method number 415 : public Set<K> values() : 2
Method number 416 : public Set<Map.Entry<V, K>> entrySet() : 2
Method number 417 : public OrderedMapIterator<V, K> mapIterator() : 2
Method number 418 : public OrderedBidiMap<K, V> inverseBidiMap() : 1
Method number 419 : public boolean equals(final Object obj) : 1
Method number 420 : public int hashCode() : 1
Method number 421 : public String toString() : 1

========================================
Fichier : bidimap\UnmodifiableBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.UnmodifiableBidiMap
Method number 422 : public static BidiMap<K, V> unmodifiableBidiMap(final BidiMap<? extends K, ? extends V> map) : 2
Method number 423 : public void clear() : 1
Method number 424 : public V put(final K key, final V value) : 1
Method number 425 : public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
Method number 426 : public V remove(final Object key) : 1
Method number 427 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 428 : public Set<K> keySet() : 1
Method number 429 : public Set<V> values() : 1
Method number 430 : public K removeValue(final Object value) : 1
Method number 431 : public MapIterator<K, V> mapIterator() : 1
Method number 432 : public synchronized BidiMap<V, K> inverseBidiMap() : 2

========================================
Fichier : bidimap\UnmodifiableOrderedBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap
Method number 433 : public static OrderedBidiMap<K, V> unmodifiableOrderedBidiMap(final OrderedBidiMap<? extends K, ? extends V> map) : 2
Method number 434 : public void clear() : 1
Method number 435 : public V put(final K key, final V value) : 1
Method number 436 : public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
Method number 437 : public V remove(final Object key) : 1
Method number 438 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 439 : public Set<K> keySet() : 1
Method number 440 : public Set<V> values() : 1
Method number 441 : public K removeValue(final Object value) : 1
Method number 442 : public OrderedBidiMap<V, K> inverseBidiMap() : 1
Method number 443 : public OrderedMapIterator<K, V> mapIterator() : 1
Method number 444 : public OrderedBidiMap<V, K> inverseOrderedBidiMap() : 2

========================================
Fichier : bidimap\UnmodifiableSortedBidiMap.java
========================================

Classe : org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap
Method number 445 : public static SortedBidiMap<K, V> unmodifiableSortedBidiMap(final SortedBidiMap<K, ? extends V> map) : 2
Method number 446 : public void clear() : 1
Method number 447 : public V put(final K key, final V value) : 1
Method number 448 : public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
Method number 449 : public V remove(final Object key) : 1
Method number 450 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 451 : public Set<K> keySet() : 1
Method number 452 : public Set<V> values() : 1
Method number 453 : public K removeValue(final Object value) : 1
Method number 454 : public OrderedMapIterator<K, V> mapIterator() : 1
Method number 455 : public SortedBidiMap<V, K> inverseBidiMap() : 2
Method number 456 : public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
Method number 457 : public SortedMap<K, V> headMap(final K toKey) : 1
Method number 458 : public SortedMap<K, V> tailMap(final K fromKey) : 1

========================================
Fichier : BidiMap.java
========================================

Classe : org.apache.commons.collections4.BidiMap
Method number 459 :  V put(K key, V value) : 1
Method number 460 :  K getKey(Object value) : 1
Method number 461 :  K removeValue(Object value) : 1
Method number 462 :  BidiMap<V, K> inverseBidiMap() : 1
Method number 463 :  Set<V> values() : 1

========================================
Fichier : bloomfilter\ArrayCountingBloomFilter.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.ArrayCountingBloomFilter
Method number 464 : public void clear() : 1
Method number 465 : public int getMaxCell() : 1
Method number 466 : public ArrayCountingBloomFilter copy() : 1
Method number 467 : public int characteristics() : 1
Method number 468 : public int cardinality() : 1
Method number 469 : public boolean add(final CellProducer other) : 1
Method number 470 : public boolean subtract(final CellProducer other) : 1
Method number 471 : public boolean isValid() : 1
Method number 472 : public boolean forEachCell(final CellProducer.CellConsumer consumer) : 3
Method number 473 : public boolean forEachIndex(final IntPredicate consumer) : 3
Method number 474 : public boolean forEachBitMap(final LongPredicate consumer) : 7
Method number 475 : private boolean add(final int idx, final int addend) : 1
Method number 476 : private boolean subtract(final int idx, final int subtrahend) : 1
Method number 477 : public Shape getShape() : 1
Method number 478 : public boolean contains(final IndexProducer indexProducer) : 1
Method number 479 : public boolean contains(final BitMapProducer bitMapProducer) : 1
Method number 480 : public int[] asIndexArray() : 1
Method number 481 : public int getMaxInsert(final CellProducer cellProducer) : 1

========================================
Fichier : bloomfilter\BitMap.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.BitMap
Method number 482 : public static int numberOfBitMaps(final int numberOfBits) : 1
Method number 483 : public static boolean contains(final long[] bitMaps, final int bitIndex) : 1
Method number 484 : public static void set(final long[] bitMaps, final int bitIndex) : 1
Method number 485 : public static int getLongIndex(final int bitIndex) : 1
Method number 486 : public static long getLongBit(final int bitIndex) : 1
Method number 487 : public static int mod(final long dividend, final int divisor) : 1

========================================
Fichier : bloomfilter\BitMapProducer.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.BitMapProducer
Method number 488 :  boolean forEachBitMap(LongPredicate predicate) : 1
Method number 489 :  boolean forEachBitMapPair(final BitMapProducer other, final LongBiPredicate func) : 1
Method number 490 :  long[] asBitMapArray() : 1
Method number 491 :  static BitMapProducer fromBitMapArray(final long... bitMaps) : 1
Method number 492 :  static BitMapProducer fromIndexProducer(final IndexProducer producer, final int numberOfBits) : 1

========================================
Fichier : bloomfilter\BloomFilter.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.BloomFilter
Method number 493 :  BloomFilter copy() : 1
Method number 494 :  int characteristics() : 1
Method number 495 :  Shape getShape() : 1
Method number 496 :  void clear() : 1
Method number 497 :  boolean contains(final BloomFilter other) : 1
Method number 498 :  boolean contains(final Hasher hasher) : 1
Method number 499 :  boolean contains(IndexProducer indexProducer) : 1
Method number 500 :  boolean contains(final BitMapProducer bitMapProducer) : 1
Method number 501 :  boolean merge(final BloomFilter other) : 1
Method number 502 :  boolean merge(final Hasher hasher) : 1
Method number 503 :  boolean merge(IndexProducer indexProducer) : 1
Method number 504 :  boolean merge(BitMapProducer bitMapProducer) : 1
Method number 505 :  boolean isFull() : 1
Method number 506 :  int cardinality() : 1
Method number 507 :  int estimateN() : 3
Method number 508 :  int estimateUnion(final BloomFilter other) : 1
Method number 509 :  int estimateIntersection(final BloomFilter other) : 3
Method number 510 :  IndexProducer uniqueIndices() : 1

========================================
Fichier : bloomfilter\CellProducer.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.CellProducer
Method number 511 :  boolean forEachCell(CellConsumer consumer) : 1
Method number 512 :  boolean forEachIndex(final IntPredicate predicate) : 1
Method number 513 :  static CellProducer from(final IndexProducer producer) : 1

Classe : org.apache.commons.collections4.bloomfilter.CellProducer.CellConsumer
Method number 514 :  boolean test(int index, int count) : 1

========================================
Fichier : bloomfilter\CountingBloomFilter.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.CountingBloomFilter
Method number 515 :  boolean isValid() : 1
Method number 516 :  int getMaxCell() : 1
Method number 517 :  int getMaxInsert(final BloomFilter bloomFilter) : 1
Method number 518 :  int getMaxInsert(final IndexProducer idxProducer) : 1
Method number 519 :  int getMaxInsert(CellProducer cellProducer) : 1
Method number 520 :  int getMaxInsert(final Hasher hasher) : 1
Method number 521 :  int getMaxInsert(final BitMapProducer bitMapProducer) : 2
Method number 522 :  boolean merge(final BloomFilter other) : 1
Method number 523 :  boolean merge(final Hasher hasher) : 1
Method number 524 :  boolean merge(final IndexProducer indexProducer) : 1
Method number 525 :  boolean merge(final BitMapProducer bitMapProducer) : 1
Method number 526 :  boolean remove(final BloomFilter other) : 1
Method number 527 :  boolean remove(final Hasher hasher) : 1
Method number 528 :  boolean remove(final IndexProducer indexProducer) : 1
Method number 529 :  boolean remove(final BitMapProducer bitMapProducer) : 1
Method number 530 :  boolean add(CellProducer other) : 1
Method number 531 :  boolean subtract(CellProducer other) : 1
Method number 532 :  CountingBloomFilter copy() : 1
Method number 533 :  IndexProducer uniqueIndices() : 1

========================================
Fichier : bloomfilter\CountingLongPredicate.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.CountingLongPredicate
Method number 534 : public boolean test(final long other) : 1
Method number 535 :  boolean forEachRemaining() : 2

========================================
Fichier : bloomfilter\EnhancedDoubleHasher.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.EnhancedDoubleHasher
Method number 536 : private static long toLong(final byte[] byteArray, final int offset, final int len) : 2
Method number 537 :  long getInitial() : 1
Method number 538 :  long getIncrement() : 1
Method number 539 : public IndexProducer indices(final Shape shape) : 1

========================================
Fichier : bloomfilter\Hasher.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.Hasher
Method number 540 :  IndexProducer indices(Shape shape) : 1

========================================
Fichier : bloomfilter\IndexFilter.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.IndexFilter
Method number 541 : public static IntPredicate create(final Shape shape, final IntPredicate consumer) : 1
Method number 542 : public boolean test(final int number) : 3

Classe : org.apache.commons.collections4.bloomfilter.IndexFilter.ArrayTracker
Method number 543 : public boolean test(final int number) : 4

Classe : org.apache.commons.collections4.bloomfilter.IndexFilter.BitMapTracker
Method number 544 : public boolean test(final int number) : 1

========================================
Fichier : bloomfilter\IndexProducer.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.IndexProducer
Method number 545 :  boolean forEachIndex(IntPredicate predicate) : 1
Method number 546 :  static IndexProducer fromIndexArray(final int... values) : 1
Method number 547 :  static IndexProducer fromBitMapProducer(final BitMapProducer producer) : 1
Method number 548 :  int[] asIndexArray() : 1
Method number 549 :  IndexProducer uniqueIndices() : 1

========================================
Fichier : bloomfilter\IndexUtils.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.IndexUtils
Method number 550 :  static int[] ensureCapacityForAdd(final int[] array, final int index) : 2

========================================
Fichier : bloomfilter\LongBiPredicate.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.LongBiPredicate
Method number 551 :  boolean test(long x, long y) : 1

========================================
Fichier : bloomfilter\package-info.java
========================================

========================================
Fichier : bloomfilter\SetOperations.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.SetOperations
Method number 552 : private static int cardinality(final BitMapProducer first, final BitMapProducer second, final LongBinaryOperator op) : 1
Method number 553 : public static int cardinality(final BitMapProducer producer) : 1
Method number 554 : public static int andCardinality(final BitMapProducer first, final BitMapProducer second) : 1
Method number 555 : public static int orCardinality(final BitMapProducer first, final BitMapProducer second) : 1
Method number 556 : public static int xorCardinality(final BitMapProducer first, final BitMapProducer second) : 1
Method number 557 : public static double cosineDistance(final BitMapProducer first, final BitMapProducer second) : 1
Method number 558 : public static double cosineSimilarity(final BitMapProducer first, final BitMapProducer second) : 1
Method number 559 : public static double cosineSimilarity(final BloomFilter first, final BloomFilter second) : 1
Method number 560 : public static int hammingDistance(final BitMapProducer first, final BitMapProducer second) : 1
Method number 561 : public static double jaccardDistance(final BitMapProducer first, final BitMapProducer second) : 1
Method number 562 : public static double jaccardSimilarity(final BitMapProducer first, final BitMapProducer second) : 1

========================================
Fichier : bloomfilter\Shape.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.Shape
Method number 563 : public boolean equals(final Object obj) : 2
Method number 564 : public int hashCode() : 1
Method number 565 : public int getNumberOfBits() : 1
Method number 566 : public int getNumberOfHashFunctions() : 1
Method number 567 : public double getProbability(final int numberOfItems) : 3
Method number 568 : public String toString() : 1
Method number 569 : public boolean isSparse(final int cardinality) : 1
Method number 570 : public double estimateN(final int cardinality) : 1
Method number 571 : public static Shape fromPMK(final double probability, final int numberOfBits, final int numberOfHashFunctions) : 1
Method number 572 : public static Shape fromNP(final int numberOfItems, final double probability) : 2
Method number 573 : public static Shape fromKM(final int numberOfHashFunctions, final int numberOfBits) : 1
Method number 574 : public static Shape fromNM(final int numberOfItems, final int numberOfBits) : 1
Method number 575 : public static Shape fromNMK(final int numberOfItems, final int numberOfBits, final int numberOfHashFunctions) : 1
Method number 576 : private static int checkNumberOfItems(final int numberOfItems) : 2
Method number 577 : private static int checkNumberOfBits(final int numberOfBits) : 2
Method number 578 : private static int checkNumberOfHashFunctions(final int numberOfHashFunctions) : 2
Method number 579 : private static void checkProbability(final double probability) : 2
Method number 580 : private static void checkCalculatedProbability(final double probability) : 2
Method number 581 : private static int calculateNumberOfHashFunctions(final int numberOfItems, final int numberOfBits) : 2

========================================
Fichier : bloomfilter\SimpleBloomFilter.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.SimpleBloomFilter
Method number 582 : public void clear() : 1
Method number 583 : public long[] asBitMapArray() : 1
Method number 584 : public boolean forEachBitMapPair(final BitMapProducer other, final LongBiPredicate func) : 1
Method number 585 : public SimpleBloomFilter copy() : 1
Method number 586 : public boolean merge(final IndexProducer indexProducer) : 1
Method number 587 : public boolean merge(final BitMapProducer bitMapProducer) : 1
Method number 588 : public boolean merge(final Hasher hasher) : 1
Method number 589 : public boolean merge(final BloomFilter other) : 2
Method number 590 : public Shape getShape() : 1
Method number 591 : public int characteristics() : 1
Method number 592 : public int cardinality() : 2
Method number 593 : public boolean forEachIndex(final IntPredicate consumer) : 1
Method number 594 : public boolean forEachBitMap(final LongPredicate consumer) : 3
Method number 595 : public boolean contains(final IndexProducer indexProducer) : 1

========================================
Fichier : bloomfilter\SparseBloomFilter.java
========================================

Classe : org.apache.commons.collections4.bloomfilter.SparseBloomFilter
Method number 596 : public long[] asBitMapArray() : 2
Method number 597 : public SparseBloomFilter copy() : 1
Method number 598 : private boolean add(final int idx) : 1
Method number 599 : public boolean merge(final IndexProducer indexProducer) : 4
Method number 600 : public boolean merge(final BitMapProducer bitMapProducer) : 1
Method number 601 : public boolean merge(final Hasher hasher) : 1
Method number 602 : public boolean merge(final BloomFilter other) : 1
Method number 603 : public void clear() : 1
Method number 604 : public Shape getShape() : 1
Method number 605 : public int characteristics() : 1
Method number 606 : public int cardinality() : 1
Method number 607 : public boolean forEachIndex(final IntPredicate consumer) : 3
Method number 608 : public boolean forEachBitMap(final LongPredicate consumer) : 7
Method number 609 : public boolean contains(final IndexProducer indexProducer) : 1
Method number 610 : public boolean contains(final BitMapProducer bitMapProducer) : 1

========================================
Fichier : BoundedCollection.java
========================================

Classe : org.apache.commons.collections4.BoundedCollection
Method number 611 :  boolean isFull() : 1
Method number 612 :  int maxSize() : 1

========================================
Fichier : BoundedMap.java
========================================

Classe : org.apache.commons.collections4.BoundedMap
Method number 613 :  boolean isFull() : 1
Method number 614 :  int maxSize() : 1

========================================
Fichier : Closure.java
========================================

Classe : org.apache.commons.collections4.Closure
Method number 615 :  void execute(T input) : 1

========================================
Fichier : ClosureUtils.java
========================================

Classe : org.apache.commons.collections4.ClosureUtils
Method number 616 : public static Closure<E> exceptionClosure() : 1
Method number 617 : public static Closure<E> nopClosure() : 1
Method number 618 : public static Closure<E> asClosure(final Transformer<? super E, ?> transformer) : 1
Method number 619 : public static Closure<E> forClosure(final int count, final Closure<? super E> closure) : 1
Method number 620 : public static Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure) : 1
Method number 621 : public static Closure<E> doWhileClosure(final Closure<? super E> closure, final Predicate<? super E> predicate) : 1
Method number 622 : public static Closure<E> invokerClosure(final String methodName) : 1
Method number 623 : public static Closure<E> invokerClosure(final String methodName, final Class<?>[] paramTypes, final Object[] args) : 1
Method number 624 : public static Closure<E> chainedClosure(final Closure<? super E>... closures) : 1
Method number 625 : public static Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures) : 1
Method number 626 : public static Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure) : 1
Method number 627 : public static Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure) : 1
Method number 628 : public static Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures) : 1
Method number 629 : public static Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure) : 1
Method number 630 : public static Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures) : 1
Method number 631 : public static Closure<E> switchMapClosure(final Map<? extends E, Closure<E>> objectsAndClosures) : 2

========================================
Fichier : collection\AbstractCollectionDecorator.java
========================================

Classe : org.apache.commons.collections4.collection.AbstractCollectionDecorator
Method number 632 : protected Collection<E> decorated() : 1
Method number 633 : protected void setCollection(final Collection<E> coll) : 1
Method number 634 : public boolean add(final E object) : 1
Method number 635 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 636 : public void clear() : 1
Method number 637 : public boolean contains(final Object object) : 1
Method number 638 : public boolean isEmpty() : 1
Method number 639 : public Iterator<E> iterator() : 1
Method number 640 : public boolean remove(final Object object) : 1
Method number 641 : public int size() : 1
Method number 642 : public Object[] toArray() : 1
Method number 643 : public T[] toArray(final T[] object) : 1
Method number 644 : public boolean containsAll(final Collection<?> coll) : 1
Method number 645 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 646 : public boolean removeAll(final Collection<?> coll) : 1
Method number 647 : public boolean retainAll(final Collection<?> coll) : 1
Method number 648 : public String toString() : 1

========================================
Fichier : collection\CompositeCollection.java
========================================

Classe : org.apache.commons.collections4.collection.CompositeCollection
Method number 649 : public int size() : 2
Method number 650 : public boolean isEmpty() : 3
Method number 651 : public boolean contains(final Object obj) : 3
Method number 652 : public Iterator<E> iterator() : 2
Method number 653 : public Object[] toArray() : 2
Method number 654 : public T[] toArray(final T[] array) : 5
Method number 655 : public boolean add(final E obj) : 2
Method number 656 : public boolean remove(final Object obj) : 2
Method number 657 : public boolean containsAll(final Collection<?> coll) : 4
Method number 658 : public boolean addAll(final Collection<? extends E> coll) : 2
Method number 659 : public boolean removeAll(final Collection<?> coll) : 3
Method number 660 : public boolean removeIf(final Predicate<? super E> filter) : 3
Method number 661 : public boolean retainAll(final Collection<?> coll) : 3
Method number 662 : public void clear() : 2
Method number 663 : public void setMutator(final CollectionMutator<E> mutator) : 1
Method number 664 : public void addComposited(final Collection<E> compositeCollection) : 2
Method number 665 : public void addComposited(final Collection<E> compositeCollection1, final Collection<E> compositeCollection2) : 3
Method number 666 : public void addComposited(final Collection<E>... compositeCollections) : 3
Method number 667 : public void removeComposited(final Collection<E> coll) : 1
Method number 668 : public Collection<E> toCollection() : 1
Method number 669 : public List<Collection<E>> getCollections() : 1
Method number 670 : protected CollectionMutator<E> getMutator() : 1

Classe : org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator
Method number 671 :  boolean add(CompositeCollection<E> composite, List<Collection<E>> collections, E obj) : 1
Method number 672 :  boolean addAll(CompositeCollection<E> composite, List<Collection<E>> collections, Collection<? extends E> coll) : 1
Method number 673 :  boolean remove(CompositeCollection<E> composite, List<Collection<E>> collections, Object obj) : 1

========================================
Fichier : collection\IndexedCollection.java
========================================

Classe : org.apache.commons.collections4.collection.IndexedCollection
Method number 674 : public static IndexedCollection<K, C> uniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer) : 1
Method number 675 : public static IndexedCollection<K, C> nonUniqueIndexedCollection(final Collection<C> coll, final Transformer<C, K> keyTransformer) : 1
Method number 676 : public boolean add(final C object) : 2
Method number 677 : public boolean addAll(final Collection<? extends C> coll) : 2
Method number 678 : public void clear() : 1
Method number 679 : public boolean contains(final Object object) : 1
Method number 680 : public boolean containsAll(final Collection<?> coll) : 3
Method number 681 : public C get(final K key) : 1
Method number 682 : public Collection<C> values(final K key) : 1
Method number 683 : public void reindex() : 2
Method number 684 : public boolean remove(final Object object) : 2
Method number 685 : public boolean removeIf(final Predicate<? super C> filter) : 5
Method number 686 : public boolean removeAll(final Collection<?> coll) : 2
Method number 687 : public boolean retainAll(final Collection<?> coll) : 2
Method number 688 : private void addToIndex(final C object) : 2
Method number 689 : private void removeFromIndex(final C object) : 1

========================================
Fichier : collection\package-info.java
========================================

========================================
Fichier : collection\PredicatedCollection.java
========================================

Classe : org.apache.commons.collections4.collection.PredicatedCollection
Method number 690 : public static Builder<E> builder(final Predicate<? super E> predicate) : 1
Method number 691 : public static Builder<E> notNullBuilder() : 1
Method number 692 : public static PredicatedCollection<T> predicatedCollection(final Collection<T> coll, final Predicate<? super T> predicate) : 1
Method number 693 : protected void validate(final E object) : 2
Method number 694 : public boolean add(final E object) : 1
Method number 695 : public boolean addAll(final Collection<? extends E> coll) : 2

Classe : org.apache.commons.collections4.collection.PredicatedCollection.Builder
Method number 696 : public Builder<E> add(final E item) : 2
Method number 697 : public Builder<E> addAll(final Collection<? extends E> items) : 3
Method number 698 : public List<E> createPredicatedList() : 1
Method number 699 : public List<E> createPredicatedList(final List<E> list) : 1
Method number 700 : public Set<E> createPredicatedSet() : 1
Method number 701 : public Set<E> createPredicatedSet(final Set<E> set) : 1
Method number 702 : public MultiSet<E> createPredicatedMultiSet() : 1
Method number 703 : public MultiSet<E> createPredicatedMultiSet(final MultiSet<E> multiset) : 1
Method number 704 : public Bag<E> createPredicatedBag() : 1
Method number 705 : public Bag<E> createPredicatedBag(final Bag<E> bag) : 1
Method number 706 : public Queue<E> createPredicatedQueue() : 1
Method number 707 : public Queue<E> createPredicatedQueue(final Queue<E> queue) : 1
Method number 708 : public Collection<E> rejectedElements() : 1

========================================
Fichier : collection\SynchronizedCollection.java
========================================

Classe : org.apache.commons.collections4.collection.SynchronizedCollection
Method number 709 : public static SynchronizedCollection<T> synchronizedCollection(final Collection<T> coll) : 1
Method number 710 : protected Collection<E> decorated() : 1
Method number 711 : public boolean add(final E object) : 1
Method number 712 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 713 : public void clear() : 1
Method number 714 : public boolean contains(final Object object) : 1
Method number 715 : public boolean containsAll(final Collection<?> coll) : 1
Method number 716 : public boolean isEmpty() : 1
Method number 717 : public Iterator<E> iterator() : 1
Method number 718 : public Object[] toArray() : 1
Method number 719 : public T[] toArray(final T[] object) : 1
Method number 720 : public boolean remove(final Object object) : 1
Method number 721 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 722 : public boolean removeAll(final Collection<?> coll) : 1
Method number 723 : public boolean retainAll(final Collection<?> coll) : 1
Method number 724 : public int size() : 1
Method number 725 : public boolean equals(final Object object) : 1
Method number 726 : public int hashCode() : 1
Method number 727 : public String toString() : 1

========================================
Fichier : collection\TransformedCollection.java
========================================

Classe : org.apache.commons.collections4.collection.TransformedCollection
Method number 728 : public static TransformedCollection<E> transformingCollection(final Collection<E> coll, final Transformer<? super E, ? extends E> transformer) : 1
Method number 729 : public static TransformedCollection<E> transformedCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer) : 3
Method number 730 : protected E transform(final E object) : 1
Method number 731 : protected Collection<E> transform(final Collection<? extends E> coll) : 2
Method number 732 : public boolean add(final E object) : 1
Method number 733 : public boolean addAll(final Collection<? extends E> coll) : 1

========================================
Fichier : collection\UnmodifiableBoundedCollection.java
========================================

Classe : org.apache.commons.collections4.collection.UnmodifiableBoundedCollection
Method number 734 : public static BoundedCollection<E> unmodifiableBoundedCollection(final BoundedCollection<? extends E> coll) : 2
Method number 735 : public static BoundedCollection<E> unmodifiableBoundedCollection(Collection<? extends E> collection) : 5
Method number 736 : public Iterator<E> iterator() : 1
Method number 737 : public boolean add(final E object) : 1
Method number 738 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 739 : public void clear() : 1
Method number 740 : public boolean remove(final Object object) : 1
Method number 741 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 742 : public boolean removeAll(final Collection<?> coll) : 1
Method number 743 : public boolean retainAll(final Collection<?> coll) : 1
Method number 744 : public boolean isFull() : 1
Method number 745 : public int maxSize() : 1
Method number 746 : protected BoundedCollection<E> decorated() : 1

========================================
Fichier : collection\UnmodifiableCollection.java
========================================

Classe : org.apache.commons.collections4.collection.UnmodifiableCollection
Method number 747 : public static Collection<T> unmodifiableCollection(final Collection<? extends T> coll) : 2
Method number 748 : public Iterator<E> iterator() : 1
Method number 749 : public boolean add(final E object) : 1
Method number 750 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 751 : public void clear() : 1
Method number 752 : public boolean remove(final Object object) : 1
Method number 753 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 754 : public boolean removeAll(final Collection<?> coll) : 1
Method number 755 : public boolean retainAll(final Collection<?> coll) : 1

========================================
Fichier : CollectionUtils.java
========================================

Classe : org.apache.commons.collections4.CollectionUtils
Method number 756 : public static Collection<T> emptyCollection() : 1
Method number 757 : public static Collection<T> emptyIfNull(final Collection<T> collection) : 1
Method number 758 : public static Collection<O> union(final Iterable<? extends O> a, final Iterable<? extends O> b) : 2
Method number 759 : public static Collection<O> intersection(final Iterable<? extends O> a, final Iterable<? extends O> b) : 2
Method number 760 : public static Collection<O> disjunction(final Iterable<? extends O> a, final Iterable<? extends O> b) : 2
Method number 761 : public static Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b) : 1
Method number 762 : public static Collection<O> subtract(final Iterable<? extends O> a, final Iterable<? extends O> b, final Predicate<O> p) : 5
Method number 763 : public static boolean containsAll(final Collection<?> coll1, final Collection<?> coll2) : 7
Method number 764 : public static boolean containsAny(final Collection<?> coll1, @SuppressWarnings("unchecked") final T... coll2) : 6
Method number 765 : public static boolean containsAny(final Collection<?> coll1, final Collection<?> coll2) : 6
Method number 766 : public static Map<O, Integer> getCardinalityMap(final Iterable<? extends O> coll) : 3
Method number 767 : public static boolean isSubCollection(final Collection<?> a, final Collection<?> b) : 3
Method number 768 : public static boolean isProperSubCollection(final Collection<?> a, final Collection<?> b) : 1
Method number 769 : public static boolean isEqualCollection(final Collection<?> a, final Collection<?> b) : 5
Method number 770 : public static boolean isEqualCollection(final Collection<? extends E> a, final Collection<? extends E> b, final Equator<? super E> equator) : 2
Method number 771 : public static int hashCode(final Collection<? extends E> collection, final Equator<? super E> equator) : 3
Method number 772 : public static int cardinality(final O obj, final Iterable<? super O> collection) : 1
Method number 773 : public static T find(final Iterable<T> collection, final Predicate<? super T> predicate) : 1
Method number 774 : public static C forAllDo(final Iterable<T> collection, final C closure) : 2
Method number 775 : public static C forAllDo(final Iterator<T> iterator, final C closure) : 2
Method number 776 : public static T forAllButLastDo(final Iterable<T> collection, final C closure) : 1
Method number 777 : public static T forAllButLastDo(final Iterator<T> iterator, final C closure) : 1
Method number 778 : public static boolean filter(final Iterable<T> collection, final Predicate<? super T> predicate) : 4
Method number 779 : public static boolean filterInverse(final Iterable<T> collection, final Predicate<? super T> predicate) : 1
Method number 780 : public static void transform(final Collection<C> collection, final Transformer<? super C, ? extends C> transformer) : 4
Method number 781 : public static int countMatches(final Iterable<C> input, final Predicate<? super C> predicate) : 1
Method number 782 : public static boolean exists(final Iterable<C> input, final Predicate<? super C> predicate) : 1
Method number 783 : public static boolean matchesAll(final Iterable<C> input, final Predicate<? super C> predicate) : 1
Method number 784 : public static Collection<O> select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate) : 2
Method number 785 : public static R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection) : 4
Method number 786 : public static R select(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection, final R rejectedCollection) : 4
Method number 787 : public static Collection<O> selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate) : 2
Method number 788 : public static R selectRejected(final Iterable<? extends O> inputCollection, final Predicate<? super O> predicate, final R outputCollection) : 4
Method number 789 : public static Collection<O> collect(final Iterable<I> inputCollection, final Transformer<? super I, ? extends O> transformer) : 2
Method number 790 : public static Collection<O> collect(final Iterator<I> inputIterator, final Transformer<? super I, ? extends O> transformer) : 1
Method number 791 : public static R collect(final Iterable<? extends I> inputCollection, final Transformer<? super I, ? extends O> transformer, final R outputCollection) : 2
Method number 792 : public static R collect(final Iterator<? extends I> inputIterator, final Transformer<? super I, ? extends O> transformer, final R outputCollection) : 3
Method number 793 : public static boolean addIgnoreNull(final Collection<T> collection, final T object) : 1
Method number 794 : public static boolean addAll(final Collection<C> collection, final Iterable<? extends C> iterable) : 2
Method number 795 : public static boolean addAll(final Collection<C> collection, final Iterator<? extends C> iterator) : 2
Method number 796 : public static boolean addAll(final Collection<C> collection, final Enumeration<? extends C> enumeration) : 2
Method number 797 : public static boolean addAll(final Collection<C> collection, final C... elements) : 2
Method number 798 : public static T get(final Iterator<T> iterator, final int index) : 1
Method number 799 :  static void checkIndexBounds(final int index) : 2
Method number 800 : public static T get(final Iterable<T> iterable, final int index) : 1
Method number 801 : public static Object get(final Object object, final int index) : 8
Method number 802 : public static Map.Entry<K, V> get(final Map<K, V> map, final int index) : 1
Method number 803 : public static int size(final Object object) : 3
Method number 804 : public static boolean sizeIsEmpty(final Object object) : 8
Method number 805 : public static boolean isEmpty(final Collection<?> coll) : 1
Method number 806 : public static boolean isNotEmpty(final Collection<?> coll) : 1
Method number 807 : public static void reverseArray(final Object[] array) : 2
Method number 808 : public static boolean isFull(final Collection<? extends Object> collection) : 2
Method number 809 : public static int maxSize(final Collection<? extends Object> collection) : 2
Method number 810 : public static List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b) : 1
Method number 811 : public static List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final boolean includeDuplicates) : 1
Method number 812 : public static List<O> collate(final Iterable<? extends O> a, final Iterable<? extends O> b, final Comparator<? super O> c) : 1
Method number 813 : public static List<O> collate(final Iterable<? extends O> iterableA, final Iterable<? extends O> iterableB, final Comparator<? super O> comparator, final boolean includeDuplicates) : 4
Method number 814 : public static Collection<List<E>> permutations(final Collection<E> collection) : 2
Method number 815 : public static Collection<C> retainAll(final Collection<C> collection, final Collection<?> retain) : 1
Method number 816 : public static Collection<E> retainAll(final Iterable<E> collection, final Iterable<? extends E> retain, final Equator<? super E> equator) : 3
Method number 817 : public static Collection<E> removeRange(final Collection<E> input, final int startIndex, final int endIndex) : 3
Method number 818 : public static Collection<E> removeCount(final Collection<E> input, int startIndex, int count) : 6
Method number 819 : public static Collection<E> removeAll(final Collection<E> collection, final Collection<?> remove) : 1
Method number 820 : public static Collection<E> removeAll(final Iterable<E> collection, final Iterable<? extends E> remove, final Equator<? super E> equator) : 3
Method number 821 : public static Collection<C> synchronizedCollection(final Collection<C> collection) : 1
Method number 822 : public static Collection<C> unmodifiableCollection(final Collection<? extends C> collection) : 1
Method number 823 : public static Collection<C> predicatedCollection(final Collection<C> collection, final Predicate<? super C> predicate) : 1
Method number 824 : public static Collection<E> transformingCollection(final Collection<E> collection, final Transformer<? super E, ? extends E> transformer) : 1
Method number 825 : public static E extractSingleton(final Collection<E> collection) : 2

Classe : org.apache.commons.collections4.CollectionUtils.CardinalityHelper
Method number 826 : public final int max(final Object obj) : 1
Method number 827 : public final int min(final Object obj) : 1
Method number 828 : public int freqA(final Object obj) : 1
Method number 829 : public int freqB(final Object obj) : 1
Method number 830 : private int getFreq(final Object obj, final Map<?, Integer> freqMap) : 2

Classe : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper
Method number 831 : public Iterator<O> iterator() : 1
Method number 832 : public void setCardinality(final O obj, final int count) : 2
Method number 833 : public Collection<O> list() : 1

Classe : org.apache.commons.collections4.CollectionUtils.EquatorWrapper
Method number 834 : public O getObject() : 1
Method number 835 : public boolean equals(final Object obj) : 2
Method number 836 : public int hashCode() : 1

========================================
Fichier : comparators\BooleanComparator.java
========================================

Classe : org.apache.commons.collections4.comparators.BooleanComparator
Method number 837 : public static BooleanComparator getTrueFirstComparator() : 1
Method number 838 : public static BooleanComparator getFalseFirstComparator() : 1
Method number 839 : public static BooleanComparator booleanComparator(final boolean trueFirst) : 1
Method number 840 : public int compare(final Boolean b1, final Boolean b2) : 1
Method number 841 : public int hashCode() : 1
Method number 842 : public boolean equals(final Object object) : 1
Method number 843 : public boolean sortsTrueFirst() : 1

========================================
Fichier : comparators\ComparableComparator.java
========================================

Classe : org.apache.commons.collections4.comparators.ComparableComparator
Method number 844 : public static ComparableComparator<E> comparableComparator() : 1
Method number 845 : public int compare(final E obj1, final E obj2) : 1
Method number 846 : public int hashCode() : 1
Method number 847 : public boolean equals(final Object object) : 1

========================================
Fichier : comparators\ComparatorChain.java
========================================

Classe : org.apache.commons.collections4.comparators.ComparatorChain
Method number 848 : public void addComparator(final Comparator<E> comparator) : 1
Method number 849 : public void addComparator(final Comparator<E> comparator, final boolean reverse) : 2
Method number 850 : public void setComparator(final int index, final Comparator<E> comparator) throws IndexOutOfBoundsException : 1
Method number 851 : public void setComparator(final int index, final Comparator<E> comparator, final boolean reverse) : 2
Method number 852 : public void setForwardSort(final int index) : 1
Method number 853 : public void setReverseSort(final int index) : 1
Method number 854 : public int size() : 1
Method number 855 : public boolean isLocked() : 1
Method number 856 : private void checkLocked() : 2
Method number 857 : private void checkChainIntegrity() : 2
Method number 858 : public int compare(final E o1, final E o2) throws UnsupportedOperationException : 6
Method number 859 : public int hashCode() : 3
Method number 860 : public boolean equals(final Object object) : 4

========================================
Fichier : comparators\FixedOrderComparator.java
========================================

Classe : org.apache.commons.collections4.comparators.FixedOrderComparator
Method number 861 : public boolean isLocked() : 1
Method number 862 : protected void checkLocked() : 2
Method number 863 : public UnknownObjectBehavior getUnknownObjectBehavior() : 1
Method number 864 : public void setUnknownObjectBehavior(final UnknownObjectBehavior unknownObjectBehavior) : 1
Method number 865 : public boolean add(final T obj) : 1
Method number 866 : public boolean addAsEqual(final T existingObj, final T newObj) : 2
Method number 867 : public int compare(final T obj1, final T obj2) : 2
Method number 868 : public int hashCode() : 1
Method number 869 : public boolean equals(final Object object) : 4

========================================
Fichier : comparators\NullComparator.java
========================================

Classe : org.apache.commons.collections4.comparators.NullComparator
Method number 870 : public int compare(final E o1, final E o2) : 4
Method number 871 : public int hashCode() : 1
Method number 872 : public boolean equals(final Object obj) : 4

========================================
Fichier : comparators\package-info.java
========================================

========================================
Fichier : comparators\ReverseComparator.java
========================================

Classe : org.apache.commons.collections4.comparators.ReverseComparator
Method number 873 : public int compare(final E obj1, final E obj2) : 1
Method number 874 : public int hashCode() : 1
Method number 875 : public boolean equals(final Object object) : 4

========================================
Fichier : comparators\TransformingComparator.java
========================================

Classe : org.apache.commons.collections4.comparators.TransformingComparator
Method number 876 : public int compare(final I obj1, final I obj2) : 1
Method number 877 : public int hashCode() : 1
Method number 878 : public boolean equals(final Object object) : 4

========================================
Fichier : ComparatorUtils.java
========================================

Classe : org.apache.commons.collections4.ComparatorUtils
Method number 879 : public static Comparator<E> naturalComparator() : 1
Method number 880 : public static Comparator<E> chainedComparator(final Comparator<E>... comparators) : 2
Method number 881 : public static Comparator<E> chainedComparator(final Collection<Comparator<E>> comparators) : 1
Method number 882 : public static Comparator<E> reversedComparator(final Comparator<E> comparator) : 1
Method number 883 : public static Comparator<Boolean> booleanComparator(final boolean trueFirst) : 1
Method number 884 : public static Comparator<E> nullLowComparator(Comparator<E> comparator) : 2
Method number 885 : public static Comparator<E> nullHighComparator(Comparator<E> comparator) : 2
Method number 886 : public static Comparator<I> transformedComparator(Comparator<O> comparator, final Transformer<? super I, ? extends O> transformer) : 2
Method number 887 : public static E min(final E o1, final E o2, Comparator<E> comparator) : 2
Method number 888 : public static E max(final E o1, final E o2, Comparator<E> comparator) : 2

========================================
Fichier : EnumerationUtils.java
========================================

Classe : org.apache.commons.collections4.EnumerationUtils
Method number 889 : public static Iterable<T> asIterable(final Enumeration<T> enumeration) : 1
Method number 890 : public static T get(final Enumeration<T> e, final int index) : 3
Method number 891 : public static List<E> toList(final Enumeration<? extends E> enumeration) : 1
Method number 892 : public static List<String> toList(final StringTokenizer stringTokenizer) : 2

========================================
Fichier : Equator.java
========================================

Classe : org.apache.commons.collections4.Equator
Method number 893 :  boolean equate(T o1, T o2) : 1
Method number 894 :  int hash(T o) : 1

========================================
Fichier : Factory.java
========================================

Classe : org.apache.commons.collections4.Factory
Method number 895 :  T create() : 1

========================================
Fichier : FactoryUtils.java
========================================

Classe : org.apache.commons.collections4.FactoryUtils
Method number 896 : public static Factory<T> exceptionFactory() : 1
Method number 897 : public static Factory<T> nullFactory() : 1
Method number 898 : public static Factory<T> constantFactory(final T constantToReturn) : 1
Method number 899 : public static Factory<T> prototypeFactory(final T prototype) : 1
Method number 900 : public static Factory<T> instantiateFactory(final Class<T> classToInstantiate) : 1
Method number 901 : public static Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args) : 1

========================================
Fichier : FluentIterable.java
========================================

Classe : org.apache.commons.collections4.FluentIterable
Method number 902 : public static FluentIterable<T> empty() : 1
Method number 903 : public static FluentIterable<T> of(final T singleton) : 1
Method number 904 : public static FluentIterable<T> of(final T... elements) : 1
Method number 905 : public static FluentIterable<T> of(final Iterable<T> iterable) : 2
Method number 906 : public FluentIterable<E> append(final E... elements) : 1
Method number 907 : public FluentIterable<E> append(final Iterable<? extends E> other) : 1
Method number 908 : public FluentIterable<E> collate(final Iterable<? extends E> other) : 1
Method number 909 : public FluentIterable<E> collate(final Iterable<? extends E> other, final Comparator<? super E> comparator) : 1
Method number 910 : public FluentIterable<E> eval() : 1
Method number 911 : public FluentIterable<E> filter(final Predicate<? super E> predicate) : 1
Method number 912 : public FluentIterable<E> limit(final long maxSize) : 1
Method number 913 : public FluentIterable<E> loop() : 1
Method number 914 : public FluentIterable<E> reverse() : 1
Method number 915 : public FluentIterable<E> skip(final long elementsToSkip) : 1
Method number 916 : public FluentIterable<O> transform(final Transformer<? super E, ? extends O> transformer) : 1
Method number 917 : public FluentIterable<E> unique() : 1
Method number 918 : public FluentIterable<E> unmodifiable() : 1
Method number 919 : public FluentIterable<E> zip(final Iterable<? extends E> other) : 1
Method number 920 : public FluentIterable<E> zip(final Iterable<? extends E>... others) : 1
Method number 921 : public Iterator<E> iterator() : 1
Method number 922 : public Enumeration<E> asEnumeration() : 1
Method number 923 : public boolean allMatch(final Predicate<? super E> predicate) : 1
Method number 924 : public boolean anyMatch(final Predicate<? super E> predicate) : 1
Method number 925 : public boolean isEmpty() : 1
Method number 926 : public boolean contains(final Object object) : 1
Method number 927 : public void forEach(final Closure<? super E> closure) : 1
Method number 928 : public E get(final int position) : 1
Method number 929 : public int size() : 1
Method number 930 : public void copyInto(final Collection<? super E> collection) : 1
Method number 931 : public E[] toArray(final Class<E> arrayClass) : 1
Method number 932 : public List<E> toList() : 1
Method number 933 : public String toString() : 1

========================================
Fichier : FunctorException.java
========================================

Classe : org.apache.commons.collections4.FunctorException

========================================
Fichier : functors\AbstractQuantifierPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.AbstractQuantifierPredicate
Method number 934 : public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\AllPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.AllPredicate
Method number 935 : public static Predicate<T> allPredicate(final Predicate<? super T>... predicates) : 3
Method number 936 : public static Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates) : 3
Method number 937 : public boolean evaluate(final T object) : 3

========================================
Fichier : functors\AndPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.AndPredicate
Method number 938 : public static Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2) : 1
Method number 939 : public boolean evaluate(final T object) : 1
Method number 940 : public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\AnyPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.AnyPredicate
Method number 941 : public static Predicate<T> anyPredicate(final Predicate<? super T>... predicates) : 3
Method number 942 : public static Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates) : 3
Method number 943 : public boolean evaluate(final T object) : 3

========================================
Fichier : functors\CatchAndRethrowClosure.java
========================================

Classe : org.apache.commons.collections4.functors.CatchAndRethrowClosure
Method number 944 : public void execute(final E input) : 1
Method number 945 : protected abstract void executeAndThrow(E input) throws Throwable : 1

========================================
Fichier : functors\ChainedClosure.java
========================================

Classe : org.apache.commons.collections4.functors.ChainedClosure
Method number 946 : public static Closure<E> chainedClosure(final Closure<? super E>... closures) : 2
Method number 947 : public static Closure<E> chainedClosure(final Collection<? extends Closure<? super E>> closures) : 3
Method number 948 : public void execute(final E input) : 2
Method number 949 : public Closure<? super E>[] getClosures() : 1

========================================
Fichier : functors\ChainedTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.ChainedTransformer
Method number 950 : public static Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers) : 2
Method number 951 : public static Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers) : 2
Method number 952 : public T transform(T object) : 2
Method number 953 : public Transformer<? super T, ? extends T>[] getTransformers() : 1

========================================
Fichier : functors\CloneTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.CloneTransformer
Method number 954 : public static Transformer<T, T> cloneTransformer() : 1
Method number 955 : public T transform(final T input) : 2

========================================
Fichier : functors\ClosureTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.ClosureTransformer
Method number 956 : public static Transformer<T, T> closureTransformer(final Closure<? super T> closure) : 1
Method number 957 : public T transform(final T input) : 1
Method number 958 : public Closure<? super T> getClosure() : 1

========================================
Fichier : functors\ComparatorPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.ComparatorPredicate
Method number 959 : public static Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator) : 1
Method number 960 : public static Predicate<T> comparatorPredicate(final T object, final Comparator<T> comparator, final Criterion criterion) : 1
Method number 961 : public boolean evaluate(final T target) : 1

========================================
Fichier : functors\ConstantFactory.java
========================================

Classe : org.apache.commons.collections4.functors.ConstantFactory
Method number 962 : public static Factory<T> constantFactory(final T constantToReturn) : 2
Method number 963 : public T create() : 1
Method number 964 : public T getConstant() : 1

========================================
Fichier : functors\ConstantTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.ConstantTransformer
Method number 965 : public static Transformer<I, O> nullTransformer() : 1
Method number 966 : public static Transformer<I, O> constantTransformer(final O constantToReturn) : 2
Method number 967 : public O transform(final I input) : 1
Method number 968 : public O getConstant() : 1
Method number 969 : public boolean equals(final Object obj) : 3
Method number 970 : public int hashCode() : 2

========================================
Fichier : functors\DefaultEquator.java
========================================

Classe : org.apache.commons.collections4.functors.DefaultEquator
Method number 971 : public static DefaultEquator<T> defaultEquator() : 1
Method number 972 : public boolean equate(final T o1, final T o2) : 1
Method number 973 : public int hash(final T o) : 1
Method number 974 : private Object readResolve() : 1

========================================
Fichier : functors\EqualPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.EqualPredicate
Method number 975 : public static Predicate<T> equalPredicate(final T object) : 2
Method number 976 : public static Predicate<T> equalPredicate(final T object, final Equator<T> equator) : 2
Method number 977 : public boolean evaluate(final T object) : 2
Method number 978 : public Object getValue() : 1

========================================
Fichier : functors\ExceptionClosure.java
========================================

Classe : org.apache.commons.collections4.functors.ExceptionClosure
Method number 979 : public static Closure<E> exceptionClosure() : 1
Method number 980 : public void execute(final E input) : 1
Method number 981 : private Object readResolve() : 1

========================================
Fichier : functors\ExceptionFactory.java
========================================

Classe : org.apache.commons.collections4.functors.ExceptionFactory
Method number 982 : public static Factory<T> exceptionFactory() : 1
Method number 983 : public T create() : 1
Method number 984 : private Object readResolve() : 1

========================================
Fichier : functors\ExceptionPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.ExceptionPredicate
Method number 985 : public static Predicate<T> exceptionPredicate() : 1
Method number 986 : public boolean evaluate(final T object) : 1
Method number 987 : private Object readResolve() : 1

========================================
Fichier : functors\ExceptionTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.ExceptionTransformer
Method number 988 : public static Transformer<I, O> exceptionTransformer() : 1
Method number 989 : public O transform(final I input) : 1
Method number 990 : private Object readResolve() : 1

========================================
Fichier : functors\FactoryTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.FactoryTransformer
Method number 991 : public static Transformer<I, O> factoryTransformer(final Factory<? extends O> factory) : 1
Method number 992 : public O transform(final I input) : 1
Method number 993 : public Factory<? extends O> getFactory() : 1

========================================
Fichier : functors\FalsePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.FalsePredicate
Method number 994 : public static Predicate<T> falsePredicate() : 1
Method number 995 : public boolean evaluate(final T object) : 1
Method number 996 : private Object readResolve() : 1

========================================
Fichier : functors\ForClosure.java
========================================

Classe : org.apache.commons.collections4.functors.ForClosure
Method number 997 : public static Closure<E> forClosure(final int count, final Closure<? super E> closure) : 3
Method number 998 : public void execute(final E input) : 2
Method number 999 : public Closure<? super E> getClosure() : 1
Method number 1000 : public int getCount() : 1

========================================
Fichier : functors\FunctorUtils.java
========================================

Classe : org.apache.commons.collections4.functors.FunctorUtils
Method number 1001 :  static Predicate<T>[] copy(final Predicate<? super T>... predicates) : 2
Method number 1002 :  static Predicate<T> coerce(final Predicate<? super T> predicate) : 1
Method number 1003 :  static void validate(final Predicate<?>... predicates) : 3
Method number 1004 :  static Predicate<? super T>[] validate(final Collection<? extends Predicate<? super T>> predicates) : 3
Method number 1005 :  static Closure<E>[] copy(final Closure<? super E>... closures) : 2
Method number 1006 :  static void validate(final Closure<?>... closures) : 3
Method number 1007 :  static Closure<T> coerce(final Closure<? super T> closure) : 1
Method number 1008 :  static Transformer<I, O>[] copy(final Transformer<? super I, ? extends O>... transformers) : 2
Method number 1009 :  static void validate(final Transformer<?, ?>... transformers) : 3
Method number 1010 :  static Transformer<I, O> coerce(final Transformer<? super I, ? extends O> transformer) : 1

========================================
Fichier : functors\IdentityPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.IdentityPredicate
Method number 1011 : public static Predicate<T> identityPredicate(final T object) : 2
Method number 1012 : public boolean evaluate(final T object) : 1
Method number 1013 : public T getValue() : 1

========================================
Fichier : functors\IfClosure.java
========================================

Classe : org.apache.commons.collections4.functors.IfClosure
Method number 1014 : public static Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure) : 1
Method number 1015 : public static Closure<E> ifClosure(final Predicate<? super E> predicate, final Closure<? super E> trueClosure, final Closure<? super E> falseClosure) : 1
Method number 1016 : public void execute(final E input) : 2
Method number 1017 : public Predicate<? super E> getPredicate() : 1
Method number 1018 : public Closure<? super E> getTrueClosure() : 1
Method number 1019 : public Closure<? super E> getFalseClosure() : 1

========================================
Fichier : functors\IfTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.IfTransformer
Method number 1020 : public static Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer) : 1
Method number 1021 : public static Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer) : 1
Method number 1022 : public O transform(final I input) : 2
Method number 1023 : public Predicate<? super I> getPredicate() : 1
Method number 1024 : public Transformer<? super I, ? extends O> getTrueTransformer() : 1
Method number 1025 : public Transformer<? super I, ? extends O> getFalseTransformer() : 1

========================================
Fichier : functors\InstanceofPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.InstanceofPredicate
Method number 1026 : public static Predicate<Object> instanceOfPredicate(final Class<?> type) : 1
Method number 1027 : public boolean evaluate(final Object object) : 1
Method number 1028 : public Class<?> getType() : 1

========================================
Fichier : functors\InstantiateFactory.java
========================================

Classe : org.apache.commons.collections4.functors.InstantiateFactory
Method number 1029 : public static Factory<T> instantiateFactory(final Class<T> classToInstantiate, final Class<?>[] paramTypes, final Object[] args) : 3
Method number 1030 : private void findConstructor() : 1
Method number 1031 : public T create() : 2

========================================
Fichier : functors\InstantiateTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.InstantiateTransformer
Method number 1032 : public static Transformer<Class<? extends T>, T> instantiateTransformer() : 1
Method number 1033 : public static Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args) : 3
Method number 1034 : public T transform(final Class<? extends T> input) : 1

========================================
Fichier : functors\InvokerTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.InvokerTransformer
Method number 1035 : public static Transformer<I, O> invokerTransformer(final String methodName) : 1
Method number 1036 : public static Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args) : 3
Method number 1037 : public O transform(final Object input) : 2

========================================
Fichier : functors\MapTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.MapTransformer
Method number 1038 : public static Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map) : 2
Method number 1039 : public O transform(final I input) : 1
Method number 1040 : public Map<? super I, ? extends O> getMap() : 1

========================================
Fichier : functors\NonePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NonePredicate
Method number 1041 : public static Predicate<T> nonePredicate(final Predicate<? super T>... predicates) : 2
Method number 1042 : public static Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates) : 2
Method number 1043 : public boolean evaluate(final T object) : 3

========================================
Fichier : functors\NOPClosure.java
========================================

Classe : org.apache.commons.collections4.functors.NOPClosure
Method number 1044 : public static Closure<E> nopClosure() : 1
Method number 1045 : public void execute(final E input) : 1
Method number 1046 : private Object readResolve() : 1

========================================
Fichier : functors\NOPTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.NOPTransformer
Method number 1047 : public static Transformer<T, T> nopTransformer() : 1
Method number 1048 : public T transform(final T input) : 1
Method number 1049 : private Object readResolve() : 1

========================================
Fichier : functors\NotNullPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NotNullPredicate
Method number 1050 : public static Predicate<T> notNullPredicate() : 1
Method number 1051 : public boolean evaluate(final T object) : 1
Method number 1052 : private Object readResolve() : 1

========================================
Fichier : functors\NotPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NotPredicate
Method number 1053 : public static Predicate<T> notPredicate(final Predicate<? super T> predicate) : 1
Method number 1054 : public boolean evaluate(final T object) : 1
Method number 1055 : public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\NullIsExceptionPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NullIsExceptionPredicate
Method number 1056 : public static Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate) : 1
Method number 1057 : public boolean evaluate(final T object) : 2
Method number 1058 : public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\NullIsFalsePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NullIsFalsePredicate
Method number 1059 : public static Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate) : 1
Method number 1060 : public boolean evaluate(final T object) : 2
Method number 1061 : public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\NullIsTruePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NullIsTruePredicate
Method number 1062 : public static Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate) : 1
Method number 1063 : public boolean evaluate(final T object) : 2
Method number 1064 : public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\NullPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.NullPredicate
Method number 1065 : public static Predicate<T> nullPredicate() : 1
Method number 1066 : public boolean evaluate(final T object) : 1
Method number 1067 : private Object readResolve() : 1

========================================
Fichier : functors\OnePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.OnePredicate
Method number 1068 : public static Predicate<T> onePredicate(final Predicate<? super T>... predicates) : 3
Method number 1069 : public static Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates) : 1
Method number 1070 : public boolean evaluate(final T object) : 4

========================================
Fichier : functors\OrPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.OrPredicate
Method number 1071 : public static Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2) : 1
Method number 1072 : public boolean evaluate(final T object) : 1
Method number 1073 : public Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\package-info.java
========================================

========================================
Fichier : functors\PredicateDecorator.java
========================================

Classe : org.apache.commons.collections4.functors.PredicateDecorator
Method number 1074 :  Predicate<? super T>[] getPredicates() : 1

========================================
Fichier : functors\PredicateTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.PredicateTransformer
Method number 1075 : public static Transformer<T, Boolean> predicateTransformer(final Predicate<? super T> predicate) : 2
Method number 1076 : public Boolean transform(final T input) : 1
Method number 1077 : public Predicate<? super T> getPredicate() : 1

========================================
Fichier : functors\PrototypeFactory.java
========================================

Classe : org.apache.commons.collections4.functors.PrototypeFactory
Method number 1078 : public static Factory<T> prototypeFactory(final T prototype) : 2

Classe : org.apache.commons.collections4.functors.PrototypeFactory.PrototypeCloneFactory
Method number 1079 : private void findCloneMethod() : 1
Method number 1080 : public T create() : 2

Classe : org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory
Method number 1081 : public T create() : 1

========================================
Fichier : functors\StringValueTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.StringValueTransformer
Method number 1082 : public static Transformer<T, String> stringValueTransformer() : 1
Method number 1083 : public String transform(final T input) : 1
Method number 1084 : private Object readResolve() : 1

========================================
Fichier : functors\SwitchClosure.java
========================================

Classe : org.apache.commons.collections4.functors.SwitchClosure
Method number 1085 : public static Closure<E> switchClosure(final Predicate<? super E>[] predicates, final Closure<? super E>[] closures, final Closure<? super E> defaultClosure) : 3
Method number 1086 : public static Closure<E> switchClosure(final Map<Predicate<E>, Closure<E>> predicatesAndClosures) : 3
Method number 1087 : public void execute(final E input) : 3
Method number 1088 : public Predicate<? super E>[] getPredicates() : 1
Method number 1089 : public Closure<? super E>[] getClosures() : 1
Method number 1090 : public Closure<? super E> getDefaultClosure() : 1

========================================
Fichier : functors\SwitchTransformer.java
========================================

Classe : org.apache.commons.collections4.functors.SwitchTransformer
Method number 1091 : public static Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer) : 3
Method number 1092 : public static Transformer<I, O> switchTransformer(final Map<? extends Predicate<? super I>, ? extends Transformer<? super I, ? extends O>> map) : 4
Method number 1093 : public O transform(final I input) : 3
Method number 1094 : public Predicate<? super I>[] getPredicates() : 1
Method number 1095 : public Transformer<? super I, ? extends O>[] getTransformers() : 1
Method number 1096 : public Transformer<? super I, ? extends O> getDefaultTransformer() : 1

========================================
Fichier : functors\TransformedPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.TransformedPredicate
Method number 1097 : public static Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate) : 1
Method number 1098 : public boolean evaluate(final T object) : 1
Method number 1099 : public Predicate<? super T>[] getPredicates() : 1
Method number 1100 : public Transformer<? super T, ? extends T> getTransformer() : 1

========================================
Fichier : functors\TransformerClosure.java
========================================

Classe : org.apache.commons.collections4.functors.TransformerClosure
Method number 1101 : public static Closure<E> transformerClosure(final Transformer<? super E, ?> transformer) : 2
Method number 1102 : public void execute(final E input) : 1
Method number 1103 : public Transformer<? super E, ?> getTransformer() : 1

========================================
Fichier : functors\TransformerPredicate.java
========================================

Classe : org.apache.commons.collections4.functors.TransformerPredicate
Method number 1104 : public static Predicate<T> transformerPredicate(final Transformer<? super T, Boolean> transformer) : 1
Method number 1105 : public boolean evaluate(final T object) : 2
Method number 1106 : public Transformer<? super T, Boolean> getTransformer() : 1

========================================
Fichier : functors\TruePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.TruePredicate
Method number 1107 : public static Predicate<T> truePredicate() : 1
Method number 1108 : public boolean evaluate(final T object) : 1
Method number 1109 : private Object readResolve() : 1

========================================
Fichier : functors\UniquePredicate.java
========================================

Classe : org.apache.commons.collections4.functors.UniquePredicate
Method number 1110 : public static Predicate<T> uniquePredicate() : 1
Method number 1111 : public boolean evaluate(final T object) : 1

========================================
Fichier : functors\WhileClosure.java
========================================

Classe : org.apache.commons.collections4.functors.WhileClosure
Method number 1112 : public static Closure<E> whileClosure(final Predicate<? super E> predicate, final Closure<? super E> closure, final boolean doLoop) : 1
Method number 1113 : public void execute(final E input) : 3
Method number 1114 : public Predicate<? super E> getPredicate() : 1
Method number 1115 : public Closure<? super E> getClosure() : 1
Method number 1116 : public boolean isDoLoop() : 1

========================================
Fichier : Get.java
========================================

Classe : org.apache.commons.collections4.Get
Method number 1117 :  boolean containsKey(Object key) : 1
Method number 1118 :  boolean containsValue(Object value) : 1
Method number 1119 :  Set<java.util.Map.Entry<K, V>> entrySet() : 1
Method number 1120 :  V get(Object key) : 1
Method number 1121 :  V remove(Object key) : 1
Method number 1122 :  boolean isEmpty() : 1
Method number 1123 :  Set<K> keySet() : 1
Method number 1124 :  int size() : 1
Method number 1125 :  Collection<V> values() : 1

========================================
Fichier : IterableGet.java
========================================

Classe : org.apache.commons.collections4.IterableGet
Method number 1126 :  MapIterator<K, V> mapIterator() : 1

========================================
Fichier : IterableMap.java
========================================

Classe : org.apache.commons.collections4.IterableMap

========================================
Fichier : IterableSortedMap.java
========================================

Classe : org.apache.commons.collections4.IterableSortedMap

========================================
Fichier : IterableUtils.java
========================================

Classe : org.apache.commons.collections4.IterableUtils
Method number 1127 : public static Iterable<E> emptyIterable() : 1
Method number 1128 : public static Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b) : 1
Method number 1129 : public static Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c) : 1
Method number 1130 : public static Iterable<E> chainedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b, final Iterable<? extends E> c, final Iterable<? extends E> d) : 1
Method number 1131 : public static Iterable<E> chainedIterable(final Iterable<? extends E>... iterables) : 1
Method number 1132 : public static Iterable<E> collatedIterable(final Iterable<? extends E> a, final Iterable<? extends E> b) : 1
Method number 1133 : public static Iterable<E> collatedIterable(final Comparator<? super E> comparator, final Iterable<? extends E> a, final Iterable<? extends E> b) : 1
Method number 1134 : public static Iterable<E> filteredIterable(final Iterable<E> iterable, final Predicate<? super E> predicate) : 1
Method number 1135 : public static Iterable<E> boundedIterable(final Iterable<E> iterable, final long maxSize) : 2
Method number 1136 : public static Iterable<E> loopingIterable(final Iterable<E> iterable) : 1
Method number 1137 : public static Iterable<E> reversedIterable(final Iterable<E> iterable) : 1
Method number 1138 : public static Iterable<E> skippingIterable(final Iterable<E> iterable, final long elementsToSkip) : 2
Method number 1139 : public static Iterable<O> transformedIterable(final Iterable<I> iterable, final Transformer<? super I, ? extends O> transformer) : 1
Method number 1140 : public static Iterable<E> uniqueIterable(final Iterable<E> iterable) : 1
Method number 1141 : public static Iterable<E> unmodifiableIterable(final Iterable<E> iterable) : 2
Method number 1142 : public static Iterable<E> zippingIterable(final Iterable<? extends E> a, final Iterable<? extends E> b) : 1
Method number 1143 : public static Iterable<E> zippingIterable(final Iterable<? extends E> first, final Iterable<? extends E>... others) : 1
Method number 1144 : public static Iterable<E> emptyIfNull(final Iterable<E> iterable) : 1
Method number 1145 : public static void forEach(final Iterable<E> iterable, final Closure<? super E> closure) : 1
Method number 1146 : public static E forEachButLast(final Iterable<E> iterable, final Closure<? super E> closure) : 1
Method number 1147 : public static E find(final Iterable<E> iterable, final Predicate<? super E> predicate) : 1
Method number 1148 : public static int indexOf(final Iterable<E> iterable, final Predicate<? super E> predicate) : 1
Method number 1149 : public static boolean matchesAll(final Iterable<E> iterable, final Predicate<? super E> predicate) : 1
Method number 1150 : public static boolean matchesAny(final Iterable<E> iterable, final Predicate<? super E> predicate) : 1
Method number 1151 : public static long countMatches(final Iterable<E> input, final Predicate<? super E> predicate) : 1
Method number 1152 : public static boolean isEmpty(final Iterable<?> iterable) : 2
Method number 1153 : public static boolean contains(final Iterable<E> iterable, final Object object) : 2
Method number 1154 : public static boolean contains(final Iterable<? extends E> iterable, final E object, final Equator<? super E> equator) : 1
Method number 1155 : public static int frequency(final Iterable<E> iterable, final T obj) : 3
Method number 1156 : public static T get(final Iterable<T> iterable, final int index) : 2
Method number 1157 : public static T first(final Iterable<T> iterable) : 1
Method number 1158 : public static int size(final Iterable<?> iterable) : 3
Method number 1159 : public static List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O> predicate) : 1
Method number 1160 : public static List<List<O>> partition(final Iterable<? extends O> iterable, final Predicate<? super O>... predicates) : 1
Method number 1161 : public static List<R> partition(final Iterable<? extends O> iterable, final Factory<R> partitionFactory, final Predicate<? super O>... predicates) : 9
Method number 1162 : public static List<E> toList(final Iterable<E> iterable) : 1
Method number 1163 : public static String toString(final Iterable<E> iterable) : 1
Method number 1164 : public static String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer) : 1
Method number 1165 : public static String toString(final Iterable<E> iterable, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix) : 1
Method number 1166 :  static void checkNotNull(final Iterable<?> iterable) : 1
Method number 1167 :  static void checkNotNull(final Iterable<?>... iterables) : 2
Method number 1168 : private static Iterator<E> emptyIteratorIfNull(final Iterable<E> iterable) : 1

Classe : org.apache.commons.collections4.IterableUtils.UnmodifiableIterable
Method number 1169 : public Iterator<E> iterator() : 1

========================================
Fichier : iterators\AbstractEmptyIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractEmptyIterator
Method number 1170 : public boolean hasNext() : 1
Method number 1171 : public E next() : 1
Method number 1172 : public boolean hasPrevious() : 1
Method number 1173 : public E previous() : 1
Method number 1174 : public int nextIndex() : 1
Method number 1175 : public int previousIndex() : 1
Method number 1176 : public void add(final E obj) : 1
Method number 1177 : public void set(final E obj) : 1
Method number 1178 : public void remove() : 1
Method number 1179 : public void reset() : 1

========================================
Fichier : iterators\AbstractEmptyMapIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractEmptyMapIterator
Method number 1180 : public K getKey() : 1
Method number 1181 : public V getValue() : 1
Method number 1182 : public V setValue(final V value) : 1

========================================
Fichier : iterators\AbstractIteratorDecorator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractIteratorDecorator
Method number 1183 : public E next() : 1

========================================
Fichier : iterators\AbstractListIteratorDecorator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractListIteratorDecorator
Method number 1184 : protected ListIterator<E> getListIterator() : 1
Method number 1185 : public boolean hasNext() : 1
Method number 1186 : public E next() : 1
Method number 1187 : public int nextIndex() : 1
Method number 1188 : public boolean hasPrevious() : 1
Method number 1189 : public E previous() : 1
Method number 1190 : public int previousIndex() : 1
Method number 1191 : public void remove() : 1
Method number 1192 : public void set(final E obj) : 1
Method number 1193 : public void add(final E obj) : 1

========================================
Fichier : iterators\AbstractMapIteratorDecorator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator
Method number 1194 : protected MapIterator<K, V> getMapIterator() : 1
Method number 1195 : public boolean hasNext() : 1
Method number 1196 : public K next() : 1
Method number 1197 : public void remove() : 1
Method number 1198 : public K getKey() : 1
Method number 1199 : public V getValue() : 1
Method number 1200 : public V setValue(final V obj) : 1

========================================
Fichier : iterators\AbstractOrderedMapIteratorDecorator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator
Method number 1201 : protected OrderedMapIterator<K, V> getOrderedMapIterator() : 1
Method number 1202 : public boolean hasNext() : 1
Method number 1203 : public K next() : 1
Method number 1204 : public boolean hasPrevious() : 1
Method number 1205 : public K previous() : 1
Method number 1206 : public void remove() : 1
Method number 1207 : public K getKey() : 1
Method number 1208 : public V getValue() : 1
Method number 1209 : public V setValue(final V obj) : 1

========================================
Fichier : iterators\AbstractUntypedIteratorDecorator.java
========================================

Classe : org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator
Method number 1210 : protected Iterator<I> getIterator() : 1
Method number 1211 : public boolean hasNext() : 1
Method number 1212 : public void remove() : 1

========================================
Fichier : iterators\ArrayIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ArrayIterator
Method number 1213 : protected void checkBound(final int bound, final int len, final String type) : 3
Method number 1214 : public boolean hasNext() : 1
Method number 1215 : public E next() : 2
Method number 1216 : public void remove() : 1
Method number 1217 : public Object getArray() : 1
Method number 1218 : public int getStartIndex() : 1
Method number 1219 : public int getEndIndex() : 1
Method number 1220 : public void reset() : 1

========================================
Fichier : iterators\ArrayListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ArrayListIterator
Method number 1221 : public boolean hasPrevious() : 1
Method number 1222 : public E previous() : 2
Method number 1223 : public E next() : 2
Method number 1224 : public int nextIndex() : 1
Method number 1225 : public int previousIndex() : 1
Method number 1226 : public void add(final Object o) : 1
Method number 1227 : public void set(final Object o) : 2
Method number 1228 : public void reset() : 1

========================================
Fichier : iterators\BoundedIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.BoundedIterator
Method number 1229 : private void init() : 2
Method number 1230 : public boolean hasNext() : 2
Method number 1231 : private boolean checkBounds() : 2
Method number 1232 : public E next() : 2
Method number 1233 : public void remove() : 2

========================================
Fichier : iterators\CollatingIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.CollatingIterator
Method number 1234 : public void addIterator(final Iterator<? extends E> iterator) : 1
Method number 1235 : public void setIterator(final int index, final Iterator<? extends E> iterator) : 1
Method number 1236 : public List<Iterator<? extends E>> getIterators() : 1
Method number 1237 : public Comparator<? super E> getComparator() : 1
Method number 1238 : public void setComparator(final Comparator<? super E> comp) : 1
Method number 1239 : public boolean hasNext() : 1
Method number 1240 : public E next() throws NoSuchElementException : 3
Method number 1241 : public void remove() : 2
Method number 1242 : public int getIteratorIndex() : 2
Method number 1243 : private void start() : 3
Method number 1244 : private boolean set(final int i) : 2
Method number 1245 : private void clear(final int i) : 1
Method number 1246 : private void checkNotStarted() throws IllegalStateException : 2
Method number 1247 : private int least() : 6
Method number 1248 : private boolean anyValueSet(final BitSet set) : 3
Method number 1249 : private boolean anyHasNext(final List<Iterator<? extends E>> iterators) : 3

========================================
Fichier : iterators\EmptyIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EmptyIterator
Method number 1250 : public static ResettableIterator<E> resettableEmptyIterator() : 1
Method number 1251 : public static Iterator<E> emptyIterator() : 1

========================================
Fichier : iterators\EmptyListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EmptyListIterator
Method number 1252 : public static ResettableListIterator<E> resettableEmptyListIterator() : 1
Method number 1253 : public static ListIterator<E> emptyListIterator() : 1

========================================
Fichier : iterators\EmptyMapIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EmptyMapIterator
Method number 1254 : public static MapIterator<K, V> emptyMapIterator() : 1

========================================
Fichier : iterators\EmptyOrderedIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EmptyOrderedIterator
Method number 1255 : public static OrderedIterator<E> emptyOrderedIterator() : 1

========================================
Fichier : iterators\EmptyOrderedMapIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EmptyOrderedMapIterator
Method number 1256 : public static OrderedMapIterator<K, V> emptyOrderedMapIterator() : 1

========================================
Fichier : iterators\EntrySetMapIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EntrySetMapIterator
Method number 1257 : public boolean hasNext() : 1
Method number 1258 : public K next() : 1
Method number 1259 : public void remove() : 2
Method number 1260 : public K getKey() : 2
Method number 1261 : public V getValue() : 2
Method number 1262 : public V setValue(final V value) : 2
Method number 1263 : public void reset() : 1
Method number 1264 : public String toString() : 2

========================================
Fichier : iterators\EnumerationIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.EnumerationIterator
Method number 1265 : public boolean hasNext() : 1
Method number 1266 : public E next() : 1
Method number 1267 : public void remove() : 3
Method number 1268 : public Enumeration<? extends E> getEnumeration() : 1
Method number 1269 : public void setEnumeration(final Enumeration<? extends E> enumeration) : 1

========================================
Fichier : iterators\FilterIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.FilterIterator
Method number 1270 : public boolean hasNext() : 1
Method number 1271 : public E next() : 2
Method number 1272 : public void remove() : 2
Method number 1273 : public Iterator<? extends E> getIterator() : 1
Method number 1274 : public void setIterator(final Iterator<? extends E> iterator) : 1
Method number 1275 : public Predicate<? super E> getPredicate() : 1
Method number 1276 : public void setPredicate(final Predicate<? super E> predicate) : 1
Method number 1277 : private boolean setNextObject() : 3

========================================
Fichier : iterators\FilterListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.FilterListIterator
Method number 1278 : public void add(final E o) : 1
Method number 1279 : public boolean hasNext() : 1
Method number 1280 : public boolean hasPrevious() : 1
Method number 1281 : public E next() : 2
Method number 1282 : public int nextIndex() : 1
Method number 1283 : public E previous() : 2
Method number 1284 : public int previousIndex() : 1
Method number 1285 : public void remove() : 1
Method number 1286 : public void set(final E o) : 1
Method number 1287 : public ListIterator<? extends E> getListIterator() : 1
Method number 1288 : public void setListIterator(final ListIterator<? extends E> iterator) : 1
Method number 1289 : public Predicate<? super E> getPredicate() : 1
Method number 1290 : public void setPredicate(final Predicate<? super E> predicate) : 1
Method number 1291 : private void clearNextObject() : 1
Method number 1292 : private boolean setNextObject() : 6
Method number 1293 : private void clearPreviousObject() : 1
Method number 1294 : private boolean setPreviousObject() : 6

========================================
Fichier : iterators\IteratorChain.java
========================================

Classe : org.apache.commons.collections4.iterators.IteratorChain
Method number 1295 : public void addIterator(final Iterator<? extends E> iterator) : 1
Method number 1296 : public int size() : 1
Method number 1297 : public boolean isLocked() : 1
Method number 1298 : private void checkLocked() : 2
Method number 1299 : private void lockChain() : 2
Method number 1300 : protected void updateCurrentIterator() : 4
Method number 1301 : public boolean hasNext() : 1
Method number 1302 : public E next() : 1
Method number 1303 : public void remove() : 2

========================================
Fichier : iterators\IteratorEnumeration.java
========================================

Classe : org.apache.commons.collections4.iterators.IteratorEnumeration
Method number 1304 : public boolean hasMoreElements() : 1
Method number 1305 : public E nextElement() : 1
Method number 1306 : public Iterator<? extends E> getIterator() : 1
Method number 1307 : public void setIterator(final Iterator<? extends E> iterator) : 1

========================================
Fichier : iterators\IteratorIterable.java
========================================

Classe : org.apache.commons.collections4.iterators.IteratorIterable
Method number 1308 : private static Iterator<E> createTypesafeIterator(final Iterator<? extends E> iterator) : 1
Method number 1309 : public Iterator<E> iterator() : 2

========================================
Fichier : iterators\LazyIteratorChain.java
========================================

Classe : org.apache.commons.collections4.iterators.LazyIteratorChain
Method number 1310 : protected abstract Iterator<? extends E> nextIterator(int count) : 1
Method number 1311 : private void updateCurrentIterator() : 5
Method number 1312 : public boolean hasNext() : 1
Method number 1313 : public E next() : 1
Method number 1314 : public void remove() : 2

========================================
Fichier : iterators\ListIteratorWrapper.java
========================================

Classe : org.apache.commons.collections4.iterators.ListIteratorWrapper
Method number 1315 : public void add(final E obj) throws UnsupportedOperationException : 2
Method number 1316 : public boolean hasNext() : 2
Method number 1317 : public boolean hasPrevious() : 2
Method number 1318 : public E next() throws NoSuchElementException : 3
Method number 1319 : public int nextIndex() : 2
Method number 1320 : public E previous() throws NoSuchElementException : 3
Method number 1321 : public int previousIndex() : 2
Method number 1322 : public void remove() throws IllegalStateException : 4
Method number 1323 : public void set(final E obj) throws UnsupportedOperationException : 2
Method number 1324 : public void reset() : 3

========================================
Fichier : iterators\LoopingIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.LoopingIterator
Method number 1325 : public boolean hasNext() : 1
Method number 1326 : public E next() : 3
Method number 1327 : public void remove() : 1
Method number 1328 : public void reset() : 1
Method number 1329 : public int size() : 1

========================================
Fichier : iterators\LoopingListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.LoopingListIterator
Method number 1330 : public boolean hasNext() : 1
Method number 1331 : public E next() : 3
Method number 1332 : public int nextIndex() : 3
Method number 1333 : public boolean hasPrevious() : 1
Method number 1334 : public E previous() : 4
Method number 1335 : public int previousIndex() : 3
Method number 1336 : public void remove() : 1
Method number 1337 : public void add(final E obj) : 1
Method number 1338 : public void set(final E obj) : 1
Method number 1339 : public void reset() : 1
Method number 1340 : private void _reset() : 1
Method number 1341 : public int size() : 1

========================================
Fichier : iterators\NodeListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.NodeListIterator
Method number 1342 : public boolean hasNext() : 1
Method number 1343 : public Node next() : 2
Method number 1344 : public void remove() : 1

========================================
Fichier : iterators\ObjectArrayIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ObjectArrayIterator
Method number 1345 : public boolean hasNext() : 1
Method number 1346 : public E next() : 2
Method number 1347 : public void remove() : 1
Method number 1348 : public E[] getArray() : 1
Method number 1349 : public int getStartIndex() : 1
Method number 1350 : public int getEndIndex() : 1
Method number 1351 : public void reset() : 1

========================================
Fichier : iterators\ObjectArrayListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ObjectArrayListIterator
Method number 1352 : public boolean hasPrevious() : 1
Method number 1353 : public E previous() : 2
Method number 1354 : public E next() : 2
Method number 1355 : public int nextIndex() : 1
Method number 1356 : public int previousIndex() : 1
Method number 1357 : public void add(final E obj) : 1
Method number 1358 : public void set(final E obj) : 2
Method number 1359 : public void reset() : 1

========================================
Fichier : iterators\ObjectGraphIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ObjectGraphIterator
Method number 1360 : protected void updateCurrentIterator() : 5
Method number 1361 : protected void findNext(final E value) : 2
Method number 1362 : protected void findNextByIterator(final Iterator<? extends E> iterator) : 6
Method number 1363 : public boolean hasNext() : 1
Method number 1364 : public E next() : 2
Method number 1365 : public void remove() : 2

========================================
Fichier : iterators\package-info.java
========================================

========================================
Fichier : iterators\PeekingIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.PeekingIterator
Method number 1366 : public static PeekingIterator<E> peekingIterator(final Iterator<? extends E> iterator) : 2
Method number 1367 : private void fill() : 3
Method number 1368 : public boolean hasNext() : 2
Method number 1369 : public E peek() : 1
Method number 1370 : public E element() : 2
Method number 1371 : public E next() : 2
Method number 1372 : public void remove() : 2

========================================
Fichier : iterators\PermutationIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.PermutationIterator
Method number 1373 : public boolean hasNext() : 1
Method number 1374 : public List<E> next() : 8
Method number 1375 : public void remove() : 1

========================================
Fichier : iterators\PushbackIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.PushbackIterator
Method number 1376 : public static PushbackIterator<E> pushbackIterator(final Iterator<? extends E> iterator) : 2
Method number 1377 : public void pushback(final E item) : 1
Method number 1378 : public boolean hasNext() : 1
Method number 1379 : public E next() : 1
Method number 1380 : public void remove() : 1

========================================
Fichier : iterators\ReverseListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ReverseListIterator
Method number 1381 : public boolean hasNext() : 1
Method number 1382 : public E next() : 1
Method number 1383 : public int nextIndex() : 1
Method number 1384 : public boolean hasPrevious() : 1
Method number 1385 : public E previous() : 1
Method number 1386 : public int previousIndex() : 1
Method number 1387 : public void remove() : 2
Method number 1388 : public void set(final E obj) : 2
Method number 1389 : public void add(final E obj) : 2
Method number 1390 : public void reset() : 1

========================================
Fichier : iterators\SingletonIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.SingletonIterator
Method number 1391 : public boolean hasNext() : 1
Method number 1392 : public E next() : 2
Method number 1393 : public void remove() : 3
Method number 1394 : public void reset() : 1

========================================
Fichier : iterators\SingletonListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.SingletonListIterator
Method number 1395 : public boolean hasNext() : 1
Method number 1396 : public boolean hasPrevious() : 1
Method number 1397 : public int nextIndex() : 1
Method number 1398 : public int previousIndex() : 1
Method number 1399 : public E next() : 2
Method number 1400 : public E previous() : 2
Method number 1401 : public void remove() : 2
Method number 1402 : public void add(final E obj) : 1
Method number 1403 : public void set(final E obj) : 2
Method number 1404 : public void reset() : 1

========================================
Fichier : iterators\SkippingIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.SkippingIterator
Method number 1405 : private void init() : 2
Method number 1406 : public E next() : 1
Method number 1407 : public void remove() : 2

========================================
Fichier : iterators\TransformIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.TransformIterator
Method number 1408 : public boolean hasNext() : 1
Method number 1409 : public O next() : 1
Method number 1410 : public void remove() : 1
Method number 1411 : public Iterator<? extends I> getIterator() : 1
Method number 1412 : public void setIterator(final Iterator<? extends I> iterator) : 1
Method number 1413 : public Transformer<? super I, ? extends O> getTransformer() : 1
Method number 1414 : public void setTransformer(final Transformer<? super I, ? extends O> transformer) : 1
Method number 1415 : protected O transform(final I source) : 1

========================================
Fichier : iterators\UniqueFilterIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.UniqueFilterIterator

========================================
Fichier : iterators\UnmodifiableIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.UnmodifiableIterator
Method number 1416 : public static Iterator<E> unmodifiableIterator(final Iterator<? extends E> iterator) : 2
Method number 1417 : public boolean hasNext() : 1
Method number 1418 : public E next() : 1
Method number 1419 : public void remove() : 1

========================================
Fichier : iterators\UnmodifiableListIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.UnmodifiableListIterator
Method number 1420 : public static ListIterator<E> unmodifiableListIterator(final ListIterator<? extends E> iterator) : 2
Method number 1421 : public static ListIterator<E> umodifiableListIterator(final ListIterator<? extends E> iterator) : 1
Method number 1422 : public boolean hasNext() : 1
Method number 1423 : public E next() : 1
Method number 1424 : public int nextIndex() : 1
Method number 1425 : public boolean hasPrevious() : 1
Method number 1426 : public E previous() : 1
Method number 1427 : public int previousIndex() : 1
Method number 1428 : public void remove() : 1
Method number 1429 : public void set(final E obj) : 1
Method number 1430 : public void add(final E obj) : 1

========================================
Fichier : iterators\UnmodifiableMapIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.UnmodifiableMapIterator
Method number 1431 : public static MapIterator<K, V> unmodifiableMapIterator(final MapIterator<? extends K, ? extends V> iterator) : 2
Method number 1432 : public boolean hasNext() : 1
Method number 1433 : public K next() : 1
Method number 1434 : public K getKey() : 1
Method number 1435 : public V getValue() : 1
Method number 1436 : public V setValue(final V value) : 1
Method number 1437 : public void remove() : 1

========================================
Fichier : iterators\UnmodifiableOrderedMapIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator
Method number 1438 : public static OrderedMapIterator<K, V> unmodifiableOrderedMapIterator(final OrderedMapIterator<K, ? extends V> iterator) : 2
Method number 1439 : public boolean hasNext() : 1
Method number 1440 : public K next() : 1
Method number 1441 : public boolean hasPrevious() : 1
Method number 1442 : public K previous() : 1
Method number 1443 : public K getKey() : 1
Method number 1444 : public V getValue() : 1
Method number 1445 : public V setValue(final V value) : 1
Method number 1446 : public void remove() : 1

========================================
Fichier : iterators\ZippingIterator.java
========================================

Classe : org.apache.commons.collections4.iterators.ZippingIterator
Method number 1447 : public boolean hasNext() : 4
Method number 1448 : public E next() throws NoSuchElementException : 2
Method number 1449 : public void remove() : 2

========================================
Fichier : IteratorUtils.java
========================================

Classe : org.apache.commons.collections4.IteratorUtils
Method number 1450 : public static ResettableIterator<E> emptyIterator() : 1
Method number 1451 : public static ResettableListIterator<E> emptyListIterator() : 1
Method number 1452 : public static OrderedIterator<E> emptyOrderedIterator() : 1
Method number 1453 : public static MapIterator<K, V> emptyMapIterator() : 1
Method number 1454 : public static OrderedMapIterator<K, V> emptyOrderedMapIterator() : 1
Method number 1455 : public static ResettableIterator<E> singletonIterator(final E object) : 1
Method number 1456 : public static ListIterator<E> singletonListIterator(final E object) : 1
Method number 1457 : public static ResettableIterator<E> arrayIterator(final E... array) : 1
Method number 1458 : public static ResettableIterator<E> arrayIterator(final Object array) : 1
Method number 1459 : public static ResettableIterator<E> arrayIterator(final E[] array, final int start) : 1
Method number 1460 : public static ResettableIterator<E> arrayIterator(final Object array, final int start) : 1
Method number 1461 : public static ResettableIterator<E> arrayIterator(final E[] array, final int start, final int end) : 1
Method number 1462 : public static ResettableIterator<E> arrayIterator(final Object array, final int start, final int end) : 1
Method number 1463 : public static ResettableListIterator<E> arrayListIterator(final E... array) : 1
Method number 1464 : public static ResettableListIterator<E> arrayListIterator(final Object array) : 1
Method number 1465 : public static ResettableListIterator<E> arrayListIterator(final E[] array, final int start) : 1
Method number 1466 : public static ResettableListIterator<E> arrayListIterator(final Object array, final int start) : 1
Method number 1467 : public static ResettableListIterator<E> arrayListIterator(final E[] array, final int start, final int end) : 1
Method number 1468 : public static ResettableListIterator<E> arrayListIterator(final Object array, final int start, final int end) : 1
Method number 1469 : public static BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, final long max) : 1
Method number 1470 : public static BoundedIterator<E> boundedIterator(final Iterator<? extends E> iterator, final long offset, final long max) : 1
Method number 1471 : public static Iterator<E> unmodifiableIterator(final Iterator<E> iterator) : 1
Method number 1472 : public static ListIterator<E> unmodifiableListIterator(final ListIterator<E> listIterator) : 1
Method number 1473 : public static MapIterator<K, V> unmodifiableMapIterator(final MapIterator<K, V> mapIterator) : 1
Method number 1474 : public static Iterator<E> chainedIterator(final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2) : 1
Method number 1475 : public static Iterator<E> chainedIterator(final Iterator<? extends E>... iterators) : 1
Method number 1476 : public static Iterator<E> chainedIterator(final Collection<Iterator<? extends E>> iterators) : 1
Method number 1477 : public static Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E> iterator1, final Iterator<? extends E> iterator2) : 1
Method number 1478 : public static Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Iterator<? extends E>... iterators) : 1
Method number 1479 : public static Iterator<E> collatedIterator(final Comparator<? super E> comparator, final Collection<Iterator<? extends E>> iterators) : 1
Method number 1480 : public static Iterator<E> objectGraphIterator(final E root, final Transformer<? super E, ? extends E> transformer) : 1
Method number 1481 : public static Iterator<O> transformedIterator(final Iterator<? extends I> iterator, final Transformer<? super I, ? extends O> transformer) : 1
Method number 1482 : public static Iterator<E> filteredIterator(final Iterator<? extends E> iterator, final Predicate<? super E> predicate) : 1
Method number 1483 : public static ListIterator<E> filteredListIterator(final ListIterator<? extends E> listIterator, final Predicate<? super E> predicate) : 1
Method number 1484 : public static ResettableIterator<E> loopingIterator(final Collection<? extends E> collection) : 1
Method number 1485 : public static ResettableListIterator<E> loopingListIterator(final List<E> list) : 1
Method number 1486 : public static NodeListIterator nodeListIterator(final NodeList nodeList) : 1
Method number 1487 : public static NodeListIterator nodeListIterator(final Node node) : 1
Method number 1488 : public static Iterator<E> peekingIterator(final Iterator<? extends E> iterator) : 1
Method number 1489 : public static Iterator<E> pushbackIterator(final Iterator<? extends E> iterator) : 1
Method number 1490 : public static SkippingIterator<E> skippingIterator(final Iterator<E> iterator, final long offset) : 1
Method number 1491 : public static ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b) : 1
Method number 1492 : public static ZippingIterator<E> zippingIterator(final Iterator<? extends E> a, final Iterator<? extends E> b, final Iterator<? extends E> c) : 1
Method number 1493 : public static ZippingIterator<E> zippingIterator(final Iterator<? extends E>... iterators) : 1
Method number 1494 : public static Iterator<E> asIterator(final Enumeration<? extends E> enumeration) : 1
Method number 1495 : public static Iterator<E> asIterator(final Enumeration<? extends E> enumeration, final Collection<? super E> removeCollection) : 1
Method number 1496 : public static Enumeration<E> asEnumeration(final Iterator<? extends E> iterator) : 1
Method number 1497 : public static Iterable<E> asIterable(final Iterator<? extends E> iterator) : 1
Method number 1498 : public static Iterable<E> asMultipleUseIterable(final Iterator<? extends E> iterator) : 1
Method number 1499 : public static ListIterator<E> toListIterator(final Iterator<? extends E> iterator) : 1
Method number 1500 : public static Object[] toArray(final Iterator<?> iterator) : 1
Method number 1501 : public static E[] toArray(final Iterator<? extends E> iterator, final Class<E> arrayClass) : 1
Method number 1502 : public static List<E> toList(final Iterator<? extends E> iterator) : 1
Method number 1503 : public static List<E> toList(final Iterator<? extends E> iterator, final int estimatedSize) : 3
Method number 1504 : public static Iterator<?> getIterator(final Object obj) : 11
Method number 1505 : public static void forEach(final Iterator<E> iterator, final Closure<? super E> closure) : 3
Method number 1506 : public static E forEachButLast(final Iterator<E> iterator, final Closure<? super E> closure) : 4
Method number 1507 : public static E find(final Iterator<E> iterator, final Predicate<? super E> predicate) : 4
Method number 1508 : public static int indexOf(final Iterator<E> iterator, final Predicate<? super E> predicate) : 4
Method number 1509 : public static boolean matchesAny(final Iterator<E> iterator, final Predicate<? super E> predicate) : 1
Method number 1510 : public static boolean matchesAll(final Iterator<E> iterator, final Predicate<? super E> predicate) : 4
Method number 1511 : public static boolean isEmpty(final Iterator<?> iterator) : 1
Method number 1512 : public static boolean contains(final Iterator<E> iterator, final Object object) : 1
Method number 1513 : public static E get(final Iterator<E> iterator, final int index) : 3
Method number 1514 : public static E first(final Iterator<E> iterator) : 1
Method number 1515 : public static int size(final Iterator<?> iterator) : 3
Method number 1516 : public static String toString(final Iterator<E> iterator) : 1
Method number 1517 : public static String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer) : 1
Method number 1518 : public static String toString(final Iterator<E> iterator, final Transformer<? super E, String> transformer, final String delimiter, final String prefix, final String suffix) : 4

========================================
Fichier : keyvalue\AbstractKeyValue.java
========================================

Classe : org.apache.commons.collections4.keyvalue.AbstractKeyValue
Method number 1519 : public K getKey() : 1
Method number 1520 : protected K setKey(final K key) : 1
Method number 1521 : public V getValue() : 1
Method number 1522 : protected V setValue(final V value) : 1
Method number 1523 : public String toString() : 1

========================================
Fichier : keyvalue\AbstractMapEntry.java
========================================

Classe : org.apache.commons.collections4.keyvalue.AbstractMapEntry
Method number 1524 : public V setValue(final V value) : 1
Method number 1525 : public boolean equals(final Object obj) : 3
Method number 1526 : public int hashCode() : 1

========================================
Fichier : keyvalue\AbstractMapEntryDecorator.java
========================================

Classe : org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator
Method number 1527 : protected Map.Entry<K, V> getMapEntry() : 1
Method number 1528 : public K getKey() : 1
Method number 1529 : public V getValue() : 1
Method number 1530 : public V setValue(final V object) : 1
Method number 1531 : public boolean equals(final Object object) : 2
Method number 1532 : public int hashCode() : 1
Method number 1533 : public String toString() : 1

========================================
Fichier : keyvalue\DefaultKeyValue.java
========================================

Classe : org.apache.commons.collections4.keyvalue.DefaultKeyValue
Method number 1534 : public K setKey(final K key) : 2
Method number 1535 : public V setValue(final V value) : 2
Method number 1536 : public Map.Entry<K, V> toMapEntry() : 1
Method number 1537 : public boolean equals(final Object obj) : 3
Method number 1538 : public int hashCode() : 1

========================================
Fichier : keyvalue\DefaultMapEntry.java
========================================

Classe : org.apache.commons.collections4.keyvalue.DefaultMapEntry

========================================
Fichier : keyvalue\MultiKey.java
========================================

Classe : org.apache.commons.collections4.keyvalue.MultiKey
Method number 1539 : private static Class<? extends T> getClass(final T value) : 1
Method number 1540 : private static Class<? extends T> getComponentType(final T... values) : 4
Method number 1541 : private static T[] newArray(final T key1, final T key2) : 1
Method number 1542 : private static T[] newArray(final T key1, final T key2, final T key3) : 1
Method number 1543 : private static T[] newArray(final T key1, final T key2, final T key3, final T key4) : 1
Method number 1544 : private static T[] newArray(final T key1, final T key2, final T key3, final T key4, final T key5) : 1
Method number 1545 : private void calculateHashCode(final Object[] keys) : 3
Method number 1546 : public boolean equals(final Object other) : 3
Method number 1547 : public K getKey(final int index) : 1
Method number 1548 : public K[] getKeys() : 1
Method number 1549 : public int hashCode() : 1
Method number 1550 : protected Object readResolve() : 1
Method number 1551 : public int size() : 1
Method number 1552 : public String toString() : 1

========================================
Fichier : keyvalue\package-info.java
========================================

========================================
Fichier : keyvalue\TiedMapEntry.java
========================================

Classe : org.apache.commons.collections4.keyvalue.TiedMapEntry
Method number 1553 : public K getKey() : 1
Method number 1554 : public V getValue() : 1
Method number 1555 : public V setValue(final V value) : 2
Method number 1556 : public boolean equals(final Object obj) : 3
Method number 1557 : public int hashCode() : 1
Method number 1558 : public String toString() : 1

========================================
Fichier : keyvalue\UnmodifiableMapEntry.java
========================================

Classe : org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry
Method number 1559 : public V setValue(final V value) : 1

========================================
Fichier : KeyValue.java
========================================

Classe : org.apache.commons.collections4.KeyValue
Method number 1560 :  K getKey() : 1
Method number 1561 :  V getValue() : 1

========================================
Fichier : list\AbstractLinkedList.java
========================================

Classe : org.apache.commons.collections4.list.AbstractLinkedList
Method number 1562 : protected void init() : 1
Method number 1563 : public int size() : 1
Method number 1564 : public boolean isEmpty() : 1
Method number 1565 : public E get(final int index) : 1
Method number 1566 : public Iterator<E> iterator() : 1
Method number 1567 : public ListIterator<E> listIterator() : 1
Method number 1568 : public ListIterator<E> listIterator(final int fromIndex) : 1
Method number 1569 : public int indexOf(final Object value) : 3
Method number 1570 : public int lastIndexOf(final Object value) : 3
Method number 1571 : public boolean contains(final Object value) : 1
Method number 1572 : public boolean containsAll(final Collection<?> coll) : 3
Method number 1573 : public Object[] toArray() : 1
Method number 1574 : public T[] toArray(T[] array) : 4
Method number 1575 : public List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) : 1
Method number 1576 : public boolean add(final E value) : 1
Method number 1577 : public void add(final int index, final E value) : 1
Method number 1578 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 1579 : public boolean addAll(final int index, final Collection<? extends E> coll) : 2
Method number 1580 : public E remove(final int index) : 1
Method number 1581 : public boolean remove(final Object value) : 3
Method number 1582 : public boolean removeAll(final Collection<?> coll) : 3
Method number 1583 : public boolean retainAll(final Collection<?> coll) : 3
Method number 1584 : public E set(final int index, final E value) : 1
Method number 1585 : public void clear() : 1
Method number 1586 : public E getFirst() : 2
Method number 1587 : public E getLast() : 2
Method number 1588 : public boolean addFirst(final E o) : 1
Method number 1589 : public boolean addLast(final E o) : 1
Method number 1590 : public E removeFirst() : 2
Method number 1591 : public E removeLast() : 2
Method number 1592 : public boolean equals(final Object obj) : 6
Method number 1593 : public int hashCode() : 2
Method number 1594 : public String toString() : 4
Method number 1595 : protected boolean isEqualValue(final Object value1, final Object value2) : 1
Method number 1596 : protected void updateNode(final Node<E> node, final E value) : 1
Method number 1597 : protected Node<E> createHeaderNode() : 1
Method number 1598 : protected Node<E> createNode(final E value) : 1
Method number 1599 : protected void addNodeBefore(final Node<E> node, final E value) : 1
Method number 1600 : protected void addNodeAfter(final Node<E> node, final E value) : 1
Method number 1601 : protected void addNode(final Node<E> nodeToInsert, final Node<E> insertBeforeNode) : 1
Method number 1602 : protected void removeNode(final Node<E> node) : 1
Method number 1603 : protected void removeAllNodes() : 1
Method number 1604 : protected Node<E> getNode(final int index, final boolean endMarkerAllowed) throws IndexOutOfBoundsException : 7
Method number 1605 : protected Iterator<E> createSubListIterator(final LinkedSubList<E> subList) : 1
Method number 1606 : protected ListIterator<E> createSubListListIterator(final LinkedSubList<E> subList, final int fromIndex) : 1
Method number 1607 : protected void doWriteObject(final ObjectOutputStream outputStream) throws IOException : 2
Method number 1608 : protected void doReadObject(final ObjectInputStream inputStream) throws IOException, ClassNotFoundException : 2

Classe : org.apache.commons.collections4.list.AbstractLinkedList.Node
Method number 1609 : protected E getValue() : 1
Method number 1610 : protected void setValue(final E value) : 1
Method number 1611 : protected Node<E> getPreviousNode() : 1
Method number 1612 : protected void setPreviousNode(final Node<E> previous) : 1
Method number 1613 : protected Node<E> getNextNode() : 1
Method number 1614 : protected void setNextNode(final Node<E> next) : 1

Classe : org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator
Method number 1615 : protected void checkModCount() : 2
Method number 1616 : protected Node<E> getLastNodeReturned() throws IllegalStateException : 2
Method number 1617 : public boolean hasNext() : 1
Method number 1618 : public E next() : 2
Method number 1619 : public boolean hasPrevious() : 1
Method number 1620 : public E previous() : 2
Method number 1621 : public int nextIndex() : 1
Method number 1622 : public int previousIndex() : 1
Method number 1623 : public void remove() : 2
Method number 1624 : public void set(final E obj) : 1
Method number 1625 : public void add(final E obj) : 1

Classe : org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubListIterator
Method number 1626 : public boolean hasNext() : 1
Method number 1627 : public boolean hasPrevious() : 1
Method number 1628 : public int nextIndex() : 1
Method number 1629 : public void add(final E obj) : 1
Method number 1630 : public void remove() : 1

Classe : org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList
Method number 1631 : public int size() : 1
Method number 1632 : public E get(final int index) : 1
Method number 1633 : public void add(final int index, final E obj) : 1
Method number 1634 : public E remove(final int index) : 1
Method number 1635 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 1636 : public boolean addAll(final int index, final Collection<? extends E> coll) : 2
Method number 1637 : public E set(final int index, final E obj) : 1
Method number 1638 : public void clear() : 2
Method number 1639 : public Iterator<E> iterator() : 1
Method number 1640 : public ListIterator<E> listIterator(final int index) : 1
Method number 1641 : public List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) : 1
Method number 1642 : protected void rangeCheck(final int index, final int beyond) : 2
Method number 1643 : protected void checkModCount() : 2

========================================
Fichier : list\AbstractListDecorator.java
========================================

Classe : org.apache.commons.collections4.list.AbstractListDecorator
Method number 1644 : protected List<E> decorated() : 1
Method number 1645 : public boolean equals(final Object object) : 1
Method number 1646 : public int hashCode() : 1
Method number 1647 : public void add(final int index, final E object) : 1
Method number 1648 : public boolean addAll(final int index, final Collection<? extends E> coll) : 1
Method number 1649 : public E get(final int index) : 1
Method number 1650 : public int indexOf(final Object object) : 1
Method number 1651 : public int lastIndexOf(final Object object) : 1
Method number 1652 : public ListIterator<E> listIterator() : 1
Method number 1653 : public ListIterator<E> listIterator(final int index) : 1
Method number 1654 : public E remove(final int index) : 1
Method number 1655 : public E set(final int index, final E object) : 1
Method number 1656 : public List<E> subList(final int fromIndex, final int toIndex) : 1

========================================
Fichier : list\AbstractSerializableListDecorator.java
========================================

Classe : org.apache.commons.collections4.list.AbstractSerializableListDecorator
Method number 1657 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 1658 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : list\CursorableLinkedList.java
========================================

Classe : org.apache.commons.collections4.list.CursorableLinkedList
Method number 1659 : protected void init() : 1
Method number 1660 : public Iterator<E> iterator() : 1
Method number 1661 : public ListIterator<E> listIterator() : 1
Method number 1662 : public ListIterator<E> listIterator(final int fromIndex) : 1
Method number 1663 : public CursorableLinkedList.Cursor<E> cursor() : 1
Method number 1664 : public CursorableLinkedList.Cursor<E> cursor(final int fromIndex) : 1
Method number 1665 : protected void updateNode(final Node<E> node, final E value) : 1
Method number 1666 : protected void addNode(final Node<E> nodeToInsert, final Node<E> insertBeforeNode) : 1
Method number 1667 : protected void removeNode(final Node<E> node) : 1
Method number 1668 : protected void removeAllNodes() : 3
Method number 1669 : protected void registerCursor(final Cursor<E> cursor) : 1
Method number 1670 : protected void unregisterCursor(final Cursor<E> cursor) : 3
Method number 1671 : protected void broadcastNodeChanged(final Node<E> node) : 3
Method number 1672 : protected void broadcastNodeRemoved(final Node<E> node) : 3
Method number 1673 : protected void broadcastNodeInserted(final Node<E> node) : 3
Method number 1674 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 1675 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 1676 : protected ListIterator<E> createSubListListIterator(final LinkedSubList<E> subList, final int fromIndex) : 1

Classe : org.apache.commons.collections4.list.CursorableLinkedList.Cursor
Method number 1677 : public void remove() : 2
Method number 1678 : public void add(final E obj) : 1
Method number 1679 : public int nextIndex() : 4
Method number 1680 : protected void nodeChanged(final Node<E> node) : 1
Method number 1681 : protected void nodeRemoved(final Node<E> node) : 2
Method number 1682 : protected void nodeInserted(final Node<E> node) : 2
Method number 1683 : protected void checkModCount() : 2
Method number 1684 : public void close() : 2

Classe : org.apache.commons.collections4.list.CursorableLinkedList.SubCursor
Method number 1685 : public boolean hasNext() : 1
Method number 1686 : public boolean hasPrevious() : 1
Method number 1687 : public int nextIndex() : 1
Method number 1688 : public void add(final E obj) : 1
Method number 1689 : public void remove() : 1

========================================
Fichier : list\FixedSizeList.java
========================================

Classe : org.apache.commons.collections4.list.FixedSizeList
Method number 1690 : public static FixedSizeList<E> fixedSizeList(final List<E> list) : 1
Method number 1691 : public boolean add(final E object) : 1
Method number 1692 : public void add(final int index, final E object) : 1
Method number 1693 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 1694 : public boolean addAll(final int index, final Collection<? extends E> coll) : 1
Method number 1695 : public void clear() : 1
Method number 1696 : public E get(final int index) : 1
Method number 1697 : public int indexOf(final Object object) : 1
Method number 1698 : public Iterator<E> iterator() : 1
Method number 1699 : public int lastIndexOf(final Object object) : 1
Method number 1700 : public ListIterator<E> listIterator() : 1
Method number 1701 : public ListIterator<E> listIterator(final int index) : 1
Method number 1702 : public E remove(final int index) : 1
Method number 1703 : public boolean remove(final Object object) : 1
Method number 1704 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 1705 : public boolean removeAll(final Collection<?> coll) : 1
Method number 1706 : public boolean retainAll(final Collection<?> coll) : 1
Method number 1707 : public E set(final int index, final E object) : 1
Method number 1708 : public List<E> subList(final int fromIndex, final int toIndex) : 1
Method number 1709 : public boolean isFull() : 1
Method number 1710 : public int maxSize() : 1
Method number 1711 : private static UnsupportedOperationException unsupportedOperationException() : 1

Classe : org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator
Method number 1712 : public void remove() : 1
Method number 1713 : public void add(final Object object) : 1

========================================
Fichier : list\GrowthList.java
========================================

Classe : org.apache.commons.collections4.list.GrowthList
Method number 1714 : public static GrowthList<E> growthList(final List<E> list) : 1
Method number 1715 : public void add(final int index, final E element) : 2
Method number 1716 : public boolean addAll(final int index, final Collection<? extends E> coll) : 2
Method number 1717 : public E set(final int index, final E element) : 2

========================================
Fichier : list\LazyList.java
========================================

Classe : org.apache.commons.collections4.list.LazyList
Method number 1718 : public static LazyList<E> lazyList(final List<E> list, final Factory<? extends E> factory) : 1
Method number 1719 : public static LazyList<E> lazyList(final List<E> list, final Transformer<Integer, ? extends E> transformer) : 1
Method number 1720 : public E get(final int index) : 4
Method number 1721 : public List<E> subList(final int fromIndex, final int toIndex) : 3
Method number 1722 : private E element(final int index) : 3

========================================
Fichier : list\NodeCachingLinkedList.java
========================================

Classe : org.apache.commons.collections4.list.NodeCachingLinkedList
Method number 1723 : protected int getMaximumCacheSize() : 1
Method number 1724 : protected void setMaximumCacheSize(final int maximumCacheSize) : 1
Method number 1725 : protected void shrinkCacheToMaximumSize() : 2
Method number 1726 : protected Node<E> getNodeFromCache() : 2
Method number 1727 : protected boolean isCacheFull() : 1
Method number 1728 : protected void addNodeToCache(final Node<E> node) : 2
Method number 1729 : protected Node<E> createNode(final E value) : 2
Method number 1730 : protected void removeNode(final Node<E> node) : 1
Method number 1731 : protected void removeAllNodes() : 2
Method number 1732 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 1733 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : list\package-info.java
========================================

========================================
Fichier : list\PredicatedList.java
========================================

Classe : org.apache.commons.collections4.list.PredicatedList
Method number 1734 : public static PredicatedList<T> predicatedList(final List<T> list, final Predicate<? super T> predicate) : 1
Method number 1735 : protected List<E> decorated() : 1
Method number 1736 : public boolean equals(final Object object) : 1
Method number 1737 : public int hashCode() : 1
Method number 1738 : public E get(final int index) : 1
Method number 1739 : public int indexOf(final Object object) : 1
Method number 1740 : public int lastIndexOf(final Object object) : 1
Method number 1741 : public E remove(final int index) : 1
Method number 1742 : public void add(final int index, final E object) : 1
Method number 1743 : public boolean addAll(final int index, final Collection<? extends E> coll) : 2
Method number 1744 : public ListIterator<E> listIterator() : 1
Method number 1745 : public ListIterator<E> listIterator(final int i) : 1
Method number 1746 : public E set(final int index, final E object) : 1
Method number 1747 : public List<E> subList(final int fromIndex, final int toIndex) : 1

Classe : org.apache.commons.collections4.list.PredicatedList.PredicatedListIterator
Method number 1748 : public void add(final E object) : 1
Method number 1749 : public void set(final E object) : 1

========================================
Fichier : list\SetUniqueList.java
========================================

Classe : org.apache.commons.collections4.list.SetUniqueList
Method number 1750 : public static SetUniqueList<E> setUniqueList(final List<E> list) : 2
Method number 1751 : public Set<E> asSet() : 1
Method number 1752 : public boolean add(final E object) : 1
Method number 1753 : public void add(final int index, final E object) : 2
Method number 1754 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 1755 : public boolean addAll(final int index, final Collection<? extends E> coll) : 3
Method number 1756 : public E set(final int index, final E object) : 2
Method number 1757 : public boolean remove(final Object object) : 2
Method number 1758 : public E remove(final int index) : 1
Method number 1759 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 1760 : public boolean removeAll(final Collection<?> coll) : 2
Method number 1761 : public boolean retainAll(final Collection<?> coll) : 3
Method number 1762 : public void clear() : 1
Method number 1763 : public boolean contains(final Object object) : 1
Method number 1764 : public boolean containsAll(final Collection<?> coll) : 1
Method number 1765 : public Iterator<E> iterator() : 1
Method number 1766 : public ListIterator<E> listIterator() : 1
Method number 1767 : public ListIterator<E> listIterator(final int index) : 1
Method number 1768 : public List<E> subList(final int fromIndex, final int toIndex) : 1
Method number 1769 : protected Set<E> createSetBasedOnList(final Set<E> set, final List<E> list) : 2

Classe : org.apache.commons.collections4.list.SetUniqueList.SetListIterator
Method number 1770 : public E next() : 1
Method number 1771 : public void remove() : 1

Classe : org.apache.commons.collections4.list.SetUniqueList.SetListListIterator
Method number 1772 : public E next() : 1
Method number 1773 : public E previous() : 1
Method number 1774 : public void remove() : 1
Method number 1775 : public void add(final E object) : 2
Method number 1776 : public void set(final E object) : 1

========================================
Fichier : list\TransformedList.java
========================================

Classe : org.apache.commons.collections4.list.TransformedList
Method number 1777 : public static TransformedList<E> transformingList(final List<E> list, final Transformer<? super E, ? extends E> transformer) : 1
Method number 1778 : public static TransformedList<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer) : 3
Method number 1779 : protected List<E> getList() : 1
Method number 1780 : public boolean equals(final Object object) : 1
Method number 1781 : public int hashCode() : 1
Method number 1782 : public E get(final int index) : 1
Method number 1783 : public int indexOf(final Object object) : 1
Method number 1784 : public int lastIndexOf(final Object object) : 1
Method number 1785 : public E remove(final int index) : 1
Method number 1786 : public void add(final int index, E object) : 1
Method number 1787 : public boolean addAll(final int index, Collection<? extends E> coll) : 1
Method number 1788 : public ListIterator<E> listIterator() : 1
Method number 1789 : public ListIterator<E> listIterator(final int i) : 1
Method number 1790 : public E set(final int index, E object) : 1
Method number 1791 : public List<E> subList(final int fromIndex, final int toIndex) : 1

Classe : org.apache.commons.collections4.list.TransformedList.TransformedListIterator
Method number 1792 : public void add(E object) : 1
Method number 1793 : public void set(E object) : 1

========================================
Fichier : list\TreeList.java
========================================

Classe : org.apache.commons.collections4.list.TreeList
Method number 1794 : public E get(final int index) : 1
Method number 1795 : public int size() : 1
Method number 1796 : public Iterator<E> iterator() : 1
Method number 1797 : public ListIterator<E> listIterator() : 1
Method number 1798 : public ListIterator<E> listIterator(final int fromIndex) : 1
Method number 1799 : public int indexOf(final Object object) : 2
Method number 1800 : public boolean contains(final Object object) : 1
Method number 1801 : public Object[] toArray() : 2
Method number 1802 : public void add(final int index, final E obj) : 2
Method number 1803 : public boolean addAll(final Collection<? extends E> c) : 2
Method number 1804 : public E set(final int index, final E obj) : 1
Method number 1805 : public E remove(final int index) : 1
Method number 1806 : public void clear() : 1
Method number 1807 : private void checkInterval(final int index, final int startIndex, final int endIndex) : 2

Classe : org.apache.commons.collections4.list.TreeList.AVLNode
Method number 1808 :  E getValue() : 1
Method number 1809 :  void setValue(final E obj) : 1
Method number 1810 :  AVLNode<E> get(final int index) : 3
Method number 1811 :  int indexOf(final Object object, final int index) : 5
Method number 1812 :  void toArray(final Object[] array, final int index) : 3
Method number 1813 :  AVLNode<E> next() : 2
Method number 1814 :  AVLNode<E> previous() : 2
Method number 1815 :  AVLNode<E> insert(final int index, final E obj) : 2
Method number 1816 : private AVLNode<E> insertOnLeft(final int indexRelativeToMe, final E obj) : 3
Method number 1817 : private AVLNode<E> insertOnRight(final int indexRelativeToMe, final E obj) : 3
Method number 1818 : private AVLNode<E> getLeftSubTree() : 1
Method number 1819 : private AVLNode<E> getRightSubTree() : 1
Method number 1820 : private AVLNode<E> max() : 1
Method number 1821 : private AVLNode<E> min() : 1
Method number 1822 :  AVLNode<E> remove(final int index) : 5
Method number 1823 : private AVLNode<E> removeMax() : 3
Method number 1824 : private AVLNode<E> removeMin() : 3
Method number 1825 : private AVLNode<E> removeSelf() : 11
Method number 1826 : private AVLNode<E> balance() : 1
Method number 1827 : private int getOffset(final AVLNode<E> node) : 2
Method number 1828 : private int setOffset(final AVLNode<E> node, final int newOffset) : 2
Method number 1829 : private void recalcHeight() : 1
Method number 1830 : private int getHeight(final AVLNode<E> node) : 1
Method number 1831 : private int heightRightMinusLeft() : 1
Method number 1832 : private AVLNode<E> rotateLeft() : 1
Method number 1833 : private AVLNode<E> rotateRight() : 1
Method number 1834 : private void setLeft(final AVLNode<E> node, final AVLNode<E> previous) : 1
Method number 1835 : private void setRight(final AVLNode<E> node, final AVLNode<E> next) : 1
Method number 1836 : private AVLNode<E> addAll(AVLNode<E> otherTree, final int currentSize) : 12
Method number 1837 : public String toString() : 1

Classe : org.apache.commons.collections4.list.TreeList.TreeListIterator
Method number 1838 : protected void checkModCount() : 2
Method number 1839 : public boolean hasNext() : 1
Method number 1840 : public E next() : 3
Method number 1841 : public boolean hasPrevious() : 1
Method number 1842 : public E previous() : 3
Method number 1843 : public int nextIndex() : 1
Method number 1844 : public int previousIndex() : 1
Method number 1845 : public void remove() : 3
Method number 1846 : public void set(final E obj) : 2
Method number 1847 : public void add(final E obj) : 1

========================================
Fichier : list\UnmodifiableList.java
========================================

Classe : org.apache.commons.collections4.list.UnmodifiableList
Method number 1848 : public static List<E> unmodifiableList(final List<? extends E> list) : 2
Method number 1849 : public Iterator<E> iterator() : 1
Method number 1850 : public boolean add(final Object object) : 1
Method number 1851 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 1852 : public void clear() : 1
Method number 1853 : public boolean remove(final Object object) : 1
Method number 1854 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 1855 : public boolean removeAll(final Collection<?> coll) : 1
Method number 1856 : public boolean retainAll(final Collection<?> coll) : 1
Method number 1857 : public ListIterator<E> listIterator() : 1
Method number 1858 : public ListIterator<E> listIterator(final int index) : 1
Method number 1859 : public void add(final int index, final E object) : 1
Method number 1860 : public boolean addAll(final int index, final Collection<? extends E> coll) : 1
Method number 1861 : public E remove(final int index) : 1
Method number 1862 : public E set(final int index, final E object) : 1
Method number 1863 : public List<E> subList(final int fromIndex, final int toIndex) : 1

========================================
Fichier : ListUtils.java
========================================

Classe : org.apache.commons.collections4.ListUtils
Method number 1864 : public static List<T> defaultIfNull(final List<T> list, final List<T> defaultList) : 1
Method number 1865 : public static List<T> emptyIfNull(final List<T> list) : 1
Method number 1866 : public static List<E> fixedSizeList(final List<E> list) : 1
Method number 1867 : public static T getFirst(final List<T> list) : 1
Method number 1868 : public static T getLast(final List<T> list) : 1
Method number 1869 : public static int hashCodeForList(final Collection<?> list) : 3
Method number 1870 : public static int indexOf(final List<E> list, final Predicate<E> predicate) : 4
Method number 1871 : public static List<E> intersection(final List<? extends E> list1, final List<? extends E> list2) : 4
Method number 1872 : public static boolean isEqualList(final Collection<?> list1, final Collection<?> list2) : 5
Method number 1873 : public static List<E> lazyList(final List<E> list, final Factory<? extends E> factory) : 1
Method number 1874 : public static List<E> lazyList(final List<E> list, final Transformer<Integer, ? extends E> transformer) : 1
Method number 1875 : public static String longestCommonSubsequence(final CharSequence charSequenceA, final CharSequence charSequenceB) : 2
Method number 1876 : public static List<E> longestCommonSubsequence(final List<E> a, final List<E> b) : 1
Method number 1877 : public static List<E> longestCommonSubsequence(final List<E> listA, final List<E> listB, final Equator<? super E> equator) : 1
Method number 1878 : public static List<List<T>> partition(final List<T> list, final int size) : 2
Method number 1879 : public static List<E> predicatedList(final List<E> list, final Predicate<E> predicate) : 1
Method number 1880 : public static List<E> removeAll(final Collection<E> collection, final Collection<?> remove) : 3
Method number 1881 : public static List<E> retainAll(final Collection<E> collection, final Collection<?> retain) : 3
Method number 1882 : public static List<E> select(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate) : 1
Method number 1883 : public static List<E> selectRejected(final Collection<? extends E> inputCollection, final Predicate<? super E> predicate) : 1
Method number 1884 : public static List<E> subtract(final List<E> list1, final List<? extends E> list2) : 3
Method number 1885 : public static List<E> sum(final List<? extends E> list1, final List<? extends E> list2) : 1
Method number 1886 : public static List<E> synchronizedList(final List<E> list) : 1
Method number 1887 : public static List<E> transformedList(final List<E> list, final Transformer<? super E, ? extends E> transformer) : 1
Method number 1888 : public static List<E> union(final List<? extends E> list1, final List<? extends E> list2) : 1
Method number 1889 : public static List<E> unmodifiableList(final List<? extends E> list) : 1

Classe : org.apache.commons.collections4.ListUtils.CharSequenceAsList
Method number 1890 : public Character get(final int index) : 1
Method number 1891 : public int size() : 1

Classe : org.apache.commons.collections4.ListUtils.LcsVisitor
Method number 1892 : public List<E> getSubSequence() : 1
Method number 1893 : public void visitDeleteCommand(final E object) : 1
Method number 1894 : public void visitInsertCommand(final E object) : 1
Method number 1895 : public void visitKeepCommand(final E object) : 1

Classe : org.apache.commons.collections4.ListUtils.Partition
Method number 1896 : public List<T> get(final int index) : 3
Method number 1897 : public boolean isEmpty() : 1
Method number 1898 : public int size() : 1

========================================
Fichier : ListValuedMap.java
========================================

Classe : org.apache.commons.collections4.ListValuedMap
Method number 1899 :  List<V> get(K key) : 1
Method number 1900 :  List<V> remove(Object key) : 1

========================================
Fichier : map\AbstractHashedMap.java
========================================

Classe : org.apache.commons.collections4.map.AbstractHashedMap
Method number 1901 : protected void init() : 1
Method number 1902 : public V get(Object key) : 3
Method number 1903 : public int size() : 1
Method number 1904 : public boolean isEmpty() : 1
Method number 1905 : public boolean containsKey(Object key) : 3
Method number 1906 : public boolean containsValue(final Object value) : 8
Method number 1907 : public V put(final K key, final V value) : 3
Method number 1908 : public void putAll(final Map<? extends K, ? extends V> map) : 1
Method number 1909 : private void _putAll(final Map<? extends K, ? extends V> map) : 3
Method number 1910 : public V remove(Object key) : 3
Method number 1911 : public void clear() : 1
Method number 1912 : protected Object convertKey(final Object key) : 1
Method number 1913 : protected int hash(final Object key) : 1
Method number 1914 : protected boolean isEqualKey(final Object key1, final Object key2) : 1
Method number 1915 : protected boolean isEqualValue(final Object value1, final Object value2) : 1
Method number 1916 : protected int hashIndex(final int hashCode, final int dataSize) : 1
Method number 1917 : protected HashEntry<K, V> getEntry(Object key) : 3
Method number 1918 : protected void updateEntry(final HashEntry<K, V> entry, final V newValue) : 1
Method number 1919 : protected void reuseEntry(final HashEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) : 1
Method number 1920 : protected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) : 1
Method number 1921 : protected HashEntry<K, V> createEntry(final HashEntry<K, V> next, final int hashCode, final K key, final V value) : 1
Method number 1922 : protected void addEntry(final HashEntry<K, V> entry, final int hashIndex) : 1
Method number 1923 : protected void removeMapping(final HashEntry<K, V> entry, final int hashIndex, final HashEntry<K, V> previous) : 1
Method number 1924 : protected void removeEntry(final HashEntry<K, V> entry, final int hashIndex, final HashEntry<K, V> previous) : 2
Method number 1925 : protected void destroyEntry(final HashEntry<K, V> entry) : 1
Method number 1926 : protected void checkCapacity() : 3
Method number 1927 : protected void ensureCapacity(final int newCapacity) : 5
Method number 1928 : protected int calculateNewCapacity(final int proposedCapacity) : 4
Method number 1929 : protected int calculateThreshold(final int newCapacity, final float factor) : 1
Method number 1930 : protected HashEntry<K, V> entryNext(final HashEntry<K, V> entry) : 1
Method number 1931 : protected int entryHashCode(final HashEntry<K, V> entry) : 1
Method number 1932 : protected K entryKey(final HashEntry<K, V> entry) : 1
Method number 1933 : protected V entryValue(final HashEntry<K, V> entry) : 1
Method number 1934 : public MapIterator<K, V> mapIterator() : 2
Method number 1935 : public Set<Map.Entry<K, V>> entrySet() : 2
Method number 1936 : protected Iterator<Map.Entry<K, V>> createEntrySetIterator() : 2
Method number 1937 : public Set<K> keySet() : 2
Method number 1938 : protected Iterator<K> createKeySetIterator() : 2
Method number 1939 : public Collection<V> values() : 2
Method number 1940 : protected Iterator<V> createValuesIterator() : 2
Method number 1941 : protected void doWriteObject(final ObjectOutputStream out) throws IOException : 2
Method number 1942 : protected void doReadObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 2
Method number 1943 : protected AbstractHashedMap<K, V> clone() : 1
Method number 1944 : public boolean equals(final Object obj) : 4
Method number 1945 : public int hashCode() : 2
Method number 1946 : public String toString() : 4

Classe : org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator
Method number 1947 : public K next() : 1
Method number 1948 : public K getKey() : 2
Method number 1949 : public V getValue() : 2
Method number 1950 : public V setValue(final V value) : 2

Classe : org.apache.commons.collections4.map.AbstractHashedMap.EntrySet
Method number 1951 : public int size() : 1
Method number 1952 : public void clear() : 1
Method number 1953 : public boolean contains(final Object entry) : 2
Method number 1954 : public boolean remove(final Object obj) : 3
Method number 1955 : public Iterator<Map.Entry<K, V>> iterator() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.EntrySetIterator
Method number 1956 : public Map.Entry<K, V> next() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.KeySet
Method number 1957 : public int size() : 1
Method number 1958 : public void clear() : 1
Method number 1959 : public boolean contains(final Object key) : 1
Method number 1960 : public boolean remove(final Object key) : 1
Method number 1961 : public Iterator<K> iterator() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator
Method number 1962 : public K next() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.Values
Method number 1963 : public int size() : 1
Method number 1964 : public void clear() : 1
Method number 1965 : public boolean contains(final Object value) : 1
Method number 1966 : public Iterator<V> iterator() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.ValuesIterator
Method number 1967 : public V next() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry
Method number 1968 : public K getKey() : 2
Method number 1969 : public V getValue() : 1
Method number 1970 : public V setValue(final V value) : 1
Method number 1971 : public boolean equals(final Object obj) : 3
Method number 1972 : public int hashCode() : 1
Method number 1973 : public String toString() : 1

Classe : org.apache.commons.collections4.map.AbstractHashedMap.HashIterator
Method number 1974 : public boolean hasNext() : 1
Method number 1975 : protected HashEntry<K, V> nextEntry() : 4
Method number 1976 : protected HashEntry<K, V> currentEntry() : 1
Method number 1977 : public void remove() : 3
Method number 1978 : public String toString() : 2

========================================
Fichier : map\AbstractInputCheckedMapDecorator.java
========================================

Classe : org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator
Method number 1979 : protected abstract V checkSetValue(V value) : 1
Method number 1980 : protected boolean isSetValueChecking() : 1
Method number 1981 : public Set<Map.Entry<K, V>> entrySet() : 2

Classe : org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet
Method number 1982 : public Iterator<Map.Entry<K, V>> iterator() : 1
Method number 1983 : public Object[] toArray() : 2
Method number 1984 : public T[] toArray(final T[] array) : 5

Classe : org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySetIterator
Method number 1985 : public Map.Entry<K, V> next() : 1

Classe : org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.MapEntry
Method number 1986 : public V setValue(V value) : 1

========================================
Fichier : map\AbstractIterableMap.java
========================================

Classe : org.apache.commons.collections4.map.AbstractIterableMap
Method number 1987 : public MapIterator<K, V> mapIterator() : 1

========================================
Fichier : map\AbstractLinkedMap.java
========================================

Classe : org.apache.commons.collections4.map.AbstractLinkedMap
Method number 1988 : protected void init() : 1
Method number 1989 : public boolean containsValue(final Object value) : 6
Method number 1990 : public void clear() : 1
Method number 1991 : public K firstKey() : 2
Method number 1992 : public K lastKey() : 2
Method number 1993 : public K nextKey(final Object key) : 1
Method number 1994 : protected LinkEntry<K, V> getEntry(final Object key) : 1
Method number 1995 : public K previousKey(final Object key) : 1
Method number 1996 : protected LinkEntry<K, V> getEntry(final int index) : 6
Method number 1997 : protected void addEntry(final HashEntry<K, V> entry, final int hashIndex) : 1
Method number 1998 : protected LinkEntry<K, V> createEntry(final HashEntry<K, V> next, final int hashCode, final K key, final V value) : 1
Method number 1999 : protected void removeEntry(final HashEntry<K, V> entry, final int hashIndex, final HashEntry<K, V> previous) : 1
Method number 2000 : protected LinkEntry<K, V> entryBefore(final LinkEntry<K, V> entry) : 1
Method number 2001 : protected LinkEntry<K, V> entryAfter(final LinkEntry<K, V> entry) : 1
Method number 2002 : public OrderedMapIterator<K, V> mapIterator() : 2
Method number 2003 : protected Iterator<Map.Entry<K, V>> createEntrySetIterator() : 2
Method number 2004 : protected Iterator<K> createKeySetIterator() : 2
Method number 2005 : protected Iterator<V> createValuesIterator() : 2

Classe : org.apache.commons.collections4.map.AbstractLinkedMap.LinkMapIterator
Method number 2006 : public K next() : 1
Method number 2007 : public K previous() : 1
Method number 2008 : public K getKey() : 2
Method number 2009 : public V getValue() : 2
Method number 2010 : public V setValue(final V value) : 2

Classe : org.apache.commons.collections4.map.AbstractLinkedMap.EntrySetIterator
Method number 2011 : public Map.Entry<K, V> next() : 1
Method number 2012 : public Map.Entry<K, V> previous() : 1

Classe : org.apache.commons.collections4.map.AbstractLinkedMap.KeySetIterator
Method number 2013 : public K next() : 1
Method number 2014 : public K previous() : 1

Classe : org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator
Method number 2015 : public V next() : 1
Method number 2016 : public V previous() : 1

Classe : org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry

Classe : org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator
Method number 2017 : public boolean hasNext() : 1
Method number 2018 : public boolean hasPrevious() : 1
Method number 2019 : protected LinkEntry<K, V> nextEntry() : 3
Method number 2020 : protected LinkEntry<K, V> previousEntry() : 3
Method number 2021 : protected LinkEntry<K, V> currentEntry() : 1
Method number 2022 : public void remove() : 3
Method number 2023 : public void reset() : 1
Method number 2024 : public String toString() : 2

========================================
Fichier : map\AbstractMapDecorator.java
========================================

Classe : org.apache.commons.collections4.map.AbstractMapDecorator
Method number 2025 : protected Map<K, V> decorated() : 1
Method number 2026 : public void clear() : 1
Method number 2027 : public boolean containsKey(final Object key) : 1
Method number 2028 : public boolean containsValue(final Object value) : 1
Method number 2029 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 2030 : public V get(final Object key) : 1
Method number 2031 : public boolean isEmpty() : 1
Method number 2032 : public Set<K> keySet() : 1
Method number 2033 : public V put(final K key, final V value) : 1
Method number 2034 : public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
Method number 2035 : public V remove(final Object key) : 1
Method number 2036 : public int size() : 1
Method number 2037 : public Collection<V> values() : 1
Method number 2038 : public boolean equals(final Object object) : 2
Method number 2039 : public int hashCode() : 1
Method number 2040 : public String toString() : 1

========================================
Fichier : map\AbstractOrderedMapDecorator.java
========================================

Classe : org.apache.commons.collections4.map.AbstractOrderedMapDecorator
Method number 2041 : protected OrderedMap<K, V> decorated() : 1
Method number 2042 : public K firstKey() : 1
Method number 2043 : public K lastKey() : 1
Method number 2044 : public K nextKey(final K key) : 1
Method number 2045 : public K previousKey(final K key) : 1
Method number 2046 : public OrderedMapIterator<K, V> mapIterator() : 1

========================================
Fichier : map\AbstractReferenceMap.java
========================================

Classe : org.apache.commons.collections4.map.AbstractReferenceMap
Method number 2047 : protected void init() : 1
Method number 2048 : public int size() : 1
Method number 2049 : public boolean isEmpty() : 1
Method number 2050 : public boolean containsKey(final Object key) : 2
Method number 2051 : public boolean containsValue(final Object value) : 2
Method number 2052 : public V get(final Object key) : 2
Method number 2053 : public V put(final K key, final V value) : 1
Method number 2054 : public V remove(final Object key) : 2
Method number 2055 : public void clear() : 2
Method number 2056 : public MapIterator<K, V> mapIterator() : 1
Method number 2057 : public Set<Map.Entry<K, V>> entrySet() : 2
Method number 2058 : public Set<K> keySet() : 2
Method number 2059 : public Collection<V> values() : 2
Method number 2060 : protected void purgeBeforeRead() : 1
Method number 2061 : protected void purgeBeforeWrite() : 1
Method number 2062 : protected void purge() : 2
Method number 2063 : protected void purge(final Reference<?> ref) : 4
Method number 2064 : protected HashEntry<K, V> getEntry(final Object key) : 2
Method number 2065 : protected int hashEntry(final Object key, final Object value) : 1
Method number 2066 : protected boolean isEqualKey(final Object key1, Object key2) : 1
Method number 2067 : protected ReferenceEntry<K, V> createEntry(final HashEntry<K, V> next, final int hashCode, final K key, final V value) : 1
Method number 2068 : protected Iterator<Map.Entry<K, V>> createEntrySetIterator() : 1
Method number 2069 : protected Iterator<K> createKeySetIterator() : 1
Method number 2070 : protected Iterator<V> createValuesIterator() : 1
Method number 2071 : protected void doWriteObject(final ObjectOutputStream out) throws IOException : 2
Method number 2072 : protected void doReadObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 3
Method number 2073 : protected boolean isKeyType(final ReferenceStrength type) : 1
Method number 2074 : protected boolean isValueType(final ReferenceStrength type) : 1

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet
Method number 2075 : public Object[] toArray() : 1
Method number 2076 : public T[] toArray(final T[] arr) : 2

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySet
Method number 2077 : public Object[] toArray() : 1
Method number 2078 : public T[] toArray(final T[] arr) : 2

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues
Method number 2079 : public Object[] toArray() : 1
Method number 2080 : public T[] toArray(final T[] arr) : 2

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry
Method number 2081 : public K getKey() : 1
Method number 2082 : public V getValue() : 1
Method number 2083 : public V setValue(final V obj) : 2
Method number 2084 : public boolean equals(final Object obj) : 4
Method number 2085 : public int hashCode() : 1
Method number 2086 : protected Object toReference(final ReferenceStrength type, final T referent, final int hash) : 4
Method number 2087 : protected void onPurge() : 1
Method number 2088 : protected boolean purge(final Reference<?> ref) : 4
Method number 2089 : protected ReferenceEntry<K, V> next() : 1
Method number 2090 : protected void nullValue() : 1

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator
Method number 2091 : public boolean hasNext() : 5
Method number 2092 : private void checkMod() : 2
Method number 2093 : private boolean nextNull() : 1
Method number 2094 : protected ReferenceEntry<K, V> nextEntry() : 2
Method number 2095 : protected ReferenceEntry<K, V> currentEntry() : 1
Method number 2096 : public void remove() : 2

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySetIterator
Method number 2097 : public Map.Entry<K, V> next() : 1

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySetIterator
Method number 2098 : public K next() : 1

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValuesIterator
Method number 2099 : public V next() : 1

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator
Method number 2100 : public K next() : 1
Method number 2101 : public K getKey() : 2
Method number 2102 : public V getValue() : 2
Method number 2103 : public V setValue(final V value) : 2

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.SoftRef
Method number 2104 : public int hashCode() : 1
Method number 2105 : public boolean equals(final Object obj) : 4

Classe : org.apache.commons.collections4.map.AbstractReferenceMap.WeakRef
Method number 2106 : public int hashCode() : 1
Method number 2107 : public boolean equals(final Object obj) : 4

========================================
Fichier : map\AbstractSortedMapDecorator.java
========================================

Classe : org.apache.commons.collections4.map.AbstractSortedMapDecorator
Method number 2108 : protected SortedMap<K, V> decorated() : 1
Method number 2109 : public Comparator<? super K> comparator() : 1
Method number 2110 : public K firstKey() : 1
Method number 2111 : public K lastKey() : 1
Method number 2112 : public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
Method number 2113 : public SortedMap<K, V> headMap(final K toKey) : 1
Method number 2114 : public SortedMap<K, V> tailMap(final K fromKey) : 1
Method number 2115 : public K previousKey(final K key) : 1
Method number 2116 : public K nextKey(final K key) : 1
Method number 2117 : public OrderedMapIterator<K, V> mapIterator() : 1

Classe : org.apache.commons.collections4.map.AbstractSortedMapDecorator.SortedMapIterator
Method number 2118 : public synchronized void reset() : 1
Method number 2119 : public boolean hasPrevious() : 1
Method number 2120 : public K previous() : 1

========================================
Fichier : map\CaseInsensitiveMap.java
========================================

Classe : org.apache.commons.collections4.map.CaseInsensitiveMap
Method number 2121 : protected Object convertKey(final Object key) : 3
Method number 2122 : public CaseInsensitiveMap<K, V> clone() : 1
Method number 2123 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2124 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : map\CompositeMap.java
========================================

Classe : org.apache.commons.collections4.map.CompositeMap
Method number 2125 : public void setMutator(final MapMutator<K, V> mutator) : 1
Method number 2126 : public synchronized void addComposited(final Map<K, V> map) throws IllegalArgumentException : 5
Method number 2127 : public synchronized Map<K, V> removeComposited(final Map<K, V> map) : 3
Method number 2128 : public void clear() : 2
Method number 2129 : public boolean containsKey(final Object key) : 3
Method number 2130 : public boolean containsValue(final Object value) : 3
Method number 2131 : public Set<Map.Entry<K, V>> entrySet() : 2
Method number 2132 : public V get(final Object key) : 3
Method number 2133 : public boolean isEmpty() : 3
Method number 2134 : public Set<K> keySet() : 2
Method number 2135 : public V put(final K key, final V value) : 2
Method number 2136 : public void putAll(final Map<? extends K, ? extends V> map) : 2
Method number 2137 : public V remove(final Object key) : 3
Method number 2138 : public int size() : 2
Method number 2139 : public Collection<V> values() : 2
Method number 2140 : public boolean equals(final Object obj) : 2
Method number 2141 : public int hashCode() : 2

Classe : org.apache.commons.collections4.map.CompositeMap.MapMutator
Method number 2142 :  void resolveCollision(CompositeMap<K, V> composite, Map<K, V> existing, Map<K, V> added, Collection<K> intersect) : 1
Method number 2143 :  V put(CompositeMap<K, V> map, Map<K, V>[] composited, K key, V value) : 1
Method number 2144 :  void putAll(CompositeMap<K, V> map, Map<K, V>[] composited, Map<? extends K, ? extends V> mapToAdd) : 1

========================================
Fichier : map\DefaultedMap.java
========================================

Classe : org.apache.commons.collections4.map.DefaultedMap
Method number 2145 : public static DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final V defaultValue) : 1
Method number 2146 : public static DefaultedMap<K, V> defaultedMap(final Map<K, V> map, final Factory<? extends V> factory) : 1
Method number 2147 : public static Map<K, V> defaultedMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformer) : 1
Method number 2148 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2149 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2150 : public V get(final Object key) : 1

========================================
Fichier : map\EntrySetToMapIteratorAdapter.java
========================================

Classe : org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter
Method number 2151 : public K getKey() : 1
Method number 2152 : public V getValue() : 1
Method number 2153 : public V setValue(final V value) : 1
Method number 2154 : public boolean hasNext() : 1
Method number 2155 : public K next() : 1
Method number 2156 : public synchronized void reset() : 1
Method number 2157 : public void remove() : 1
Method number 2158 : protected synchronized Map.Entry<K, V> current() : 2

========================================
Fichier : map\FixedSizeMap.java
========================================

Classe : org.apache.commons.collections4.map.FixedSizeMap
Method number 2159 : public static FixedSizeMap<K, V> fixedSizeMap(final Map<K, V> map) : 1
Method number 2160 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2161 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2162 : public V put(final K key, final V value) : 2
Method number 2163 : public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 3
Method number 2164 : public void clear() : 1
Method number 2165 : public V remove(final Object key) : 1
Method number 2166 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 2167 : public Set<K> keySet() : 1
Method number 2168 : public Collection<V> values() : 1
Method number 2169 : public boolean isFull() : 1
Method number 2170 : public int maxSize() : 1

========================================
Fichier : map\FixedSizeSortedMap.java
========================================

Classe : org.apache.commons.collections4.map.FixedSizeSortedMap
Method number 2171 : public static FixedSizeSortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map) : 1
Method number 2172 : protected SortedMap<K, V> getSortedMap() : 1
Method number 2173 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2174 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2175 : public V put(final K key, final V value) : 2
Method number 2176 : public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 2
Method number 2177 : public void clear() : 1
Method number 2178 : public V remove(final Object key) : 1
Method number 2179 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 2180 : public Set<K> keySet() : 1
Method number 2181 : public Collection<V> values() : 1
Method number 2182 : public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
Method number 2183 : public SortedMap<K, V> headMap(final K toKey) : 1
Method number 2184 : public SortedMap<K, V> tailMap(final K fromKey) : 1
Method number 2185 : public boolean isFull() : 1
Method number 2186 : public int maxSize() : 1

========================================
Fichier : map\Flat3Map.java
========================================

Classe : org.apache.commons.collections4.map.Flat3Map
Method number 2187 : public V get(final Object key) : 4
Method number 2188 : public int size() : 2
Method number 2189 : public boolean isEmpty() : 1
Method number 2190 : public boolean containsKey(final Object key) : 4
Method number 2191 : public boolean containsValue(final Object value) : 3
Method number 2192 : public V put(final K key, final V value) : 4
Method number 2193 : public void putAll(final Map<? extends K, ? extends V> map) : 5
Method number 2194 : private void convertToMap() : 1
Method number 2195 : protected AbstractHashedMap<K, V> createDelegateMap() : 1
Method number 2196 : public V remove(final Object key) : 5
Method number 2197 : public void clear() : 2
Method number 2198 : public MapIterator<K, V> mapIterator() : 3
Method number 2199 : public Set<Map.Entry<K, V>> entrySet() : 2
Method number 2200 : public Set<K> keySet() : 2
Method number 2201 : public Collection<V> values() : 2
Method number 2202 : private void writeObject(final ObjectOutputStream out) throws IOException : 2
Method number 2203 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 3
Method number 2204 : public Flat3Map<K, V> clone() : 1
Method number 2205 : public boolean equals(final Object obj) : 6
Method number 2206 : public int hashCode() : 2
Method number 2207 : public String toString() : 3

Classe : org.apache.commons.collections4.map.Flat3Map.FlatMapIterator
Method number 2208 : public boolean hasNext() : 1
Method number 2209 : public K next() : 2
Method number 2210 : public void remove() : 2
Method number 2211 : public K getKey() : 2
Method number 2212 : public V getValue() : 2
Method number 2213 : public V setValue(final V value) : 2
Method number 2214 : public void reset() : 1
Method number 2215 : public String toString() : 2

Classe : org.apache.commons.collections4.map.Flat3Map.EntrySet
Method number 2216 : public int size() : 1
Method number 2217 : public void clear() : 1
Method number 2218 : public boolean remove(final Object obj) : 2
Method number 2219 : public Iterator<Map.Entry<K, V>> iterator() : 3

Classe : org.apache.commons.collections4.map.Flat3Map.FlatMapEntry
Method number 2220 :  void setRemoved(final boolean flag) : 1
Method number 2221 : public K getKey() : 2
Method number 2222 : public V getValue() : 2
Method number 2223 : public V setValue(final V value) : 2
Method number 2224 : public boolean equals(final Object obj) : 3
Method number 2225 : public int hashCode() : 2
Method number 2226 : public String toString() : 2

Classe : org.apache.commons.collections4.map.Flat3Map.EntryIterator
Method number 2227 : public boolean hasNext() : 1
Method number 2228 : public Map.Entry<K, V> nextEntry() : 2
Method number 2229 : public void remove() : 2

Classe : org.apache.commons.collections4.map.Flat3Map.EntrySetIterator
Method number 2230 : public Map.Entry<K, V> next() : 1

Classe : org.apache.commons.collections4.map.Flat3Map.KeySet
Method number 2231 : public int size() : 1
Method number 2232 : public void clear() : 1
Method number 2233 : public boolean contains(final Object key) : 1
Method number 2234 : public boolean remove(final Object key) : 1
Method number 2235 : public Iterator<K> iterator() : 3

Classe : org.apache.commons.collections4.map.Flat3Map.KeySetIterator
Method number 2236 : public K next() : 1

Classe : org.apache.commons.collections4.map.Flat3Map.Values
Method number 2237 : public int size() : 1
Method number 2238 : public void clear() : 1
Method number 2239 : public boolean contains(final Object value) : 1
Method number 2240 : public Iterator<V> iterator() : 3

Classe : org.apache.commons.collections4.map.Flat3Map.ValuesIterator
Method number 2241 : public V next() : 1

========================================
Fichier : map\HashedMap.java
========================================

Classe : org.apache.commons.collections4.map.HashedMap
Method number 2242 : public HashedMap<K, V> clone() : 1
Method number 2243 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2244 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : map\LazyMap.java
========================================

Classe : org.apache.commons.collections4.map.LazyMap
Method number 2245 : public static LazyMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory) : 1
Method number 2246 : public static LazyMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> factory) : 1
Method number 2247 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2248 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2249 : public V get(final Object key) : 2

========================================
Fichier : map\LazySortedMap.java
========================================

Classe : org.apache.commons.collections4.map.LazySortedMap
Method number 2250 : public static LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory) : 1
Method number 2251 : public static LazySortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> factory) : 1
Method number 2252 : protected SortedMap<K, V> getSortedMap() : 1
Method number 2253 : public K firstKey() : 1
Method number 2254 : public K lastKey() : 1
Method number 2255 : public Comparator<? super K> comparator() : 1
Method number 2256 : public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
Method number 2257 : public SortedMap<K, V> headMap(final K toKey) : 1
Method number 2258 : public SortedMap<K, V> tailMap(final K fromKey) : 1

========================================
Fichier : map\LinkedMap.java
========================================

Classe : org.apache.commons.collections4.map.LinkedMap
Method number 2259 : public LinkedMap<K, V> clone() : 1
Method number 2260 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2261 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2262 : public K get(final int index) : 1
Method number 2263 : public V getValue(final int index) : 1
Method number 2264 : public int indexOf(Object key) : 3
Method number 2265 : public V remove(final int index) : 1
Method number 2266 : public List<K> asList() : 1

Classe : org.apache.commons.collections4.map.LinkedMap.LinkedMapList
Method number 2267 : public int size() : 1
Method number 2268 : public K get(final int index) : 1
Method number 2269 : public boolean contains(final Object obj) : 1
Method number 2270 : public int indexOf(final Object obj) : 1
Method number 2271 : public int lastIndexOf(final Object obj) : 1
Method number 2272 : public boolean containsAll(final Collection<?> coll) : 1
Method number 2273 : public K remove(final int index) : 1
Method number 2274 : public boolean remove(final Object obj) : 1
Method number 2275 : public boolean removeIf(final Predicate<? super K> filter) : 1
Method number 2276 : public boolean removeAll(final Collection<?> coll) : 1
Method number 2277 : public boolean retainAll(final Collection<?> coll) : 1
Method number 2278 : public void clear() : 1
Method number 2279 : public Object[] toArray() : 1
Method number 2280 : public T[] toArray(final T[] array) : 1
Method number 2281 : public Iterator<K> iterator() : 1
Method number 2282 : public ListIterator<K> listIterator() : 1
Method number 2283 : public ListIterator<K> listIterator(final int fromIndex) : 1
Method number 2284 : public List<K> subList(final int fromIndexInclusive, final int toIndexExclusive) : 1

========================================
Fichier : map\ListOrderedMap.java
========================================

Classe : org.apache.commons.collections4.map.ListOrderedMap
Method number 2285 : public static ListOrderedMap<K, V> listOrderedMap(final Map<K, V> map) : 1
Method number 2286 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2287 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2288 : public OrderedMapIterator<K, V> mapIterator() : 1
Method number 2289 : public K firstKey() : 2
Method number 2290 : public K lastKey() : 2
Method number 2291 : public K nextKey(final Object key) : 2
Method number 2292 : public K previousKey(final Object key) : 2
Method number 2293 : public V put(final K key, final V value) : 2
Method number 2294 : public void putAll(final Map<? extends K, ? extends V> map) : 2
Method number 2295 : public void putAll(int index, final Map<? extends K, ? extends V> map) : 4
Method number 2296 : public V remove(final Object key) : 2
Method number 2297 : public void clear() : 1
Method number 2298 : public Set<K> keySet() : 1
Method number 2299 : public List<K> keyList() : 1
Method number 2300 : public Collection<V> values() : 1
Method number 2301 : public List<V> valueList() : 1
Method number 2302 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 2303 : public String toString() : 4
Method number 2304 : public K get(final int index) : 1
Method number 2305 : public V getValue(final int index) : 1
Method number 2306 : public int indexOf(final Object key) : 1
Method number 2307 : public V setValue(final int index, final V value) : 1
Method number 2308 : public V put(int index, final K key, final V value) : 4
Method number 2309 : public V remove(final int index) : 1
Method number 2310 : public List<K> asList() : 1

Classe : org.apache.commons.collections4.map.ListOrderedMap.ValuesView
Method number 2311 : public int size() : 1
Method number 2312 : public boolean contains(final Object value) : 1
Method number 2313 : public void clear() : 1
Method number 2314 : public Iterator<V> iterator() : 1
Method number 2315 : public V get(final int index) : 1
Method number 2316 : public V set(final int index, final V value) : 1
Method number 2317 : public V remove(final int index) : 1

Classe : org.apache.commons.collections4.map.ListOrderedMap.KeySetView
Method number 2318 : public int size() : 1
Method number 2319 : public boolean contains(final Object value) : 1
Method number 2320 : public void clear() : 1
Method number 2321 : public Iterator<K> iterator() : 1

Classe : org.apache.commons.collections4.map.ListOrderedMap.EntrySetView
Method number 2322 : private Set<Map.Entry<K, V>> getEntrySet() : 2
Method number 2323 : public int size() : 1
Method number 2324 : public boolean isEmpty() : 1
Method number 2325 : public boolean contains(final Object obj) : 1
Method number 2326 : public boolean containsAll(final Collection<?> coll) : 1
Method number 2327 : public boolean remove(final Object obj) : 3
Method number 2328 : public void clear() : 1
Method number 2329 : public boolean equals(final Object obj) : 2
Method number 2330 : public int hashCode() : 1
Method number 2331 : public String toString() : 1
Method number 2332 : public Iterator<Map.Entry<K, V>> iterator() : 1

Classe : org.apache.commons.collections4.map.ListOrderedMap.ListOrderedIterator
Method number 2333 : public Map.Entry<K, V> next() : 1
Method number 2334 : public void remove() : 1

Classe : org.apache.commons.collections4.map.ListOrderedMap.ListOrderedMapEntry
Method number 2335 : public V getValue() : 1
Method number 2336 : public V setValue(final V value) : 1

Classe : org.apache.commons.collections4.map.ListOrderedMap.ListOrderedMapIterator
Method number 2337 : public boolean hasNext() : 1
Method number 2338 : public K next() : 1
Method number 2339 : public boolean hasPrevious() : 1
Method number 2340 : public K previous() : 1
Method number 2341 : public void remove() : 2
Method number 2342 : public K getKey() : 2
Method number 2343 : public V getValue() : 2
Method number 2344 : public V setValue(final V value) : 2
Method number 2345 : public void reset() : 1
Method number 2346 : public String toString() : 2

========================================
Fichier : map\LRUMap.java
========================================

Classe : org.apache.commons.collections4.map.LRUMap
Method number 2347 : public V get(final Object key) : 1
Method number 2348 : public V get(final Object key, final boolean updateToMRU) : 3
Method number 2349 : protected void moveToMRU(final LinkEntry<K, V> entry) : 3
Method number 2350 : protected void updateEntry(final HashEntry<K, V> entry, final V newValue) : 1
Method number 2351 : protected void addMapping(final int hashIndex, final int hashCode, final K key, final V value) : 8
Method number 2352 : protected void reuseMapping(final LinkEntry<K, V> entry, final int hashIndex, final int hashCode, final K key, final V value) : 1
Method number 2353 : protected boolean removeLRU(final LinkEntry<K, V> entry) : 1
Method number 2354 : public boolean isFull() : 1
Method number 2355 : public int maxSize() : 1
Method number 2356 : public boolean isScanUntilRemovable() : 1
Method number 2357 : public LRUMap<K, V> clone() : 1
Method number 2358 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2359 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2360 : protected void doWriteObject(final ObjectOutputStream out) throws IOException : 1
Method number 2361 : protected void doReadObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : map\MultiKeyMap.java
========================================

Classe : org.apache.commons.collections4.map.MultiKeyMap
Method number 2362 : public static MultiKeyMap<K, V> multiKeyMap(final AbstractHashedMap<MultiKey<? extends K>, V> map) : 2
Method number 2363 : public V get(final Object key1, final Object key2) : 3
Method number 2364 : public boolean containsKey(final Object key1, final Object key2) : 3
Method number 2365 : public V put(final K key1, final K key2, final V value) : 3
Method number 2366 : public V removeMultiKey(final Object key1, final Object key2) : 3
Method number 2367 : protected int hash(final Object key1, final Object key2) : 3
Method number 2368 : protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry, final Object key1, final Object key2) : 1
Method number 2369 : public V get(final Object key1, final Object key2, final Object key3) : 3
Method number 2370 : public boolean containsKey(final Object key1, final Object key2, final Object key3) : 3
Method number 2371 : public V put(final K key1, final K key2, final K key3, final V value) : 3
Method number 2372 : public V removeMultiKey(final Object key1, final Object key2, final Object key3) : 3
Method number 2373 : protected int hash(final Object key1, final Object key2, final Object key3) : 4
Method number 2374 : protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry, final Object key1, final Object key2, final Object key3) : 1
Method number 2375 : public V get(final Object key1, final Object key2, final Object key3, final Object key4) : 3
Method number 2376 : public boolean containsKey(final Object key1, final Object key2, final Object key3, final Object key4) : 3
Method number 2377 : public V put(final K key1, final K key2, final K key3, final K key4, final V value) : 3
Method number 2378 : public V removeMultiKey(final Object key1, final Object key2, final Object key3, final Object key4) : 3
Method number 2379 : protected int hash(final Object key1, final Object key2, final Object key3, final Object key4) : 5
Method number 2380 : protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry, final Object key1, final Object key2, final Object key3, final Object key4) : 1
Method number 2381 : public V get(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) : 3
Method number 2382 : public boolean containsKey(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) : 3
Method number 2383 : public V put(final K key1, final K key2, final K key3, final K key4, final K key5, final V value) : 3
Method number 2384 : public V removeMultiKey(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) : 3
Method number 2385 : protected int hash(final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) : 6
Method number 2386 : protected boolean isEqualKey(final AbstractHashedMap.HashEntry<MultiKey<? extends K>, V> entry, final Object key1, final Object key2, final Object key3, final Object key4, final Object key5) : 1
Method number 2387 : public boolean removeAll(final Object key1) : 3
Method number 2388 : public boolean removeAll(final Object key1, final Object key2) : 3
Method number 2389 : public boolean removeAll(final Object key1, final Object key2, final Object key3) : 3
Method number 2390 : public boolean removeAll(final Object key1, final Object key2, final Object key3, final Object key4) : 3
Method number 2391 : protected void checkKey(final MultiKey<?> key) : 1
Method number 2392 : public MultiKeyMap<K, V> clone() : 1
Method number 2393 : public V put(final MultiKey<? extends K> key, final V value) : 1
Method number 2394 : public void putAll(final Map<? extends MultiKey<? extends K>, ? extends V> mapToCopy) : 2
Method number 2395 : public MapIterator<MultiKey<? extends K>, V> mapIterator() : 1
Method number 2396 : protected AbstractHashedMap<MultiKey<? extends K>, V> decorated() : 1
Method number 2397 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2398 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : map\MultiValueMap.java
========================================

Classe : org.apache.commons.collections4.map.MultiValueMap
Method number 2399 : public static MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map) : 1
Method number 2400 : public static MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Class<C> collectionClass) : 1
Method number 2401 : public static MultiValueMap<K, V> multiValueMap(final Map<K, ? super C> map, final Factory<C> collectionFactory) : 1
Method number 2402 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2403 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2404 : public void clear() : 1
Method number 2405 : public boolean removeMapping(final Object key, final Object value) : 4
Method number 2406 : public boolean containsValue(final Object value) : 4
Method number 2407 : public Object put(final K key, final Object value) : 3
Method number 2408 : public void putAll(final Map<? extends K, ?> map) : 4
Method number 2409 : public Set<Entry<K, Object>> entrySet() : 1
Method number 2410 : public Collection<Object> values() : 1
Method number 2411 : public boolean containsValue(final Object key, final Object value) : 2
Method number 2412 : public Collection<V> getCollection(final Object key) : 1
Method number 2413 : public int size(final Object key) : 2
Method number 2414 : public boolean putAll(final K key, final Collection<V> values) : 4
Method number 2415 : public Iterator<V> iterator(final Object key) : 2
Method number 2416 : public Iterator<Entry<K, V>> iterator() : 1
Method number 2417 : public int totalSize() : 2
Method number 2418 : protected Collection<V> createCollection(final int size) : 1

Classe : org.apache.commons.collections4.map.MultiValueMap.Values
Method number 2419 : public Iterator<V> iterator() : 2
Method number 2420 : public int size() : 1
Method number 2421 : public void clear() : 1

Classe : org.apache.commons.collections4.map.MultiValueMap.ValuesIterator
Method number 2422 : public void remove() : 2
Method number 2423 : public boolean hasNext() : 1
Method number 2424 : public V next() : 1

Classe : org.apache.commons.collections4.map.MultiValueMap.ReflectionFactory
Method number 2425 : public T create() : 1
Method number 2426 : private void readObject(final ObjectInputStream is) throws IOException, ClassNotFoundException : 2

========================================
Fichier : map\package-info.java
========================================

========================================
Fichier : map\PassiveExpiringMap.java
========================================

Classe : org.apache.commons.collections4.map.PassiveExpiringMap
Method number 2427 : private static long validateAndConvertToMillis(final long timeToLive, final TimeUnit timeUnit) : 1
Method number 2428 : public void clear() : 1
Method number 2429 : public boolean containsKey(final Object key) : 1
Method number 2430 : public boolean containsValue(final Object value) : 1
Method number 2431 : public Set<Entry<K, V>> entrySet() : 1
Method number 2432 : public V get(final Object key) : 1
Method number 2433 : public boolean isEmpty() : 1
Method number 2434 : private boolean isExpired(final long now, final Long expirationTimeObject) : 2
Method number 2435 : public Set<K> keySet() : 1
Method number 2436 : private long now() : 1
Method number 2437 : public V put(final K key, final V value) : 1
Method number 2438 : public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 2
Method number 2439 : public V remove(final Object key) : 1
Method number 2440 : private void removeAllExpired(final long nowMillis) : 3
Method number 2441 : private void removeIfExpired(final Object key, final long nowMillis) : 2
Method number 2442 : public int size() : 1
Method number 2443 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2444 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2445 : public Collection<V> values() : 1

Classe : org.apache.commons.collections4.map.PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy
Method number 2446 : public long expirationTime(final K key, final V value) : 3

Classe : org.apache.commons.collections4.map.PassiveExpiringMap.ExpirationPolicy
Method number 2447 :  long expirationTime(K key, V value) : 1

========================================
Fichier : map\PredicatedMap.java
========================================

Classe : org.apache.commons.collections4.map.PredicatedMap
Method number 2448 : public static PredicatedMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate) : 1
Method number 2449 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2450 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2451 : protected void validate(final K key, final V value) : 3
Method number 2452 : protected V checkSetValue(final V value) : 2
Method number 2453 : protected boolean isSetValueChecking() : 1
Method number 2454 : public V put(final K key, final V value) : 1
Method number 2455 : public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 2

========================================
Fichier : map\PredicatedSortedMap.java
========================================

Classe : org.apache.commons.collections4.map.PredicatedSortedMap
Method number 2456 : public static PredicatedSortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPredicate, final Predicate<? super V> valuePredicate) : 1
Method number 2457 : protected SortedMap<K, V> getSortedMap() : 1
Method number 2458 : public K firstKey() : 1
Method number 2459 : public K lastKey() : 1
Method number 2460 : public Comparator<? super K> comparator() : 1
Method number 2461 : public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
Method number 2462 : public SortedMap<K, V> headMap(final K toKey) : 1
Method number 2463 : public SortedMap<K, V> tailMap(final K fromKey) : 1

========================================
Fichier : map\ReferenceIdentityMap.java
========================================

Classe : org.apache.commons.collections4.map.ReferenceIdentityMap
Method number 2464 : protected int hash(final Object key) : 1
Method number 2465 : protected int hashEntry(final Object key, final Object value) : 1
Method number 2466 : protected boolean isEqualKey(final Object key1, Object key2) : 1
Method number 2467 : protected boolean isEqualValue(final Object value1, final Object value2) : 1
Method number 2468 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2469 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : map\ReferenceMap.java
========================================

Classe : org.apache.commons.collections4.map.ReferenceMap
Method number 2470 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2471 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : map\SingletonMap.java
========================================

Classe : org.apache.commons.collections4.map.SingletonMap
Method number 2472 : public K getKey() : 1
Method number 2473 : public V getValue() : 1
Method number 2474 : public V setValue(final V value) : 1
Method number 2475 : public boolean isFull() : 1
Method number 2476 : public int maxSize() : 1
Method number 2477 : public V get(final Object key) : 2
Method number 2478 : public int size() : 1
Method number 2479 : public boolean isEmpty() : 1
Method number 2480 : public boolean containsKey(final Object key) : 1
Method number 2481 : public boolean containsValue(final Object value) : 1
Method number 2482 : public V put(final K key, final V value) : 2
Method number 2483 : public void putAll(final Map<? extends K, ? extends V> map) : 1
Method number 2484 : public V remove(final Object key) : 1
Method number 2485 : public void clear() : 1
Method number 2486 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 2487 : public Set<K> keySet() : 1
Method number 2488 : public Collection<V> values() : 1
Method number 2489 : public OrderedMapIterator<K, V> mapIterator() : 1
Method number 2490 : public K firstKey() : 1
Method number 2491 : public K lastKey() : 1
Method number 2492 : public K nextKey(final K key) : 1
Method number 2493 : public K previousKey(final K key) : 1
Method number 2494 : protected boolean isEqualKey(final Object key) : 1
Method number 2495 : protected boolean isEqualValue(final Object value) : 1
Method number 2496 : public SingletonMap<K, V> clone() : 1
Method number 2497 : public boolean equals(final Object obj) : 4
Method number 2498 : public int hashCode() : 1
Method number 2499 : public String toString() : 1

Classe : org.apache.commons.collections4.map.SingletonMap.SingletonMapIterator
Method number 2500 : public boolean hasNext() : 1
Method number 2501 : public K next() : 2
Method number 2502 : public boolean hasPrevious() : 1
Method number 2503 : public K previous() : 2
Method number 2504 : public void remove() : 1
Method number 2505 : public K getKey() : 2
Method number 2506 : public V getValue() : 2
Method number 2507 : public V setValue(final V value) : 2
Method number 2508 : public void reset() : 1
Method number 2509 : public String toString() : 2

Classe : org.apache.commons.collections4.map.SingletonMap.SingletonValues
Method number 2510 : public int size() : 1
Method number 2511 : public boolean isEmpty() : 1
Method number 2512 : public boolean contains(final Object object) : 1
Method number 2513 : public void clear() : 1
Method number 2514 : public Iterator<V> iterator() : 1

========================================
Fichier : map\StaticBucketMap.java
========================================

Classe : org.apache.commons.collections4.map.StaticBucketMap
Method number 2515 : private int getHash(final Object key) : 2
Method number 2516 : public int size() : 2
Method number 2517 : public boolean isEmpty() : 1
Method number 2518 : public V get(final Object key) : 1
Method number 2519 : public boolean containsKey(final Object key) : 1
Method number 2520 : public boolean containsValue(final Object value) : 2
Method number 2521 : public V put(final K key, final V value) : 1
Method number 2522 : public V remove(final Object key) : 1
Method number 2523 : public Set<K> keySet() : 1
Method number 2524 : public Collection<V> values() : 1
Method number 2525 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 2526 : public void putAll(final Map<? extends K, ? extends V> map) : 2
Method number 2527 : public void clear() : 2
Method number 2528 : public boolean equals(final Object obj) : 3
Method number 2529 : public int hashCode() : 2
Method number 2530 : public void atomic(final Runnable runnable) : 1
Method number 2531 : private void atomic(final Runnable r, final int bucket) : 2

Classe : org.apache.commons.collections4.map.StaticBucketMap.Node
Method number 2532 : public K getKey() : 1
Method number 2533 : public V getValue() : 1
Method number 2534 : public int hashCode() : 1
Method number 2535 : public boolean equals(final Object obj) : 3
Method number 2536 : public V setValue(final V obj) : 1

Classe : org.apache.commons.collections4.map.StaticBucketMap.Lock

Classe : org.apache.commons.collections4.map.StaticBucketMap.BaseIterator
Method number 2537 : public boolean hasNext() : 3
Method number 2538 : protected Map.Entry<K, V> nextEntry() : 2
Method number 2539 : public void remove() : 2

Classe : org.apache.commons.collections4.map.StaticBucketMap.EntryIterator
Method number 2540 : public Map.Entry<K, V> next() : 1

Classe : org.apache.commons.collections4.map.StaticBucketMap.ValueIterator
Method number 2541 : public V next() : 1

Classe : org.apache.commons.collections4.map.StaticBucketMap.KeyIterator
Method number 2542 : public K next() : 1

Classe : org.apache.commons.collections4.map.StaticBucketMap.EntrySet
Method number 2543 : public int size() : 1
Method number 2544 : public void clear() : 1
Method number 2545 : public Iterator<Map.Entry<K, V>> iterator() : 1
Method number 2546 : public boolean contains(final Object obj) : 1
Method number 2547 : public boolean remove(final Object obj) : 2

Classe : org.apache.commons.collections4.map.StaticBucketMap.KeySet
Method number 2548 : public int size() : 1
Method number 2549 : public void clear() : 1
Method number 2550 : public Iterator<K> iterator() : 1
Method number 2551 : public boolean contains(final Object obj) : 1
Method number 2552 : public boolean remove(final Object obj) : 1

Classe : org.apache.commons.collections4.map.StaticBucketMap.Values
Method number 2553 : public int size() : 1
Method number 2554 : public void clear() : 1
Method number 2555 : public Iterator<V> iterator() : 1

========================================
Fichier : map\TransformedMap.java
========================================

Classe : org.apache.commons.collections4.map.TransformedMap
Method number 2556 : public static TransformedMap<K, V> transformingMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 1
Method number 2557 : public static TransformedMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 2
Method number 2558 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2559 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2560 : protected K transformKey(final K object) : 2
Method number 2561 : protected V transformValue(final V object) : 2
Method number 2562 : protected Map<K, V> transformMap(final Map<? extends K, ? extends V> map) : 3
Method number 2563 : protected V checkSetValue(final V value) : 1
Method number 2564 : protected boolean isSetValueChecking() : 1
Method number 2565 : public V put(K key, V value) : 1
Method number 2566 : public void putAll(Map<? extends K, ? extends V> mapToCopy) : 1

========================================
Fichier : map\TransformedSortedMap.java
========================================

Classe : org.apache.commons.collections4.map.TransformedSortedMap
Method number 2567 : public static TransformedSortedMap<K, V> transformingSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 1
Method number 2568 : public static TransformedSortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 2
Method number 2569 : protected SortedMap<K, V> getSortedMap() : 1
Method number 2570 : public K firstKey() : 1
Method number 2571 : public K lastKey() : 1
Method number 2572 : public Comparator<? super K> comparator() : 1
Method number 2573 : public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
Method number 2574 : public SortedMap<K, V> headMap(final K toKey) : 1
Method number 2575 : public SortedMap<K, V> tailMap(final K fromKey) : 1

========================================
Fichier : map\UnmodifiableEntrySet.java
========================================

Classe : org.apache.commons.collections4.map.UnmodifiableEntrySet
Method number 2576 : public static Set<Map.Entry<K, V>> unmodifiableEntrySet(final Set<Map.Entry<K, V>> set) : 2
Method number 2577 : public boolean add(final Map.Entry<K, V> object) : 1
Method number 2578 : public boolean addAll(final Collection<? extends Map.Entry<K, V>> coll) : 1
Method number 2579 : public void clear() : 1
Method number 2580 : public boolean remove(final Object object) : 1
Method number 2581 : public boolean removeIf(final Predicate<? super Map.Entry<K, V>> filter) : 1
Method number 2582 : public boolean removeAll(final Collection<?> coll) : 1
Method number 2583 : public boolean retainAll(final Collection<?> coll) : 1
Method number 2584 : public Iterator<Map.Entry<K, V>> iterator() : 1
Method number 2585 : public Object[] toArray() : 2
Method number 2586 : public T[] toArray(final T[] array) : 5

Classe : org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntrySetIterator
Method number 2587 : public Map.Entry<K, V> next() : 1
Method number 2588 : public void remove() : 1

Classe : org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry
Method number 2589 : public V setValue(final V obj) : 1

========================================
Fichier : map\UnmodifiableMap.java
========================================

Classe : org.apache.commons.collections4.map.UnmodifiableMap
Method number 2590 : public static Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map) : 2
Method number 2591 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2592 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2593 : public void clear() : 1
Method number 2594 : public V put(final K key, final V value) : 1
Method number 2595 : public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
Method number 2596 : public V remove(final Object key) : 1
Method number 2597 : public MapIterator<K, V> mapIterator() : 2
Method number 2598 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 2599 : public Set<K> keySet() : 1
Method number 2600 : public Collection<V> values() : 1

========================================
Fichier : map\UnmodifiableOrderedMap.java
========================================

Classe : org.apache.commons.collections4.map.UnmodifiableOrderedMap
Method number 2601 : public static OrderedMap<K, V> unmodifiableOrderedMap(final OrderedMap<? extends K, ? extends V> map) : 2
Method number 2602 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2603 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2604 : public OrderedMapIterator<K, V> mapIterator() : 1
Method number 2605 : public void clear() : 1
Method number 2606 : public V put(final K key, final V value) : 1
Method number 2607 : public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
Method number 2608 : public V remove(final Object key) : 1
Method number 2609 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 2610 : public Set<K> keySet() : 1
Method number 2611 : public Collection<V> values() : 1

========================================
Fichier : map\UnmodifiableSortedMap.java
========================================

Classe : org.apache.commons.collections4.map.UnmodifiableSortedMap
Method number 2612 : public static SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map) : 2
Method number 2613 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2614 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 2615 : public void clear() : 1
Method number 2616 : public V put(final K key, final V value) : 1
Method number 2617 : public void putAll(final Map<? extends K, ? extends V> mapToCopy) : 1
Method number 2618 : public V remove(final Object key) : 1
Method number 2619 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 2620 : public Set<K> keySet() : 1
Method number 2621 : public Collection<V> values() : 1
Method number 2622 : public K firstKey() : 1
Method number 2623 : public K lastKey() : 1
Method number 2624 : public Comparator<? super K> comparator() : 1
Method number 2625 : public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
Method number 2626 : public SortedMap<K, V> headMap(final K toKey) : 1
Method number 2627 : public SortedMap<K, V> tailMap(final K fromKey) : 1

========================================
Fichier : MapIterator.java
========================================

Classe : org.apache.commons.collections4.MapIterator
Method number 2628 :  boolean hasNext() : 1
Method number 2629 :  K next() : 1
Method number 2630 :  K getKey() : 1
Method number 2631 :  V getValue() : 1
Method number 2632 :  void remove() : 1
Method number 2633 :  V setValue(V value) : 1

========================================
Fichier : MapUtils.java
========================================

Classe : org.apache.commons.collections4.MapUtils
Method number 2634 : private static R applyDefaultFunction(final Map<? super K, ?> map, final K key, final BiFunction<Map<? super K, ?>, K, R> getFunction, final Function<K, R> defaultFunction) : 1
Method number 2635 : private static R applyDefaultFunction(final Map<? super K, ?> map, final K key, final BiFunction<Map<? super K, ?>, K, R> getFunction, final Function<K, R> defaultFunction, final R defaultValue) : 2
Method number 2636 : private static R applyDefaultValue(final Map<? super K, ?> map, final K key, final BiFunction<Map<? super K, ?>, K, R> getFunction, final R defaultValue) : 1
Method number 2637 : public static void debugPrint(final PrintStream out, final Object label, final Map<?, ?> map) : 1
Method number 2638 : public static Map<K, V> emptyIfNull(final Map<K, V> map) : 1
Method number 2639 : public static IterableMap<K, V> fixedSizeMap(final Map<K, V> map) : 1
Method number 2640 : public static SortedMap<K, V> fixedSizeSortedMap(final SortedMap<K, V> map) : 1
Method number 2641 : public static Boolean getBoolean(final Map<? super K, ?> map, final K key) : 6
Method number 2642 : public static Boolean getBoolean(final Map<? super K, ?> map, final K key, final Boolean defaultValue) : 1
Method number 2643 : public static Boolean getBoolean(final Map<? super K, ?> map, final K key, final Function<K, Boolean> defaultFunction) : 1
Method number 2644 : public static boolean getBooleanValue(final Map<? super K, ?> map, final K key) : 1
Method number 2645 : public static boolean getBooleanValue(final Map<? super K, ?> map, final K key, final boolean defaultValue) : 1
Method number 2646 : public static boolean getBooleanValue(final Map<? super K, ?> map, final K key, final Function<K, Boolean> defaultFunction) : 1
Method number 2647 : public static Byte getByte(final Map<? super K, ?> map, final K key) : 3
Method number 2648 : public static Byte getByte(final Map<? super K, ?> map, final K key, final Byte defaultValue) : 1
Method number 2649 : public static Byte getByte(final Map<? super K, ?> map, final K key, final Function<K, Byte> defaultFunction) : 1
Method number 2650 : public static byte getByteValue(final Map<? super K, ?> map, final K key) : 1
Method number 2651 : public static byte getByteValue(final Map<? super K, ?> map, final K key, final byte defaultValue) : 1
Method number 2652 : public static byte getByteValue(final Map<? super K, ?> map, final K key, final Function<K, Byte> defaultFunction) : 1
Method number 2653 : public static Double getDouble(final Map<? super K, ?> map, final K key) : 3
Method number 2654 : public static Double getDouble(final Map<? super K, ?> map, final K key, final Double defaultValue) : 1
Method number 2655 : public static Double getDouble(final Map<? super K, ?> map, final K key, final Function<K, Double> defaultFunction) : 1
Method number 2656 : public static double getDoubleValue(final Map<? super K, ?> map, final K key) : 1
Method number 2657 : public static double getDoubleValue(final Map<? super K, ?> map, final K key, final double defaultValue) : 1
Method number 2658 : public static double getDoubleValue(final Map<? super K, ?> map, final K key, final Function<K, Double> defaultFunction) : 1
Method number 2659 : public static Float getFloat(final Map<? super K, ?> map, final K key) : 3
Method number 2660 : public static Float getFloat(final Map<? super K, ?> map, final K key, final Float defaultValue) : 1
Method number 2661 : public static Float getFloat(final Map<? super K, ?> map, final K key, final Function<K, Float> defaultFunction) : 1
Method number 2662 : public static float getFloatValue(final Map<? super K, ?> map, final K key) : 1
Method number 2663 : public static float getFloatValue(final Map<? super K, ?> map, final K key, final float defaultValue) : 1
Method number 2664 : public static float getFloatValue(final Map<? super K, ?> map, final K key, final Function<K, Float> defaultFunction) : 1
Method number 2665 : public static Integer getInteger(final Map<? super K, ?> map, final K key) : 3
Method number 2666 : public static Integer getInteger(final Map<? super K, ?> map, final K key, final Function<K, Integer> defaultFunction) : 1
Method number 2667 : public static Integer getInteger(final Map<? super K, ?> map, final K key, final Integer defaultValue) : 1
Method number 2668 : public static int getIntValue(final Map<? super K, ?> map, final K key) : 1
Method number 2669 : public static int getIntValue(final Map<? super K, ?> map, final K key, final Function<K, Integer> defaultFunction) : 1
Method number 2670 : public static int getIntValue(final Map<? super K, ?> map, final K key, final int defaultValue) : 1
Method number 2671 : public static Long getLong(final Map<? super K, ?> map, final K key) : 3
Method number 2672 : public static Long getLong(final Map<? super K, ?> map, final K key, final Function<K, Long> defaultFunction) : 1
Method number 2673 : public static Long getLong(final Map<? super K, ?> map, final K key, final Long defaultValue) : 1
Method number 2674 : public static long getLongValue(final Map<? super K, ?> map, final K key) : 1
Method number 2675 : public static long getLongValue(final Map<? super K, ?> map, final K key, final Function<K, Long> defaultFunction) : 1
Method number 2676 : public static long getLongValue(final Map<? super K, ?> map, final K key, final long defaultValue) : 1
Method number 2677 : public static Map<?, ?> getMap(final Map<? super K, ?> map, final K key) : 3
Method number 2678 : public static Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Function<K, Map<?, ?>> defaultFunction) : 1
Method number 2679 : public static Map<?, ?> getMap(final Map<? super K, ?> map, final K key, final Map<?, ?> defaultValue) : 1
Method number 2680 : public static Number getNumber(final Map<? super K, ?> map, final K key) : 5
Method number 2681 : public static Number getNumber(final Map<? super K, ?> map, final K key, final Function<K, Number> defaultFunction) : 1
Method number 2682 : public static Number getNumber(final Map<? super K, ?> map, final K key, final Number defaultValue) : 1
Method number 2683 : public static V getObject(final Map<? super K, V> map, final K key) : 2
Method number 2684 : public static V getObject(final Map<K, V> map, final K key, final V defaultValue) : 3
Method number 2685 : public static Short getShort(final Map<? super K, ?> map, final K key) : 3
Method number 2686 : public static Short getShort(final Map<? super K, ?> map, final K key, final Function<K, Short> defaultFunction) : 1
Method number 2687 : public static Short getShort(final Map<? super K, ?> map, final K key, final Short defaultValue) : 1
Method number 2688 : public static short getShortValue(final Map<? super K, ?> map, final K key) : 1
Method number 2689 : public static short getShortValue(final Map<? super K, ?> map, final K key, final Function<K, Short> defaultFunction) : 1
Method number 2690 : public static short getShortValue(final Map<? super K, ?> map, final K key, final short defaultValue) : 1
Method number 2691 : public static String getString(final Map<? super K, ?> map, final K key) : 3
Method number 2692 : public static String getString(final Map<? super K, ?> map, final K key, final Function<K, String> defaultFunction) : 1
Method number 2693 : public static String getString(final Map<? super K, ?> map, final K key, final String defaultValue) : 1
Method number 2694 : public static Map<V, K> invertMap(final Map<K, V> map) : 2
Method number 2695 : public static boolean isEmpty(final Map<?, ?> map) : 1
Method number 2696 : public static boolean isNotEmpty(final Map<?, ?> map) : 1
Method number 2697 : public static IterableMap<K, V> iterableMap(final Map<K, V> map) : 1
Method number 2698 : public static IterableSortedMap<K, V> iterableSortedMap(final SortedMap<K, V> sortedMap) : 1
Method number 2699 : public static IterableMap<K, V> lazyMap(final Map<K, V> map, final Factory<? extends V> factory) : 1
Method number 2700 : public static IterableMap<K, V> lazyMap(final Map<K, V> map, final Transformer<? super K, ? extends V> transformerFactory) : 1
Method number 2701 : public static SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Factory<? extends V> factory) : 1
Method number 2702 : public static SortedMap<K, V> lazySortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends V> transformerFactory) : 1
Method number 2703 : public static MultiValueMap<K, V> multiValueMap(final Map<K, ? super Collection<V>> map) : 1
Method number 2704 : public static MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Class<C> collectionClass) : 1
Method number 2705 : public static MultiValueMap<K, V> multiValueMap(final Map<K, C> map, final Factory<C> collectionFactory) : 1
Method number 2706 : public static OrderedMap<K, V> orderedMap(final Map<K, V> map) : 1
Method number 2707 : public static void populateMap(final Map<K, V> map, final Iterable<? extends E> elements, final Transformer<E, K> keyTransformer, final Transformer<E, V> valueTransformer) : 2
Method number 2708 : public static void populateMap(final Map<K, V> map, final Iterable<? extends V> elements, final Transformer<V, K> keyTransformer) : 1
Method number 2709 : public static void populateMap(final MultiMap<K, V> map, final Iterable<? extends E> elements, final Transformer<E, K> keyTransformer, final Transformer<E, V> valueTransformer) : 2
Method number 2710 : public static void populateMap(final MultiMap<K, V> map, final Iterable<? extends V> elements, final Transformer<V, K> keyTransformer) : 1
Method number 2711 : public static IterableMap<K, V> predicatedMap(final Map<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred) : 1
Method number 2712 : public static SortedMap<K, V> predicatedSortedMap(final SortedMap<K, V> map, final Predicate<? super K> keyPred, final Predicate<? super V> valuePred) : 1
Method number 2713 : private static void printIndent(final PrintStream out, final int indent) : 2
Method number 2714 : public static Map<K, V> putAll(final Map<K, V> map, final Object[] array) : 4
Method number 2715 : public static void safeAddToMap(final Map<? super K, Object> map, final K key, final Object value) throws NullPointerException : 1
Method number 2716 : public static int size(final Map<?, ?> map) : 1
Method number 2717 : public static Map<K, V> synchronizedMap(final Map<K, V> map) : 1
Method number 2718 : public static SortedMap<K, V> synchronizedSortedMap(final SortedMap<K, V> map) : 1
Method number 2719 : public static Map<String, Object> toMap(final ResourceBundle resourceBundle) : 2
Method number 2720 : public static Properties toProperties(final Map<K, V> map) : 3
Method number 2721 : public static IterableMap<K, V> transformedMap(final Map<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 1
Method number 2722 : public static SortedMap<K, V> transformedSortedMap(final SortedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 1
Method number 2723 : public static Map<K, V> unmodifiableMap(final Map<? extends K, ? extends V> map) : 1
Method number 2724 : public static SortedMap<K, V> unmodifiableSortedMap(final SortedMap<K, ? extends V> map) : 1
Method number 2725 : public static void verbosePrint(final PrintStream out, final Object label, final Map<?, ?> map) : 1
Method number 2726 : private static void verbosePrintInternal(final PrintStream out, final Object label, final Map<?, ?> map, final Deque<Map<?, ?>> lineage, final boolean debug) : 8

========================================
Fichier : multimap\AbstractListValuedMap.java
========================================

Classe : org.apache.commons.collections4.multimap.AbstractListValuedMap
Method number 2727 : protected Map<K, List<V>> getMap() : 1
Method number 2728 : protected abstract List<V> createCollection() : 1
Method number 2729 : public List<V> get(final K key) : 1
Method number 2730 :  List<V> wrappedCollection(final K key) : 1
Method number 2731 : public List<V> remove(final Object key) : 1

Classe : org.apache.commons.collections4.multimap.AbstractListValuedMap.WrappedList
Method number 2732 : protected List<V> getMapping() : 1
Method number 2733 : public void add(final int index, final V value) : 2
Method number 2734 : public boolean addAll(final int index, final Collection<? extends V> c) : 3
Method number 2735 : public V get(final int index) : 1
Method number 2736 : public int indexOf(final Object o) : 1
Method number 2737 : public int lastIndexOf(final Object o) : 1
Method number 2738 : public ListIterator<V> listIterator() : 1
Method number 2739 : public ListIterator<V> listIterator(final int index) : 1
Method number 2740 : public V remove(final int index) : 2
Method number 2741 : public V set(final int index, final V value) : 1
Method number 2742 : public List<V> subList(final int fromIndex, final int toIndex) : 1
Method number 2743 : public boolean equals(final Object other) : 3
Method number 2744 : public int hashCode() : 1

Classe : org.apache.commons.collections4.multimap.AbstractListValuedMap.ValuesListIterator
Method number 2745 : public void add(final V value) : 2
Method number 2746 : public boolean hasNext() : 1
Method number 2747 : public boolean hasPrevious() : 1
Method number 2748 : public V next() : 1
Method number 2749 : public int nextIndex() : 1
Method number 2750 : public V previous() : 1
Method number 2751 : public int previousIndex() : 1
Method number 2752 : public void remove() : 2
Method number 2753 : public void set(final V value) : 1

========================================
Fichier : multimap\AbstractMultiValuedMap.java
========================================

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap
Method number 2754 : protected Map<K, ? extends Collection<V>> getMap() : 1
Method number 2755 : protected void setMap(final Map<K, ? extends Collection<V>> map) : 1
Method number 2756 : protected abstract Collection<V> createCollection() : 1
Method number 2757 : public boolean containsKey(final Object key) : 1
Method number 2758 : public boolean containsValue(final Object value) : 1
Method number 2759 : public boolean containsMapping(final Object key, final Object value) : 1
Method number 2760 : public Collection<Entry<K, V>> entries() : 1
Method number 2761 : public Collection<V> get(final K key) : 1
Method number 2762 :  Collection<V> wrappedCollection(final K key) : 1
Method number 2763 : public Collection<V> remove(final Object key) : 1
Method number 2764 : public boolean removeMapping(final Object key, final Object value) : 3
Method number 2765 : public boolean isEmpty() : 1
Method number 2766 : public Set<K> keySet() : 1
Method number 2767 : public int size() : 2
Method number 2768 : public Collection<V> values() : 1
Method number 2769 : public void clear() : 1
Method number 2770 : public boolean put(final K key, final V value) : 3
Method number 2771 : public boolean putAll(final Map<? extends K, ? extends V> map) : 2
Method number 2772 : public boolean putAll(final MultiValuedMap<? extends K, ? extends V> map) : 2
Method number 2773 : public MultiSet<K> keys() : 2
Method number 2774 : public Map<K, Collection<V>> asMap() : 1
Method number 2775 : public boolean putAll(final K key, final Iterable<? extends V> values) : 2
Method number 2776 : public MapIterator<K, V> mapIterator() : 2
Method number 2777 : public boolean equals(final Object obj) : 3
Method number 2778 : public int hashCode() : 1
Method number 2779 : public String toString() : 1
Method number 2780 : protected void doWriteObject(final ObjectOutputStream out) throws IOException : 3
Method number 2781 : protected void doReadObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 3

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.WrappedCollection
Method number 2782 : protected Collection<V> getMapping() : 1
Method number 2783 : public boolean add(final V value) : 2
Method number 2784 : public boolean addAll(final Collection<? extends V> other) : 2
Method number 2785 : public void clear() : 2
Method number 2786 : public Iterator<V> iterator() : 2
Method number 2787 : public int size() : 1
Method number 2788 : public boolean contains(final Object obj) : 1
Method number 2789 : public boolean containsAll(final Collection<?> other) : 1
Method number 2790 : public boolean isEmpty() : 1
Method number 2791 : public boolean remove(final Object item) : 3
Method number 2792 : public boolean removeAll(final Collection<?> c) : 3
Method number 2793 : public boolean retainAll(final Collection<?> c) : 3
Method number 2794 : public Object[] toArray() : 2
Method number 2795 : public T[] toArray(final T[] a) : 2
Method number 2796 : public String toString() : 2

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.KeysMultiSet
Method number 2797 : public boolean contains(final Object o) : 1
Method number 2798 : public boolean isEmpty() : 1
Method number 2799 : public int size() : 1
Method number 2800 : protected int uniqueElements() : 1
Method number 2801 : public int getCount(final Object object) : 2
Method number 2802 : protected Iterator<MultiSet.Entry<K>> createEntrySetIterator() : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.KeysMultiSet.MapEntryTransformer
Method number 2803 : public MultiSet.Entry<K> transform(final Map.Entry<K, Collection<V>> mapEntry) : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.EntryValues
Method number 2804 : public Iterator<Entry<K, V>> iterator() : 1
Method number 2805 : public int size() : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.MultiValuedMapEntry
Method number 2806 : public V setValue(final V value) : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.MultiValuedMapIterator
Method number 2807 : public boolean hasNext() : 1
Method number 2808 : public K next() : 1
Method number 2809 : public K getKey() : 2
Method number 2810 : public V getValue() : 2
Method number 2811 : public void remove() : 1
Method number 2812 : public V setValue(final V value) : 2

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.Values
Method number 2813 : public Iterator<V> iterator() : 2
Method number 2814 : public int size() : 1
Method number 2815 : public void clear() : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.ValuesIterator
Method number 2816 : public void remove() : 2
Method number 2817 : public boolean hasNext() : 1
Method number 2818 : public V next() : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.AsMap
Method number 2819 : public Set<Map.Entry<K, Collection<V>>> entrySet() : 1
Method number 2820 : public boolean containsKey(final Object key) : 1
Method number 2821 : public Collection<V> get(final Object key) : 2
Method number 2822 : public Set<K> keySet() : 1
Method number 2823 : public int size() : 1
Method number 2824 : public Collection<V> remove(final Object key) : 2
Method number 2825 : public boolean equals(final Object object) : 1
Method number 2826 : public int hashCode() : 1
Method number 2827 : public String toString() : 1
Method number 2828 : public void clear() : 1

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.AsMap.AsMapEntrySet
Method number 2829 : public Iterator<Map.Entry<K, Collection<V>>> iterator() : 1
Method number 2830 : public int size() : 1
Method number 2831 : public void clear() : 1
Method number 2832 : public boolean contains(final Object o) : 1
Method number 2833 : public boolean remove(final Object o) : 2

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMap.AsMap.AsMapEntrySetIterator
Method number 2834 : public Map.Entry<K, Collection<V>> next() : 1

========================================
Fichier : multimap\AbstractMultiValuedMapDecorator.java
========================================

Classe : org.apache.commons.collections4.multimap.AbstractMultiValuedMapDecorator
Method number 2835 : protected MultiValuedMap<K, V> decorated() : 1
Method number 2836 : public int size() : 1
Method number 2837 : public boolean isEmpty() : 1
Method number 2838 : public boolean containsKey(final Object key) : 1
Method number 2839 : public boolean containsValue(final Object value) : 1
Method number 2840 : public boolean containsMapping(final Object key, final Object value) : 1
Method number 2841 : public Collection<V> get(final K key) : 1
Method number 2842 : public Collection<V> remove(final Object key) : 1
Method number 2843 : public boolean removeMapping(final Object key, final Object item) : 1
Method number 2844 : public void clear() : 1
Method number 2845 : public boolean put(final K key, final V value) : 1
Method number 2846 : public Set<K> keySet() : 1
Method number 2847 : public Collection<Entry<K, V>> entries() : 1
Method number 2848 : public MultiSet<K> keys() : 1
Method number 2849 : public Collection<V> values() : 1
Method number 2850 : public Map<K, Collection<V>> asMap() : 1
Method number 2851 : public boolean putAll(final K key, final Iterable<? extends V> values) : 1
Method number 2852 : public boolean putAll(final Map<? extends K, ? extends V> map) : 1
Method number 2853 : public boolean putAll(final MultiValuedMap<? extends K, ? extends V> map) : 1
Method number 2854 : public MapIterator<K, V> mapIterator() : 1
Method number 2855 : public boolean equals(final Object object) : 2
Method number 2856 : public int hashCode() : 1
Method number 2857 : public String toString() : 1

========================================
Fichier : multimap\AbstractSetValuedMap.java
========================================

Classe : org.apache.commons.collections4.multimap.AbstractSetValuedMap
Method number 2858 : protected Map<K, Set<V>> getMap() : 1
Method number 2859 : protected abstract Set<V> createCollection() : 1
Method number 2860 : public Set<V> get(final K key) : 1
Method number 2861 :  Set<V> wrappedCollection(final K key) : 1
Method number 2862 : public Set<V> remove(final Object key) : 1

Classe : org.apache.commons.collections4.multimap.AbstractSetValuedMap.WrappedSet
Method number 2863 : public boolean equals(final Object other) : 3
Method number 2864 : public int hashCode() : 1

========================================
Fichier : multimap\ArrayListValuedHashMap.java
========================================

Classe : org.apache.commons.collections4.multimap.ArrayListValuedHashMap
Method number 2865 : protected ArrayList<V> createCollection() : 1
Method number 2866 : public void trimToSize() : 2
Method number 2867 : private void writeObject(final ObjectOutputStream oos) throws IOException : 1
Method number 2868 : private void readObject(final ObjectInputStream ois) throws IOException, ClassNotFoundException : 1

========================================
Fichier : multimap\HashSetValuedHashMap.java
========================================

Classe : org.apache.commons.collections4.multimap.HashSetValuedHashMap
Method number 2869 : protected HashSet<V> createCollection() : 1
Method number 2870 : private void writeObject(final ObjectOutputStream oos) throws IOException : 1
Method number 2871 : private void readObject(final ObjectInputStream ois) throws IOException, ClassNotFoundException : 1

========================================
Fichier : multimap\package-info.java
========================================

========================================
Fichier : multimap\TransformedMultiValuedMap.java
========================================

Classe : org.apache.commons.collections4.multimap.TransformedMultiValuedMap
Method number 2872 : public static TransformedMultiValuedMap<K, V> transformingMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 1
Method number 2873 : public static TransformedMultiValuedMap<K, V> transformedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 2
Method number 2874 : protected K transformKey(final K object) : 2
Method number 2875 : protected V transformValue(final V object) : 2
Method number 2876 : public boolean put(final K key, final V value) : 1
Method number 2877 : public boolean putAll(final K key, final Iterable<? extends V> values) : 1
Method number 2878 : public boolean putAll(final Map<? extends K, ? extends V> map) : 2
Method number 2879 : public boolean putAll(final MultiValuedMap<? extends K, ? extends V> map) : 2

========================================
Fichier : multimap\UnmodifiableMultiValuedMap.java
========================================

Classe : org.apache.commons.collections4.multimap.UnmodifiableMultiValuedMap
Method number 2880 : public static UnmodifiableMultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map) : 2
Method number 2881 : public Collection<V> remove(final Object key) : 1
Method number 2882 : public boolean removeMapping(final Object key, final Object item) : 1
Method number 2883 : public void clear() : 1
Method number 2884 : public Collection<V> get(final K key) : 1
Method number 2885 : public boolean put(final K key, final V value) : 1
Method number 2886 : public Set<K> keySet() : 1
Method number 2887 : public Collection<Entry<K, V>> entries() : 1
Method number 2888 : public MultiSet<K> keys() : 1
Method number 2889 : public Collection<V> values() : 1
Method number 2890 : public Map<K, Collection<V>> asMap() : 1
Method number 2891 : public MapIterator<K, V> mapIterator() : 1
Method number 2892 : public boolean putAll(final K key, final Iterable<? extends V> values) : 1
Method number 2893 : public boolean putAll(final Map<? extends K, ? extends V> map) : 1
Method number 2894 : public boolean putAll(final MultiValuedMap<? extends K, ? extends V> map) : 1

========================================
Fichier : MultiMap.java
========================================

Classe : org.apache.commons.collections4.MultiMap
Method number 2895 :  boolean removeMapping(K key, V item) : 1
Method number 2896 :  int size() : 1
Method number 2897 :  Object get(Object key) : 1
Method number 2898 :  boolean containsValue(Object value) : 1
Method number 2899 :  Object put(K key, Object value) : 1
Method number 2900 :  Object remove(Object key) : 1
Method number 2901 :  Collection<Object> values() : 1

========================================
Fichier : MultiMapUtils.java
========================================

Classe : org.apache.commons.collections4.MultiMapUtils
Method number 2902 : public static MultiValuedMap<K, V> emptyMultiValuedMap() : 1
Method number 2903 : public static MultiValuedMap<K, V> emptyIfNull(final MultiValuedMap<K, V> map) : 1
Method number 2904 : public static boolean isEmpty(final MultiValuedMap<?, ?> map) : 1
Method number 2905 : public static Collection<V> getCollection(final MultiValuedMap<K, V> map, final K key) : 2
Method number 2906 : public static List<V> getValuesAsList(final MultiValuedMap<K, V> map, final K key) : 3
Method number 2907 : public static Set<V> getValuesAsSet(final MultiValuedMap<K, V> map, final K key) : 3
Method number 2908 : public static Bag<V> getValuesAsBag(final MultiValuedMap<K, V> map, final K key) : 3
Method number 2909 : public static ListValuedMap<K, V> newListValuedHashMap() : 1
Method number 2910 : public static SetValuedMap<K, V> newSetValuedHashMap() : 1
Method number 2911 : public static MultiValuedMap<K, V> unmodifiableMultiValuedMap(final MultiValuedMap<? extends K, ? extends V> map) : 1
Method number 2912 : public static MultiValuedMap<K, V> transformedMultiValuedMap(final MultiValuedMap<K, V> map, final Transformer<? super K, ? extends K> keyTransformer, final Transformer<? super V, ? extends V> valueTransformer) : 1

========================================
Fichier : multiset\AbstractMapMultiSet.java
========================================

Classe : org.apache.commons.collections4.multiset.AbstractMapMultiSet
Method number 2913 : protected Map<E, MutableInteger> getMap() : 1
Method number 2914 : protected void setMap(final Map<E, MutableInteger> map) : 1
Method number 2915 : public int size() : 1
Method number 2916 : public boolean isEmpty() : 1
Method number 2917 : public int getCount(final Object object) : 2
Method number 2918 : public boolean contains(final Object object) : 1
Method number 2919 : public Iterator<E> iterator() : 1
Method number 2920 : public int add(final E object, final int occurrences) : 4
Method number 2921 : public void clear() : 1
Method number 2922 : public int remove(final Object object, final int occurrences) : 5
Method number 2923 : protected Iterator<E> createUniqueSetIterator() : 1
Method number 2924 : protected int uniqueElements() : 1
Method number 2925 : protected Iterator<Entry<E>> createEntrySetIterator() : 1
Method number 2926 : protected void doWriteObject(final ObjectOutputStream out) throws IOException : 2
Method number 2927 : protected void doReadObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 2
Method number 2928 : public Object[] toArray() : 3
Method number 2929 : public T[] toArray(T[] array) : 5
Method number 2930 : public boolean equals(final Object object) : 6
Method number 2931 : public int hashCode() : 2

Classe : org.apache.commons.collections4.multiset.AbstractMapMultiSet.MapBasedMultiSetIterator
Method number 2932 : public boolean hasNext() : 1
Method number 2933 : public E next() : 3
Method number 2934 : public void remove() : 4

Classe : org.apache.commons.collections4.multiset.AbstractMapMultiSet.MutableInteger
Method number 2935 : public boolean equals(final Object obj) : 2
Method number 2936 : public int hashCode() : 1

Classe : org.apache.commons.collections4.multiset.AbstractMapMultiSet.UniqueSetIterator
Method number 2937 : public E next() : 1
Method number 2938 : public void remove() : 2

Classe : org.apache.commons.collections4.multiset.AbstractMapMultiSet.EntrySetIterator
Method number 2939 : public boolean hasNext() : 1
Method number 2940 : public Entry<E> next() : 1
Method number 2941 : public void remove() : 2

Classe : org.apache.commons.collections4.multiset.AbstractMapMultiSet.MultiSetEntry
Method number 2942 : public E getElement() : 1
Method number 2943 : public int getCount() : 1

========================================
Fichier : multiset\AbstractMultiSet.java
========================================

Classe : org.apache.commons.collections4.multiset.AbstractMultiSet
Method number 2944 : public int size() : 2
Method number 2945 : public int getCount(final Object object) : 3
Method number 2946 : public int setCount(final E object, final int count) : 3
Method number 2947 : public boolean contains(final Object object) : 1
Method number 2948 : public Iterator<E> iterator() : 1
Method number 2949 : public boolean add(final E object) : 1
Method number 2950 : public int add(final E object, final int occurrences) : 1
Method number 2951 : public void clear() : 2
Method number 2952 : public boolean remove(final Object object) : 1
Method number 2953 : public int remove(final Object object, final int occurrences) : 1
Method number 2954 : public boolean removeAll(final Collection<?> coll) : 2
Method number 2955 : public Set<E> uniqueSet() : 2
Method number 2956 : protected Set<E> createUniqueSet() : 1
Method number 2957 : protected Iterator<E> createUniqueSetIterator() : 1
Method number 2958 : public Set<Entry<E>> entrySet() : 2
Method number 2959 : protected Set<Entry<E>> createEntrySet() : 1
Method number 2960 : protected abstract int uniqueElements() : 1
Method number 2961 : protected abstract Iterator<Entry<E>> createEntrySetIterator() : 1
Method number 2962 : protected void doWriteObject(final ObjectOutputStream out) throws IOException : 2
Method number 2963 : protected void doReadObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 2
Method number 2964 : public boolean equals(final Object object) : 6
Method number 2965 : public int hashCode() : 1
Method number 2966 : public String toString() : 1

Classe : org.apache.commons.collections4.multiset.AbstractMultiSet.MultiSetIterator
Method number 2967 : public boolean hasNext() : 1
Method number 2968 : public E next() : 2
Method number 2969 : public void remove() : 3

Classe : org.apache.commons.collections4.multiset.AbstractMultiSet.UniqueSet
Method number 2970 : public Iterator<E> iterator() : 1
Method number 2971 : public boolean contains(final Object key) : 1
Method number 2972 : public boolean containsAll(final Collection<?> coll) : 1
Method number 2973 : public boolean remove(final Object key) : 1
Method number 2974 : public int size() : 1
Method number 2975 : public void clear() : 1

Classe : org.apache.commons.collections4.multiset.AbstractMultiSet.EntrySet
Method number 2976 : public int size() : 1
Method number 2977 : public Iterator<Entry<E>> iterator() : 1
Method number 2978 : public boolean contains(final Object obj) : 2
Method number 2979 : public boolean remove(final Object obj) : 4

Classe : org.apache.commons.collections4.multiset.AbstractMultiSet.AbstractEntry
Method number 2980 : public boolean equals(final Object object) : 2
Method number 2981 : public int hashCode() : 1
Method number 2982 : public String toString() : 1

========================================
Fichier : multiset\AbstractMultiSetDecorator.java
========================================

Classe : org.apache.commons.collections4.multiset.AbstractMultiSetDecorator
Method number 2983 : protected MultiSet<E> decorated() : 1
Method number 2984 : public boolean equals(final Object object) : 1
Method number 2985 : public int hashCode() : 1
Method number 2986 : public int getCount(final Object object) : 1
Method number 2987 : public int setCount(final E object, final int count) : 1
Method number 2988 : public int add(final E object, final int count) : 1
Method number 2989 : public int remove(final Object object, final int count) : 1
Method number 2990 : public Set<E> uniqueSet() : 1
Method number 2991 : public Set<Entry<E>> entrySet() : 1

========================================
Fichier : multiset\HashMultiSet.java
========================================

Classe : org.apache.commons.collections4.multiset.HashMultiSet
Method number 2992 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 2993 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : multiset\package-info.java
========================================

========================================
Fichier : multiset\PredicatedMultiSet.java
========================================

Classe : org.apache.commons.collections4.multiset.PredicatedMultiSet
Method number 2994 : public static PredicatedMultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate) : 1
Method number 2995 : protected MultiSet<E> decorated() : 1
Method number 2996 : public boolean equals(final Object object) : 1
Method number 2997 : public int hashCode() : 1
Method number 2998 : public int add(final E object, final int count) : 1
Method number 2999 : public int remove(final Object object, final int count) : 1
Method number 3000 : public int getCount(final Object object) : 1
Method number 3001 : public int setCount(final E object, final int count) : 1
Method number 3002 : public Set<E> uniqueSet() : 1
Method number 3003 : public Set<MultiSet.Entry<E>> entrySet() : 1

========================================
Fichier : multiset\SynchronizedMultiSet.java
========================================

Classe : org.apache.commons.collections4.multiset.SynchronizedMultiSet
Method number 3004 : public static SynchronizedMultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset) : 1
Method number 3005 : protected MultiSet<E> decorated() : 1
Method number 3006 : public boolean equals(final Object object) : 2
Method number 3007 : public int hashCode() : 1
Method number 3008 : public int add(final E object, final int count) : 1
Method number 3009 : public int remove(final Object object, final int count) : 1
Method number 3010 : public int getCount(final Object object) : 1
Method number 3011 : public int setCount(final E object, final int count) : 1
Method number 3012 : public Set<E> uniqueSet() : 1
Method number 3013 : public Set<Entry<E>> entrySet() : 1

Classe : org.apache.commons.collections4.multiset.SynchronizedMultiSet.SynchronizedSet

========================================
Fichier : multiset\UnmodifiableMultiSet.java
========================================

Classe : org.apache.commons.collections4.multiset.UnmodifiableMultiSet
Method number 3014 : public static MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset) : 2
Method number 3015 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 3016 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 3017 : public Iterator<E> iterator() : 1
Method number 3018 : public boolean add(final E object) : 1
Method number 3019 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 3020 : public void clear() : 1
Method number 3021 : public boolean remove(final Object object) : 1
Method number 3022 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 3023 : public boolean removeAll(final Collection<?> coll) : 1
Method number 3024 : public boolean retainAll(final Collection<?> coll) : 1
Method number 3025 : public int setCount(final E object, final int count) : 1
Method number 3026 : public int add(final E object, final int count) : 1
Method number 3027 : public int remove(final Object object, final int count) : 1
Method number 3028 : public Set<E> uniqueSet() : 1
Method number 3029 : public Set<MultiSet.Entry<E>> entrySet() : 1

========================================
Fichier : MultiSet.java
========================================

Classe : org.apache.commons.collections4.MultiSet
Method number 3030 :  int getCount(Object object) : 1
Method number 3031 :  int setCount(E object, int count) : 1
Method number 3032 :  boolean add(E object) : 1
Method number 3033 :  int add(E object, int occurrences) : 1
Method number 3034 :  boolean remove(Object object) : 1
Method number 3035 :  int remove(Object object, int occurrences) : 1
Method number 3036 :  Set<E> uniqueSet() : 1
Method number 3037 :  Set<Entry<E>> entrySet() : 1
Method number 3038 :  Iterator<E> iterator() : 1
Method number 3039 :  int size() : 1
Method number 3040 :  boolean containsAll(Collection<?> coll) : 1
Method number 3041 :  boolean removeAll(Collection<?> coll) : 1
Method number 3042 :  boolean retainAll(Collection<?> coll) : 1
Method number 3043 :  boolean equals(Object obj) : 1
Method number 3044 :  int hashCode() : 1

Classe : org.apache.commons.collections4.MultiSet.Entry
Method number 3045 :  E getElement() : 1
Method number 3046 :  int getCount() : 1
Method number 3047 :  boolean equals(Object o) : 1
Method number 3048 :  int hashCode() : 1

========================================
Fichier : MultiSetUtils.java
========================================

Classe : org.apache.commons.collections4.MultiSetUtils
Method number 3049 : public static MultiSet<E> synchronizedMultiSet(final MultiSet<E> multiset) : 1
Method number 3050 : public static MultiSet<E> unmodifiableMultiSet(final MultiSet<? extends E> multiset) : 1
Method number 3051 : public static MultiSet<E> predicatedMultiSet(final MultiSet<E> multiset, final Predicate<? super E> predicate) : 1
Method number 3052 : public static MultiSet<E> emptyMultiSet() : 1

========================================
Fichier : MultiValuedMap.java
========================================

Classe : org.apache.commons.collections4.MultiValuedMap
Method number 3053 :  int size() : 1
Method number 3054 :  boolean isEmpty() : 1
Method number 3055 :  boolean containsKey(Object key) : 1
Method number 3056 :  boolean containsValue(Object value) : 1
Method number 3057 :  boolean containsMapping(Object key, Object value) : 1
Method number 3058 :  Collection<V> get(K key) : 1
Method number 3059 :  boolean put(K key, V value) : 1
Method number 3060 :  boolean putAll(K key, Iterable<? extends V> values) : 1
Method number 3061 :  boolean putAll(Map<? extends K, ? extends V> map) : 1
Method number 3062 :  boolean putAll(MultiValuedMap<? extends K, ? extends V> map) : 1
Method number 3063 :  Collection<V> remove(Object key) : 1
Method number 3064 :  boolean removeMapping(Object key, Object item) : 1
Method number 3065 :  void clear() : 1
Method number 3066 :  Collection<Entry<K, V>> entries() : 1
Method number 3067 :  MultiSet<K> keys() : 1
Method number 3068 :  Set<K> keySet() : 1
Method number 3069 :  Collection<V> values() : 1
Method number 3070 :  Map<K, Collection<V>> asMap() : 1
Method number 3071 :  MapIterator<K, V> mapIterator() : 1

========================================
Fichier : OrderedBidiMap.java
========================================

Classe : org.apache.commons.collections4.OrderedBidiMap
Method number 3072 :  OrderedBidiMap<V, K> inverseBidiMap() : 1

========================================
Fichier : OrderedIterator.java
========================================

Classe : org.apache.commons.collections4.OrderedIterator
Method number 3073 :  boolean hasPrevious() : 1
Method number 3074 :  E previous() : 1

========================================
Fichier : OrderedMap.java
========================================

Classe : org.apache.commons.collections4.OrderedMap
Method number 3075 :  OrderedMapIterator<K, V> mapIterator() : 1
Method number 3076 :  K firstKey() : 1
Method number 3077 :  K lastKey() : 1
Method number 3078 :  K nextKey(K key) : 1
Method number 3079 :  K previousKey(K key) : 1

========================================
Fichier : OrderedMapIterator.java
========================================

Classe : org.apache.commons.collections4.OrderedMapIterator
Method number 3080 :  boolean hasPrevious() : 1
Method number 3081 :  K previous() : 1

========================================
Fichier : package-info.java
========================================

========================================
Fichier : Predicate.java
========================================

Classe : org.apache.commons.collections4.Predicate
Method number 3082 :  boolean evaluate(T object) : 1

========================================
Fichier : PredicateUtils.java
========================================

Classe : org.apache.commons.collections4.PredicateUtils
Method number 3083 : public static Predicate<T> exceptionPredicate() : 1
Method number 3084 : public static Predicate<T> truePredicate() : 1
Method number 3085 : public static Predicate<T> falsePredicate() : 1
Method number 3086 : public static Predicate<T> nullPredicate() : 1
Method number 3087 : public static Predicate<T> notNullPredicate() : 1
Method number 3088 : public static Predicate<T> equalPredicate(final T value) : 1
Method number 3089 : public static Predicate<T> identityPredicate(final T value) : 1
Method number 3090 : public static Predicate<Object> instanceofPredicate(final Class<?> type) : 1
Method number 3091 : public static Predicate<T> uniquePredicate() : 1
Method number 3092 : public static Predicate<T> invokerPredicate(final String methodName) : 1
Method number 3093 : public static Predicate<T> invokerPredicate(final String methodName, final Class<?>[] paramTypes, final Object[] args) : 1
Method number 3094 : public static Predicate<T> andPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2) : 1
Method number 3095 : public static Predicate<T> allPredicate(final Predicate<? super T>... predicates) : 1
Method number 3096 : public static Predicate<T> allPredicate(final Collection<? extends Predicate<? super T>> predicates) : 1
Method number 3097 : public static Predicate<T> orPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2) : 1
Method number 3098 : public static Predicate<T> anyPredicate(final Predicate<? super T>... predicates) : 1
Method number 3099 : public static Predicate<T> anyPredicate(final Collection<? extends Predicate<? super T>> predicates) : 1
Method number 3100 : public static Predicate<T> eitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2) : 1
Method number 3101 : public static Predicate<T> onePredicate(final Predicate<? super T>... predicates) : 1
Method number 3102 : public static Predicate<T> onePredicate(final Collection<? extends Predicate<? super T>> predicates) : 1
Method number 3103 : public static Predicate<T> neitherPredicate(final Predicate<? super T> predicate1, final Predicate<? super T> predicate2) : 1
Method number 3104 : public static Predicate<T> nonePredicate(final Predicate<? super T>... predicates) : 1
Method number 3105 : public static Predicate<T> nonePredicate(final Collection<? extends Predicate<? super T>> predicates) : 1
Method number 3106 : public static Predicate<T> notPredicate(final Predicate<? super T> predicate) : 1
Method number 3107 : public static Predicate<T> asPredicate(final Transformer<? super T, Boolean> transformer) : 1
Method number 3108 : public static Predicate<T> nullIsExceptionPredicate(final Predicate<? super T> predicate) : 1
Method number 3109 : public static Predicate<T> nullIsFalsePredicate(final Predicate<? super T> predicate) : 1
Method number 3110 : public static Predicate<T> nullIsTruePredicate(final Predicate<? super T> predicate) : 1
Method number 3111 : public static Predicate<T> transformedPredicate(final Transformer<? super T, ? extends T> transformer, final Predicate<? super T> predicate) : 1

========================================
Fichier : properties\AbstractPropertiesFactory.java
========================================

Classe : org.apache.commons.collections4.properties.AbstractPropertiesFactory
Method number 3112 : protected abstract T createProperties() : 1
Method number 3113 : public T load(final ClassLoader classLoader, final String name) throws IOException : 1
Method number 3114 : public T load(final File file) throws FileNotFoundException, IOException : 1
Method number 3115 : public T load(final InputStream inputStream) throws IOException : 2
Method number 3116 : public T load(final InputStream inputStream, final PropertyFormat propertyFormat) throws IOException : 3
Method number 3117 : public T load(final Path path) throws IOException : 1
Method number 3118 : public T load(final Reader reader) throws IOException : 1
Method number 3119 : public T load(final String name) throws IOException : 1
Method number 3120 : public T load(final URI uri) throws IOException : 1
Method number 3121 : public T load(final URL url) throws IOException : 1

========================================
Fichier : properties\OrderedProperties.java
========================================

Classe : org.apache.commons.collections4.properties.OrderedProperties
Method number 3122 : public synchronized void clear() : 1
Method number 3123 : public synchronized Object compute(final Object key, final BiFunction<? super Object, ? super Object, ? extends Object> remappingFunction) : 2
Method number 3124 : public synchronized Object computeIfAbsent(final Object key, final Function<? super Object, ? extends Object> mappingFunction) : 2
Method number 3125 : public Set<Map.Entry<Object, Object>> entrySet() : 1
Method number 3126 : public synchronized void forEach(final BiConsumer<? super Object, ? super Object> action) : 1
Method number 3127 : public synchronized Enumeration<Object> keys() : 1
Method number 3128 : public Set<Object> keySet() : 1
Method number 3129 : public synchronized Object merge(final Object key, final Object value, final BiFunction<? super Object, ? super Object, ? extends Object> remappingFunction) : 1
Method number 3130 : public Enumeration<?> propertyNames() : 1
Method number 3131 : public synchronized Object put(final Object key, final Object value) : 2
Method number 3132 : public synchronized void putAll(final Map<? extends Object, ? extends Object> t) : 1
Method number 3133 : public synchronized Object putIfAbsent(final Object key, final Object value) : 2
Method number 3134 : public synchronized Object remove(final Object key) : 2
Method number 3135 : public synchronized boolean remove(final Object key, final Object value) : 2
Method number 3136 : public synchronized String toString() : 4

========================================
Fichier : properties\OrderedPropertiesFactory.java
========================================

Classe : org.apache.commons.collections4.properties.OrderedPropertiesFactory
Method number 3137 : protected OrderedProperties createProperties() : 1

========================================
Fichier : properties\package-info.java
========================================

========================================
Fichier : properties\PropertiesFactory.java
========================================

Classe : org.apache.commons.collections4.properties.PropertiesFactory
Method number 3138 : protected Properties createProperties() : 1

Classe : org.apache.commons.collections4.properties.PropertiesFactory.EmptyProperties
Method number 3139 : public synchronized void clear() : 1
Method number 3140 : public synchronized Object compute(final Object key, final BiFunction<? super Object, ? super Object, ? extends Object> remappingFunction) : 1
Method number 3141 : public synchronized Object computeIfAbsent(final Object key, final Function<? super Object, ? extends Object> mappingFunction) : 1
Method number 3142 : public synchronized Object computeIfPresent(final Object key, final BiFunction<? super Object, ? super Object, ? extends Object> remappingFunction) : 1
Method number 3143 : public synchronized boolean contains(final Object value) : 1
Method number 3144 : public synchronized boolean containsKey(final Object key) : 1
Method number 3145 : public boolean containsValue(final Object value) : 1
Method number 3146 : public synchronized Enumeration<Object> elements() : 1
Method number 3147 : public Set<Entry<Object, Object>> entrySet() : 1
Method number 3148 : public synchronized boolean equals(final Object o) : 1
Method number 3149 : public synchronized void forEach(final BiConsumer<? super Object, ? super Object> action) : 1
Method number 3150 : public synchronized Object get(final Object key) : 1
Method number 3151 : public synchronized Object getOrDefault(final Object key, final Object defaultValue) : 1
Method number 3152 : public String getProperty(final String key) : 1
Method number 3153 : public String getProperty(final String key, final String defaultValue) : 1
Method number 3154 : public synchronized int hashCode() : 1
Method number 3155 : public synchronized boolean isEmpty() : 1
Method number 3156 : public synchronized Enumeration<Object> keys() : 1
Method number 3157 : public Set<Object> keySet() : 1
Method number 3158 : public synchronized void load(final InputStream inStream) throws IOException : 1
Method number 3159 : public synchronized void load(final Reader reader) throws IOException : 1
Method number 3160 : public synchronized void loadFromXML(final InputStream in) throws IOException, InvalidPropertiesFormatException : 1
Method number 3161 : public synchronized Object merge(final Object key, final Object value, final BiFunction<? super Object, ? super Object, ? extends Object> remappingFunction) : 1
Method number 3162 : public Enumeration<?> propertyNames() : 1
Method number 3163 : public synchronized Object put(final Object key, final Object value) : 1
Method number 3164 : public synchronized void putAll(final Map<? extends Object, ? extends Object> t) : 1
Method number 3165 : public synchronized Object putIfAbsent(final Object key, final Object value) : 1
Method number 3166 : protected void rehash() : 1
Method number 3167 : public synchronized Object remove(final Object key) : 1
Method number 3168 : public synchronized boolean remove(final Object key, final Object value) : 1
Method number 3169 : public synchronized Object replace(final Object key, final Object value) : 1
Method number 3170 : public synchronized boolean replace(final Object key, final Object oldValue, final Object newValue) : 1
Method number 3171 : public synchronized void replaceAll(final BiFunction<? super Object, ? super Object, ? extends Object> function) : 1
Method number 3172 : public void save(final OutputStream out, final String comments) : 1
Method number 3173 : public synchronized Object setProperty(final String key, final String value) : 1
Method number 3174 : public synchronized int size() : 1
Method number 3175 : public void store(final OutputStream out, final String comments) throws IOException : 1
Method number 3176 : public void store(final Writer writer, final String comments) throws IOException : 1
Method number 3177 : public void storeToXML(final OutputStream os, final String comment) throws IOException : 1
Method number 3178 : public void storeToXML(final OutputStream os, final String comment, final String encoding) throws IOException : 1
Method number 3179 : public Set<String> stringPropertyNames() : 1
Method number 3180 : public synchronized String toString() : 1
Method number 3181 : public Collection<Object> values() : 1

========================================
Fichier : properties\SortedProperties.java
========================================

Classe : org.apache.commons.collections4.properties.SortedProperties
Method number 3182 : public Set<Map.Entry<Object, Object>> entrySet() : 1
Method number 3183 : public synchronized Enumeration<Object> keys() : 1
Method number 3184 : private Stream<String> sortedKeys() : 1

========================================
Fichier : properties\SortedPropertiesFactory.java
========================================

Classe : org.apache.commons.collections4.properties.SortedPropertiesFactory
Method number 3185 : protected SortedProperties createProperties() : 1

========================================
Fichier : Put.java
========================================

Classe : org.apache.commons.collections4.Put
Method number 3186 :  void clear() : 1
Method number 3187 :  Object put(K key, V value) : 1
Method number 3188 :  void putAll(Map<? extends K, ? extends V> t) : 1

========================================
Fichier : queue\AbstractQueueDecorator.java
========================================

Classe : org.apache.commons.collections4.queue.AbstractQueueDecorator
Method number 3189 : protected Queue<E> decorated() : 1
Method number 3190 : public boolean offer(final E obj) : 1
Method number 3191 : public E poll() : 1
Method number 3192 : public E peek() : 1
Method number 3193 : public E element() : 1
Method number 3194 : public E remove() : 1

========================================
Fichier : queue\CircularFifoQueue.java
========================================

Classe : org.apache.commons.collections4.queue.CircularFifoQueue
Method number 3195 : private void writeObject(final ObjectOutputStream out) throws IOException : 2
Method number 3196 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 3
Method number 3197 : public int size() : 2
Method number 3198 : public boolean isEmpty() : 1
Method number 3199 : public boolean isFull() : 1
Method number 3200 : public boolean isAtFullCapacity() : 1
Method number 3201 : public int maxSize() : 1
Method number 3202 : public void clear() : 1
Method number 3203 : public boolean add(final E element) : 4
Method number 3204 : public E get(final int index) : 2
Method number 3205 : public boolean offer(final E element) : 1
Method number 3206 : public E poll() : 2
Method number 3207 : public E element() : 2
Method number 3208 : public E peek() : 2
Method number 3209 : public E remove() : 4
Method number 3210 : private int increment(int index) : 2
Method number 3211 : private int decrement(int index) : 2
Method number 3212 : public Iterator<E> iterator() : 1

========================================
Fichier : queue\package-info.java
========================================

========================================
Fichier : queue\PredicatedQueue.java
========================================

Classe : org.apache.commons.collections4.queue.PredicatedQueue
Method number 3213 : public static PredicatedQueue<E> predicatedQueue(final Queue<E> Queue, final Predicate<? super E> predicate) : 1
Method number 3214 : protected Queue<E> decorated() : 1
Method number 3215 : public boolean offer(final E object) : 1
Method number 3216 : public E poll() : 1
Method number 3217 : public E peek() : 1
Method number 3218 : public E element() : 1
Method number 3219 : public E remove() : 1

========================================
Fichier : queue\SynchronizedQueue.java
========================================

Classe : org.apache.commons.collections4.queue.SynchronizedQueue
Method number 3220 : public static SynchronizedQueue<E> synchronizedQueue(final Queue<E> queue) : 1
Method number 3221 : protected Queue<E> decorated() : 1
Method number 3222 : public E element() : 1
Method number 3223 : public boolean equals(final Object object) : 2
Method number 3224 : public int hashCode() : 1
Method number 3225 : public boolean offer(final E e) : 1
Method number 3226 : public E peek() : 1
Method number 3227 : public E poll() : 1
Method number 3228 : public E remove() : 1

========================================
Fichier : queue\TransformedQueue.java
========================================

Classe : org.apache.commons.collections4.queue.TransformedQueue
Method number 3229 : public static TransformedQueue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer) : 1
Method number 3230 : public static TransformedQueue<E> transformedQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer) : 3
Method number 3231 : protected Queue<E> getQueue() : 1
Method number 3232 : public boolean offer(final E obj) : 1
Method number 3233 : public E poll() : 1
Method number 3234 : public E peek() : 1
Method number 3235 : public E element() : 1
Method number 3236 : public E remove() : 1

========================================
Fichier : queue\UnmodifiableQueue.java
========================================

Classe : org.apache.commons.collections4.queue.UnmodifiableQueue
Method number 3237 : public static Queue<E> unmodifiableQueue(final Queue<? extends E> queue) : 2
Method number 3238 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 3239 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 3240 : public Iterator<E> iterator() : 1
Method number 3241 : public boolean add(final Object object) : 1
Method number 3242 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 3243 : public void clear() : 1
Method number 3244 : public boolean remove(final Object object) : 1
Method number 3245 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 3246 : public boolean removeAll(final Collection<?> coll) : 1
Method number 3247 : public boolean retainAll(final Collection<?> coll) : 1
Method number 3248 : public boolean offer(final E obj) : 1
Method number 3249 : public E poll() : 1
Method number 3250 : public E remove() : 1

========================================
Fichier : QueueUtils.java
========================================

Classe : org.apache.commons.collections4.QueueUtils
Method number 3251 : public static Queue<E> synchronizedQueue(final Queue<E> queue) : 1
Method number 3252 : public static Queue<E> unmodifiableQueue(final Queue<? extends E> queue) : 1
Method number 3253 : public static Queue<E> predicatedQueue(final Queue<E> queue, final Predicate<? super E> predicate) : 1
Method number 3254 : public static Queue<E> transformingQueue(final Queue<E> queue, final Transformer<? super E, ? extends E> transformer) : 1
Method number 3255 : public static Queue<E> emptyQueue() : 1

========================================
Fichier : ResettableIterator.java
========================================

Classe : org.apache.commons.collections4.ResettableIterator
Method number 3256 :  void reset() : 1

========================================
Fichier : ResettableListIterator.java
========================================

Classe : org.apache.commons.collections4.ResettableListIterator

========================================
Fichier : sequence\CommandVisitor.java
========================================

Classe : org.apache.commons.collections4.sequence.CommandVisitor
Method number 3257 :  void visitInsertCommand(T object) : 1
Method number 3258 :  void visitKeepCommand(T object) : 1
Method number 3259 :  void visitDeleteCommand(T object) : 1

========================================
Fichier : sequence\DeleteCommand.java
========================================

Classe : org.apache.commons.collections4.sequence.DeleteCommand
Method number 3260 : public void accept(final CommandVisitor<T> visitor) : 1

========================================
Fichier : sequence\EditCommand.java
========================================

Classe : org.apache.commons.collections4.sequence.EditCommand
Method number 3261 : protected T getObject() : 1
Method number 3262 : public abstract void accept(CommandVisitor<T> visitor) : 1

========================================
Fichier : sequence\EditScript.java
========================================

Classe : org.apache.commons.collections4.sequence.EditScript
Method number 3263 : public void append(final KeepCommand<T> command) : 1
Method number 3264 : public void append(final InsertCommand<T> command) : 1
Method number 3265 : public void append(final DeleteCommand<T> command) : 1
Method number 3266 : public void visit(final CommandVisitor<T> visitor) : 2
Method number 3267 : public int getLCSLength() : 1
Method number 3268 : public int getModifications() : 1

========================================
Fichier : sequence\InsertCommand.java
========================================

Classe : org.apache.commons.collections4.sequence.InsertCommand
Method number 3269 : public void accept(final CommandVisitor<T> visitor) : 1

========================================
Fichier : sequence\KeepCommand.java
========================================

Classe : org.apache.commons.collections4.sequence.KeepCommand
Method number 3270 : public void accept(final CommandVisitor<T> visitor) : 1

========================================
Fichier : sequence\package-info.java
========================================

========================================
Fichier : sequence\ReplacementsFinder.java
========================================

Classe : org.apache.commons.collections4.sequence.ReplacementsFinder
Method number 3271 : public void visitInsertCommand(final T object) : 1
Method number 3272 : public void visitKeepCommand(final T object) : 2
Method number 3273 : public void visitDeleteCommand(final T object) : 1

========================================
Fichier : sequence\ReplacementsHandler.java
========================================

Classe : org.apache.commons.collections4.sequence.ReplacementsHandler
Method number 3274 :  void handleReplacement(int skipped, List<T> from, List<T> to) : 1

========================================
Fichier : sequence\SequencesComparator.java
========================================

Classe : org.apache.commons.collections4.sequence.SequencesComparator
Method number 3275 : public EditScript<T> getScript() : 1
Method number 3276 : private Snake buildSnake(final int start, final int diag, final int end1, final int end2) : 2
Method number 3277 : private Snake getMiddleSnake(final int start1, final int end1, final int start2, final int end2) : 11
Method number 3278 : private void buildScript(final int start1, final int end1, final int start2, final int end2, final EditScript<T> script) : 6

Classe : org.apache.commons.collections4.sequence.SequencesComparator.Snake
Method number 3279 : public int getStart() : 1
Method number 3280 : public int getEnd() : 1
Method number 3281 : public int getDiag() : 1

========================================
Fichier : set\AbstractNavigableSetDecorator.java
========================================

Classe : org.apache.commons.collections4.set.AbstractNavigableSetDecorator
Method number 3282 : protected NavigableSet<E> decorated() : 1
Method number 3283 : public E lower(final E e) : 1
Method number 3284 : public E floor(final E e) : 1
Method number 3285 : public E ceiling(final E e) : 1
Method number 3286 : public E higher(final E e) : 1
Method number 3287 : public E pollFirst() : 1
Method number 3288 : public E pollLast() : 1
Method number 3289 : public NavigableSet<E> descendingSet() : 1
Method number 3290 : public Iterator<E> descendingIterator() : 1
Method number 3291 : public NavigableSet<E> subSet(final E fromElement, final boolean fromInclusive, final E toElement, final boolean toInclusive) : 1
Method number 3292 : public NavigableSet<E> headSet(final E toElement, final boolean inclusive) : 1
Method number 3293 : public NavigableSet<E> tailSet(final E fromElement, final boolean inclusive) : 1

========================================
Fichier : set\AbstractSerializableSetDecorator.java
========================================

Classe : org.apache.commons.collections4.set.AbstractSerializableSetDecorator
Method number 3294 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 3295 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : set\AbstractSetDecorator.java
========================================

Classe : org.apache.commons.collections4.set.AbstractSetDecorator
Method number 3296 : protected Set<E> decorated() : 1
Method number 3297 : public boolean equals(final Object object) : 1
Method number 3298 : public int hashCode() : 1

========================================
Fichier : set\AbstractSortedSetDecorator.java
========================================

Classe : org.apache.commons.collections4.set.AbstractSortedSetDecorator
Method number 3299 : protected SortedSet<E> decorated() : 1
Method number 3300 : public SortedSet<E> subSet(final E fromElement, final E toElement) : 1
Method number 3301 : public SortedSet<E> headSet(final E toElement) : 1
Method number 3302 : public SortedSet<E> tailSet(final E fromElement) : 1
Method number 3303 : public E first() : 1
Method number 3304 : public E last() : 1
Method number 3305 : public Comparator<? super E> comparator() : 1

========================================
Fichier : set\CompositeSet.java
========================================

Classe : org.apache.commons.collections4.set.CompositeSet
Method number 3306 : public int size() : 2
Method number 3307 : public boolean isEmpty() : 3
Method number 3308 : public boolean contains(final Object obj) : 3
Method number 3309 : public Iterator<E> iterator() : 2
Method number 3310 : public Object[] toArray() : 2
Method number 3311 : public T[] toArray(final T[] array) : 5
Method number 3312 : public boolean add(final E obj) : 2
Method number 3313 : public boolean remove(final Object obj) : 3
Method number 3314 : public boolean containsAll(final Collection<?> coll) : 4
Method number 3315 : public boolean addAll(final Collection<? extends E> coll) : 2
Method number 3316 : public boolean removeIf(final Predicate<? super E> filter) : 3
Method number 3317 : public boolean removeAll(final Collection<?> coll) : 3
Method number 3318 : public boolean retainAll(final Collection<?> coll) : 2
Method number 3319 : public void clear() : 2
Method number 3320 : public void setMutator(final SetMutator<E> mutator) : 1
Method number 3321 : public synchronized void addComposited(final Set<E> set) : 6
Method number 3322 : public void addComposited(final Set<E> set1, final Set<E> set2) : 1
Method number 3323 : public void addComposited(final Set<E>... sets) : 3
Method number 3324 : public void removeComposited(final Set<E> set) : 1
Method number 3325 : public Set<E> toSet() : 1
Method number 3326 : public List<Set<E>> getSets() : 1
Method number 3327 : protected SetMutator<E> getMutator() : 1
Method number 3328 : public boolean equals(final Object obj) : 2
Method number 3329 : public int hashCode() : 2

Classe : org.apache.commons.collections4.set.CompositeSet.SetMutator
Method number 3330 :  boolean add(CompositeSet<E> composite, List<Set<E>> sets, E obj) : 1
Method number 3331 :  boolean addAll(CompositeSet<E> composite, List<Set<E>> sets, Collection<? extends E> coll) : 1
Method number 3332 :  void resolveCollision(CompositeSet<E> comp, Set<E> existing, Set<E> added, Collection<E> intersects) : 1

========================================
Fichier : set\ListOrderedSet.java
========================================

Classe : org.apache.commons.collections4.set.ListOrderedSet
Method number 3333 : public static ListOrderedSet<E> listOrderedSet(final Set<E> set, final List<E> list) : 2
Method number 3334 : public static ListOrderedSet<E> listOrderedSet(final Set<E> set) : 1
Method number 3335 : public static ListOrderedSet<E> listOrderedSet(final List<E> list) : 1
Method number 3336 : public List<E> asList() : 1
Method number 3337 : public void clear() : 1
Method number 3338 : public OrderedIterator<E> iterator() : 1
Method number 3339 : public boolean add(final E object) : 2
Method number 3340 : public boolean addAll(final Collection<? extends E> coll) : 2
Method number 3341 : public boolean remove(final Object object) : 2
Method number 3342 : public boolean removeIf(final Predicate<? super E> filter) : 3
Method number 3343 : public boolean removeAll(final Collection<?> coll) : 2
Method number 3344 : public boolean retainAll(final Collection<?> coll) : 3
Method number 3345 : public Object[] toArray() : 1
Method number 3346 : public T[] toArray(final T[] a) : 1
Method number 3347 : public E get(final int index) : 1
Method number 3348 : public int indexOf(final Object object) : 1
Method number 3349 : public void add(final int index, final E object) : 2
Method number 3350 : public boolean addAll(final int index, final Collection<? extends E> coll) : 4
Method number 3351 : public E remove(final int index) : 1
Method number 3352 : public String toString() : 1

Classe : org.apache.commons.collections4.set.ListOrderedSet.OrderedSetIterator
Method number 3353 : public E next() : 1
Method number 3354 : public void remove() : 1
Method number 3355 : public boolean hasPrevious() : 1
Method number 3356 : public E previous() : 1

========================================
Fichier : set\MapBackedSet.java
========================================

Classe : org.apache.commons.collections4.set.MapBackedSet
Method number 3357 : public static MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map) : 1
Method number 3358 : public static MapBackedSet<E, V> mapBackedSet(final Map<E, ? super V> map, final V dummyValue) : 1
Method number 3359 : public int size() : 1
Method number 3360 : public boolean isEmpty() : 1
Method number 3361 : public Iterator<E> iterator() : 1
Method number 3362 : public boolean contains(final Object obj) : 1
Method number 3363 : public boolean containsAll(final Collection<?> coll) : 1
Method number 3364 : public boolean add(final E obj) : 1
Method number 3365 : public boolean addAll(final Collection<? extends E> coll) : 2
Method number 3366 : public boolean remove(final Object obj) : 1
Method number 3367 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 3368 : public boolean removeAll(final Collection<?> coll) : 1
Method number 3369 : public boolean retainAll(final Collection<?> coll) : 1
Method number 3370 : public void clear() : 1
Method number 3371 : public Object[] toArray() : 1
Method number 3372 : public T[] toArray(final T[] array) : 1
Method number 3373 : public boolean equals(final Object obj) : 1
Method number 3374 : public int hashCode() : 1

========================================
Fichier : set\package-info.java
========================================

========================================
Fichier : set\PredicatedNavigableSet.java
========================================

Classe : org.apache.commons.collections4.set.PredicatedNavigableSet
Method number 3375 : public static PredicatedNavigableSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate) : 1
Method number 3376 : protected NavigableSet<E> decorated() : 1
Method number 3377 : public E lower(final E e) : 1
Method number 3378 : public E floor(final E e) : 1
Method number 3379 : public E ceiling(final E e) : 1
Method number 3380 : public E higher(final E e) : 1
Method number 3381 : public E pollFirst() : 1
Method number 3382 : public E pollLast() : 1
Method number 3383 : public NavigableSet<E> descendingSet() : 1
Method number 3384 : public Iterator<E> descendingIterator() : 1
Method number 3385 : public NavigableSet<E> subSet(final E fromElement, final boolean fromInclusive, final E toElement, final boolean toInclusive) : 1
Method number 3386 : public NavigableSet<E> headSet(final E toElement, final boolean inclusive) : 1
Method number 3387 : public NavigableSet<E> tailSet(final E fromElement, final boolean inclusive) : 1

========================================
Fichier : set\PredicatedSet.java
========================================

Classe : org.apache.commons.collections4.set.PredicatedSet
Method number 3388 : public static PredicatedSet<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate) : 1
Method number 3389 : protected Set<E> decorated() : 1
Method number 3390 : public boolean equals(final Object object) : 1
Method number 3391 : public int hashCode() : 1

========================================
Fichier : set\PredicatedSortedSet.java
========================================

Classe : org.apache.commons.collections4.set.PredicatedSortedSet
Method number 3392 : public static PredicatedSortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate) : 1
Method number 3393 : protected SortedSet<E> decorated() : 1
Method number 3394 : public Comparator<? super E> comparator() : 1
Method number 3395 : public E first() : 1
Method number 3396 : public E last() : 1
Method number 3397 : public SortedSet<E> subSet(final E fromElement, final E toElement) : 1
Method number 3398 : public SortedSet<E> headSet(final E toElement) : 1
Method number 3399 : public SortedSet<E> tailSet(final E fromElement) : 1

========================================
Fichier : set\TransformedNavigableSet.java
========================================

Classe : org.apache.commons.collections4.set.TransformedNavigableSet
Method number 3400 : public static TransformedNavigableSet<E> transformingNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer) : 1
Method number 3401 : public static TransformedNavigableSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer) : 3
Method number 3402 : protected NavigableSet<E> decorated() : 1
Method number 3403 : public E lower(final E e) : 1
Method number 3404 : public E floor(final E e) : 1
Method number 3405 : public E ceiling(final E e) : 1
Method number 3406 : public E higher(final E e) : 1
Method number 3407 : public E pollFirst() : 1
Method number 3408 : public E pollLast() : 1
Method number 3409 : public NavigableSet<E> descendingSet() : 1
Method number 3410 : public Iterator<E> descendingIterator() : 1
Method number 3411 : public NavigableSet<E> subSet(final E fromElement, final boolean fromInclusive, final E toElement, final boolean toInclusive) : 1
Method number 3412 : public NavigableSet<E> headSet(final E toElement, final boolean inclusive) : 1
Method number 3413 : public NavigableSet<E> tailSet(final E fromElement, final boolean inclusive) : 1

========================================
Fichier : set\TransformedSet.java
========================================

Classe : org.apache.commons.collections4.set.TransformedSet
Method number 3414 : public static TransformedSet<E> transformingSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer) : 1
Method number 3415 : public static Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer) : 3
Method number 3416 : public boolean equals(final Object object) : 1
Method number 3417 : public int hashCode() : 1

========================================
Fichier : set\TransformedSortedSet.java
========================================

Classe : org.apache.commons.collections4.set.TransformedSortedSet
Method number 3418 : public static TransformedSortedSet<E> transformingSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer) : 1
Method number 3419 : public static TransformedSortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer) : 3
Method number 3420 : protected SortedSet<E> getSortedSet() : 1
Method number 3421 : public E first() : 1
Method number 3422 : public E last() : 1
Method number 3423 : public Comparator<? super E> comparator() : 1
Method number 3424 : public SortedSet<E> subSet(final E fromElement, final E toElement) : 1
Method number 3425 : public SortedSet<E> headSet(final E toElement) : 1
Method number 3426 : public SortedSet<E> tailSet(final E fromElement) : 1

========================================
Fichier : set\UnmodifiableNavigableSet.java
========================================

Classe : org.apache.commons.collections4.set.UnmodifiableNavigableSet
Method number 3427 : public static NavigableSet<E> unmodifiableNavigableSet(final NavigableSet<E> set) : 2
Method number 3428 : public Iterator<E> iterator() : 1
Method number 3429 : public boolean add(final E object) : 1
Method number 3430 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 3431 : public void clear() : 1
Method number 3432 : public boolean remove(final Object object) : 1
Method number 3433 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 3434 : public boolean removeAll(final Collection<?> coll) : 1
Method number 3435 : public E pollFirst() : 1
Method number 3436 : public E pollLast() : 1
Method number 3437 : public boolean retainAll(final Collection<?> coll) : 1
Method number 3438 : public SortedSet<E> subSet(final E fromElement, final E toElement) : 1
Method number 3439 : public SortedSet<E> headSet(final E toElement) : 1
Method number 3440 : public SortedSet<E> tailSet(final E fromElement) : 1
Method number 3441 : public NavigableSet<E> descendingSet() : 1
Method number 3442 : public Iterator<E> descendingIterator() : 1
Method number 3443 : public NavigableSet<E> subSet(final E fromElement, final boolean fromInclusive, final E toElement, final boolean toInclusive) : 1
Method number 3444 : public NavigableSet<E> headSet(final E toElement, final boolean inclusive) : 1
Method number 3445 : public NavigableSet<E> tailSet(final E fromElement, final boolean inclusive) : 1
Method number 3446 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 3447 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : set\UnmodifiableSet.java
========================================

Classe : org.apache.commons.collections4.set.UnmodifiableSet
Method number 3448 : public static Set<E> unmodifiableSet(final Set<? extends E> set) : 2
Method number 3449 : public Iterator<E> iterator() : 1
Method number 3450 : public boolean add(final E object) : 1
Method number 3451 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 3452 : public void clear() : 1
Method number 3453 : public boolean remove(final Object object) : 1
Method number 3454 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 3455 : public boolean removeAll(final Collection<?> coll) : 1
Method number 3456 : public boolean retainAll(final Collection<?> coll) : 1

========================================
Fichier : set\UnmodifiableSortedSet.java
========================================

Classe : org.apache.commons.collections4.set.UnmodifiableSortedSet
Method number 3457 : public static SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set) : 2
Method number 3458 : public Iterator<E> iterator() : 1
Method number 3459 : public boolean add(final E object) : 1
Method number 3460 : public boolean addAll(final Collection<? extends E> coll) : 1
Method number 3461 : public void clear() : 1
Method number 3462 : public boolean remove(final Object object) : 1
Method number 3463 : public boolean removeIf(final Predicate<? super E> filter) : 1
Method number 3464 : public boolean removeAll(final Collection<?> coll) : 1
Method number 3465 : public boolean retainAll(final Collection<?> coll) : 1
Method number 3466 : public SortedSet<E> subSet(final E fromElement, final E toElement) : 1
Method number 3467 : public SortedSet<E> headSet(final E toElement) : 1
Method number 3468 : public SortedSet<E> tailSet(final E fromElement) : 1
Method number 3469 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 3470 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1

========================================
Fichier : SetUtils.java
========================================

Classe : org.apache.commons.collections4.SetUtils
Method number 3471 : public static SetView<E> difference(final Set<? extends E> setA, final Set<? extends E> setB) : 1
Method number 3472 : public static SetView<E> disjunction(final Set<? extends E> setA, final Set<? extends E> setB) : 1
Method number 3473 : public static Set<T> emptyIfNull(final Set<T> set) : 1
Method number 3474 : public static Set<E> emptySet() : 1
Method number 3475 : public static SortedSet<E> emptySortedSet() : 1
Method number 3476 : public static int hashCodeForSet(final Collection<T> set) : 4
Method number 3477 : public static HashSet<E> hashSet(final E... items) : 2
Method number 3478 : public static SetView<E> intersection(final Set<? extends E> setA, final Set<? extends E> setB) : 1
Method number 3479 : public static boolean isEqualSet(final Collection<?> set1, final Collection<?> set2) : 3
Method number 3480 : public static Set<E> newIdentityHashSet() : 1
Method number 3481 : public static Set<E> orderedSet(final Set<E> set) : 1
Method number 3482 : public static SortedSet<E> predicatedNavigableSet(final NavigableSet<E> set, final Predicate<? super E> predicate) : 1
Method number 3483 : public static Set<E> predicatedSet(final Set<E> set, final Predicate<? super E> predicate) : 1
Method number 3484 : public static SortedSet<E> predicatedSortedSet(final SortedSet<E> set, final Predicate<? super E> predicate) : 1
Method number 3485 : public static Set<E> synchronizedSet(final Set<E> set) : 1
Method number 3486 : public static SortedSet<E> synchronizedSortedSet(final SortedSet<E> set) : 1
Method number 3487 : public static SortedSet<E> transformedNavigableSet(final NavigableSet<E> set, final Transformer<? super E, ? extends E> transformer) : 1
Method number 3488 : public static Set<E> transformedSet(final Set<E> set, final Transformer<? super E, ? extends E> transformer) : 1
Method number 3489 : public static SortedSet<E> transformedSortedSet(final SortedSet<E> set, final Transformer<? super E, ? extends E> transformer) : 1
Method number 3490 : public static SetView<E> union(final Set<? extends E> setA, final Set<? extends E> setB) : 1
Method number 3491 : public static SortedSet<E> unmodifiableNavigableSet(final NavigableSet<E> set) : 1
Method number 3492 : public static Set<E> unmodifiableSet(final E... items) : 2
Method number 3493 : public static Set<E> unmodifiableSet(final Set<? extends E> set) : 1
Method number 3494 : public static SortedSet<E> unmodifiableSortedSet(final SortedSet<E> set) : 1

Classe : org.apache.commons.collections4.SetUtils.SetView
Method number 3495 : public void copyInto(final S set) : 1
Method number 3496 : protected abstract Iterator<E> createIterator() : 1
Method number 3497 : public Iterator<E> iterator() : 1
Method number 3498 : public int size() : 1
Method number 3499 : public Set<E> toSet() : 1

========================================
Fichier : SetValuedMap.java
========================================

Classe : org.apache.commons.collections4.SetValuedMap
Method number 3500 :  Set<V> get(K key) : 1
Method number 3501 :  Set<V> remove(Object key) : 1

========================================
Fichier : SortedBag.java
========================================

Classe : org.apache.commons.collections4.SortedBag
Method number 3502 :  Comparator<? super E> comparator() : 1
Method number 3503 :  E first() : 1
Method number 3504 :  E last() : 1

========================================
Fichier : SortedBidiMap.java
========================================

Classe : org.apache.commons.collections4.SortedBidiMap
Method number 3505 :  SortedBidiMap<V, K> inverseBidiMap() : 1
Method number 3506 :  Comparator<? super V> valueComparator() : 1

========================================
Fichier : splitmap\AbstractIterableGetMapDecorator.java
========================================

Classe : org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator
Method number 3507 : protected Map<K, V> decorated() : 1
Method number 3508 : public boolean containsKey(final Object key) : 1
Method number 3509 : public boolean containsValue(final Object value) : 1
Method number 3510 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 3511 : public V get(final Object key) : 1
Method number 3512 : public V remove(final Object key) : 1
Method number 3513 : public boolean isEmpty() : 1
Method number 3514 : public Set<K> keySet() : 1
Method number 3515 : public int size() : 1
Method number 3516 : public Collection<V> values() : 1
Method number 3517 : public MapIterator<K, V> mapIterator() : 1
Method number 3518 : public boolean equals(final Object object) : 2
Method number 3519 : public int hashCode() : 1
Method number 3520 : public String toString() : 1

========================================
Fichier : splitmap\package-info.java
========================================

========================================
Fichier : splitmap\TransformedSplitMap.java
========================================

Classe : org.apache.commons.collections4.splitmap.TransformedSplitMap
Method number 3521 : public static TransformedSplitMap<J, K, U, V> transformingMap(final Map<K, V> map, final Transformer<? super J, ? extends K> keyTransformer, final Transformer<? super U, ? extends V> valueTransformer) : 1
Method number 3522 : private void writeObject(final ObjectOutputStream out) throws IOException : 1
Method number 3523 : private void readObject(final ObjectInputStream in) throws IOException, ClassNotFoundException : 1
Method number 3524 : protected K transformKey(final J object) : 1
Method number 3525 : protected V transformValue(final U object) : 1
Method number 3526 : protected Map<K, V> transformMap(final Map<? extends J, ? extends U> map) : 3
Method number 3527 : protected V checkSetValue(final U value) : 1
Method number 3528 : public V put(final J key, final U value) : 1
Method number 3529 : public void putAll(final Map<? extends J, ? extends U> mapToCopy) : 1
Method number 3530 : public void clear() : 1

========================================
Fichier : SplitMapUtils.java
========================================

Classe : org.apache.commons.collections4.SplitMapUtils
Method number 3531 : public static IterableMap<K, V> readableMap(final Get<K, V> get) : 2
Method number 3532 : public static Map<K, V> writableMap(final Put<K, V> put) : 2

Classe : org.apache.commons.collections4.SplitMapUtils.WrappedGet
Method number 3533 : public void clear() : 1
Method number 3534 : public boolean containsKey(final Object key) : 1
Method number 3535 : public boolean containsValue(final Object value) : 1
Method number 3536 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 3537 : public boolean equals(final Object arg0) : 2
Method number 3538 : public V get(final Object key) : 1
Method number 3539 : public int hashCode() : 1
Method number 3540 : public boolean isEmpty() : 1
Method number 3541 : public Set<K> keySet() : 1
Method number 3542 : public V put(final K key, final V value) : 1
Method number 3543 : public void putAll(final Map<? extends K, ? extends V> t) : 1
Method number 3544 : public V remove(final Object key) : 1
Method number 3545 : public int size() : 1
Method number 3546 : public Collection<V> values() : 1
Method number 3547 : public MapIterator<K, V> mapIterator() : 2

Classe : org.apache.commons.collections4.SplitMapUtils.WrappedPut
Method number 3548 : public void clear() : 1
Method number 3549 : public boolean containsKey(final Object key) : 1
Method number 3550 : public boolean containsValue(final Object value) : 1
Method number 3551 : public Set<Map.Entry<K, V>> entrySet() : 1
Method number 3552 : public boolean equals(final Object obj) : 2
Method number 3553 : public V get(final Object key) : 1
Method number 3554 : public int hashCode() : 1
Method number 3555 : public boolean isEmpty() : 1
Method number 3556 : public Set<K> keySet() : 1
Method number 3557 : public V put(final K key, final V value) : 1
Method number 3558 : public void putAll(final Map<? extends K, ? extends V> t) : 1
Method number 3559 : public V remove(final Object key) : 1
Method number 3560 : public int size() : 1
Method number 3561 : public Collection<V> values() : 1

========================================
Fichier : Transformer.java
========================================

Classe : org.apache.commons.collections4.Transformer
Method number 3562 :  O transform(I input) : 1

========================================
Fichier : TransformerUtils.java
========================================

Classe : org.apache.commons.collections4.TransformerUtils
Method number 3563 : public static Transformer<I, O> exceptionTransformer() : 1
Method number 3564 : public static Transformer<I, O> nullTransformer() : 1
Method number 3565 : public static Transformer<T, T> nopTransformer() : 1
Method number 3566 : public static Transformer<T, T> cloneTransformer() : 1
Method number 3567 : public static Transformer<I, O> constantTransformer(final O constantToReturn) : 1
Method number 3568 : public static Transformer<T, T> asTransformer(final Closure<? super T> closure) : 1
Method number 3569 : public static Transformer<T, Boolean> asTransformer(final Predicate<? super T> predicate) : 1
Method number 3570 : public static Transformer<I, O> asTransformer(final Factory<? extends O> factory) : 1
Method number 3571 : public static Transformer<T, T> chainedTransformer(final Transformer<? super T, ? extends T>... transformers) : 1
Method number 3572 : public static Transformer<T, T> chainedTransformer(final Collection<? extends Transformer<? super T, ? extends T>> transformers) : 1
Method number 3573 : public static Transformer<T, T> ifTransformer(final Predicate<? super T> predicate, final Transformer<? super T, ? extends T> trueTransformer) : 1
Method number 3574 : public static Transformer<I, O> ifTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer) : 1
Method number 3575 : public static Transformer<I, O> switchTransformer(final Predicate<? super I> predicate, final Transformer<? super I, ? extends O> trueTransformer, final Transformer<? super I, ? extends O> falseTransformer) : 1
Method number 3576 : public static Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers) : 1
Method number 3577 : public static Transformer<I, O> switchTransformer(final Predicate<? super I>[] predicates, final Transformer<? super I, ? extends O>[] transformers, final Transformer<? super I, ? extends O> defaultTransformer) : 1
Method number 3578 : public static Transformer<I, O> switchTransformer(final Map<Predicate<I>, Transformer<I, O>> predicatesAndTransformers) : 1
Method number 3579 : public static Transformer<I, O> switchMapTransformer(final Map<I, Transformer<I, O>> objectsAndTransformers) : 2
Method number 3580 : public static Transformer<Class<? extends T>, T> instantiateTransformer() : 1
Method number 3581 : public static Transformer<Class<? extends T>, T> instantiateTransformer(final Class<?>[] paramTypes, final Object[] args) : 1
Method number 3582 : public static Transformer<I, O> mapTransformer(final Map<? super I, ? extends O> map) : 1
Method number 3583 : public static Transformer<I, O> invokerTransformer(final String methodName) : 1
Method number 3584 : public static Transformer<I, O> invokerTransformer(final String methodName, final Class<?>[] paramTypes, final Object[] args) : 1
Method number 3585 : public static Transformer<T, String> stringValueTransformer() : 1

========================================
Fichier : trie\AbstractBitwiseTrie.java
========================================

Classe : org.apache.commons.collections4.trie.AbstractBitwiseTrie
Method number 3586 : protected KeyAnalyzer<? super K> getKeyAnalyzer() : 1
Method number 3587 : public String toString() : 2
Method number 3588 :  final K castKey(final Object key) : 1
Method number 3589 :  final int lengthInBits(final K key) : 2
Method number 3590 :  final int bitsPerElement() : 1
Method number 3591 :  final boolean isBitSet(final K key, final int bitIndex, final int lengthInBits) : 2
Method number 3592 :  final int bitIndex(final K key, final K foundKey) : 1
Method number 3593 :  final boolean compareKeys(final K key, final K other) : 3
Method number 3594 :  static boolean compare(final Object a, final Object b) : 1

Classe : org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry
Method number 3595 : public V setKeyValue(final K key, final V value) : 1
Method number 3596 : public K getKey() : 1
Method number 3597 : public V getValue() : 1
Method number 3598 : public V setValue(final V value) : 1
Method number 3599 : public int hashCode() : 1
Method number 3600 : public boolean equals(final Object o) : 4
Method number 3601 : public String toString() : 1

========================================
Fichier : trie\AbstractPatriciaTrie.java
========================================

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie
Method number 3602 : public void clear() : 1
Method number 3603 : public int size() : 1
Method number 3604 :  void incrementSize() : 1
Method number 3605 :  void decrementSize() : 1
Method number 3606 : private void incrementModCount() : 1
Method number 3607 : public V put(final K key, final V value) : 10
Method number 3608 :  TrieEntry<K, V> addEntry(final TrieEntry<K, V> entry, final int lengthInBits) : 8
Method number 3609 : public V get(final Object k) : 1
Method number 3610 :  TrieEntry<K, V> getEntry(final Object k) : 2
Method number 3611 : public Map.Entry<K, V> select(final K key) : 2
Method number 3612 : public K selectKey(final K key) : 2
Method number 3613 : public V selectValue(final K key) : 2
Method number 3614 : private boolean selectR(final TrieEntry<K, V> h, final int bitIndex, final K key, final int lengthInBits, final Reference<Map.Entry<K, V>> reference) : 6
Method number 3615 : public boolean containsKey(final Object k) : 2
Method number 3616 : public Set<Map.Entry<K, V>> entrySet() : 2
Method number 3617 : public Set<K> keySet() : 2
Method number 3618 : public Collection<V> values() : 2
Method number 3619 : public V remove(final Object k) : 6
Method number 3620 :  TrieEntry<K, V> getNearestEntryForKey(final K key, final int lengthInBits) : 4
Method number 3621 :  V removeEntry(final TrieEntry<K, V> h) : 3
Method number 3622 : private void removeExternalEntry(final TrieEntry<K, V> h) : 5
Method number 3623 : private void removeInternalEntry(final TrieEntry<K, V> h) : 5
Method number 3624 :  TrieEntry<K, V> nextEntry(final TrieEntry<K, V> node) : 2
Method number 3625 :  TrieEntry<K, V> nextEntryImpl(final TrieEntry<K, V> start, final TrieEntry<K, V> previous, final TrieEntry<K, V> tree) : 15
Method number 3626 :  TrieEntry<K, V> firstEntry() : 2
Method number 3627 :  TrieEntry<K, V> followLeft(TrieEntry<K, V> node) : 4
Method number 3628 : public Comparator<? super K> comparator() : 1
Method number 3629 : public K firstKey() : 2
Method number 3630 : public K lastKey() : 2
Method number 3631 : public K nextKey(final K key) : 2
Method number 3632 : public K previousKey(final K key) : 2
Method number 3633 : public OrderedMapIterator<K, V> mapIterator() : 1
Method number 3634 : public SortedMap<K, V> prefixMap(final K key) : 1
Method number 3635 : private SortedMap<K, V> getPrefixMapByBits(final K key, final int offsetInBits, final int lengthInBits) : 3
Method number 3636 : public SortedMap<K, V> headMap(final K toKey) : 1
Method number 3637 : public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
Method number 3638 : public SortedMap<K, V> tailMap(final K fromKey) : 1
Method number 3639 :  TrieEntry<K, V> higherEntry(final K key) : 10
Method number 3640 :  TrieEntry<K, V> ceilingEntry(final K key) : 8
Method number 3641 :  TrieEntry<K, V> lowerEntry(final K key) : 6
Method number 3642 :  TrieEntry<K, V> floorEntry(final K key) : 8
Method number 3643 :  TrieEntry<K, V> subtree(final K prefix, final int offsetInBits, final int lengthInBits) : 8
Method number 3644 :  TrieEntry<K, V> lastEntry() : 1
Method number 3645 :  TrieEntry<K, V> followRight(TrieEntry<K, V> node) : 3
Method number 3646 :  TrieEntry<K, V> previousEntry(final TrieEntry<K, V> start) : 9
Method number 3647 :  TrieEntry<K, V> nextEntryInSubtree(final TrieEntry<K, V> node, final TrieEntry<K, V> parentOfSubtree) : 2
Method number 3648 :  static boolean isValidUplink(final TrieEntry<?, ?> next, final TrieEntry<?, ?> from) : 1
Method number 3649 : private void readObject(final ObjectInputStream stream) throws IOException, ClassNotFoundException : 2
Method number 3650 : private void writeObject(final ObjectOutputStream stream) throws IOException : 2

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference
Method number 3651 : public void set(final E item) : 1
Method number 3652 : public E get() : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry
Method number 3653 : public boolean isEmpty() : 1
Method number 3654 : public boolean isInternalNode() : 1
Method number 3655 : public boolean isExternalNode() : 1
Method number 3656 : public String toString() : 10

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet
Method number 3657 : public Iterator<Map.Entry<K, V>> iterator() : 1
Method number 3658 : public boolean contains(final Object o) : 2
Method number 3659 : public boolean remove(final Object obj) : 3
Method number 3660 : public int size() : 1
Method number 3661 : public void clear() : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator
Method number 3662 : public Map.Entry<K, V> next() : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet
Method number 3663 : public Iterator<K> iterator() : 1
Method number 3664 : public int size() : 1
Method number 3665 : public boolean contains(final Object o) : 1
Method number 3666 : public boolean remove(final Object o) : 1
Method number 3667 : public void clear() : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator
Method number 3668 : public K next() : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values
Method number 3669 : public Iterator<V> iterator() : 1
Method number 3670 : public int size() : 1
Method number 3671 : public boolean contains(final Object o) : 1
Method number 3672 : public void clear() : 1
Method number 3673 : public boolean remove(final Object o) : 3

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator
Method number 3674 : public V next() : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.AbstractTrieIterator
Method number 3675 : protected TrieEntry<K, V> nextEntry() : 3
Method number 3676 : protected TrieEntry<K, V> findNext(final TrieEntry<K, V> prior) : 1
Method number 3677 : public boolean hasNext() : 1
Method number 3678 : public void remove() : 3

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieMapIterator
Method number 3679 : public K next() : 1
Method number 3680 : public K getKey() : 2
Method number 3681 : public V getValue() : 2
Method number 3682 : public V setValue(final V value) : 2
Method number 3683 : public boolean hasPrevious() : 1
Method number 3684 : public K previous() : 1
Method number 3685 : protected TrieEntry<K, V> nextEntry() : 1
Method number 3686 : protected TrieEntry<K, V> previousEntry() : 3

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.AbstractRangeMap
Method number 3687 : protected abstract Set<Map.Entry<K, V>> createEntrySet() : 1
Method number 3688 : protected abstract K getFromKey() : 1
Method number 3689 : protected abstract boolean isFromInclusive() : 1
Method number 3690 : protected abstract K getToKey() : 1
Method number 3691 : protected abstract boolean isToInclusive() : 1
Method number 3692 : public Comparator<? super K> comparator() : 1
Method number 3693 : public boolean containsKey(final Object key) : 2
Method number 3694 : public V remove(final Object key) : 2
Method number 3695 : public V get(final Object key) : 2
Method number 3696 : public V put(final K key, final V value) : 2
Method number 3697 : public Set<Map.Entry<K, V>> entrySet() : 2
Method number 3698 : public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 3
Method number 3699 : public SortedMap<K, V> headMap(final K toKey) : 2
Method number 3700 : public SortedMap<K, V> tailMap(final K fromKey) : 2
Method number 3701 : protected boolean inRange(final K key) : 1
Method number 3702 : protected boolean inRange2(final K key) : 1
Method number 3703 : protected boolean inFromRange(final K key, final boolean forceInclusive) : 2
Method number 3704 : protected boolean inToRange(final K key, final boolean forceInclusive) : 2
Method number 3705 : protected abstract SortedMap<K, V> createRangeMap(K fromKey, boolean fromInclusive, K toKey, boolean toInclusive) : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap
Method number 3706 : public K firstKey() : 4
Method number 3707 : public K lastKey() : 4
Method number 3708 : protected Set<Entry<K, V>> createEntrySet() : 1
Method number 3709 : public K getFromKey() : 1
Method number 3710 : public K getToKey() : 1
Method number 3711 : public boolean isFromInclusive() : 1
Method number 3712 : public boolean isToInclusive() : 1
Method number 3713 : protected SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) : 1

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet
Method number 3714 : public Iterator<Map.Entry<K, V>> iterator() : 3
Method number 3715 : public int size() : 3
Method number 3716 : public boolean isEmpty() : 1
Method number 3717 : public boolean contains(final Object o) : 3
Method number 3718 : public boolean remove(final Object o) : 4

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntrySet.EntryIterator
Method number 3719 : public boolean hasNext() : 1
Method number 3720 : public Map.Entry<K, V> next() : 2

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeMap
Method number 3721 : private int fixup() : 6
Method number 3722 : public K firstKey() : 3
Method number 3723 : public K lastKey() : 3
Method number 3724 : protected boolean inRange(final K key) : 1
Method number 3725 : protected boolean inRange2(final K key) : 1
Method number 3726 : protected boolean inFromRange(final K key, final boolean forceInclusive) : 1
Method number 3727 : protected boolean inToRange(final K key, final boolean forceInclusive) : 1
Method number 3728 : protected Set<Map.Entry<K, V>> createEntrySet() : 1
Method number 3729 : public K getFromKey() : 1
Method number 3730 : public K getToKey() : 1
Method number 3731 : public boolean isFromInclusive() : 1
Method number 3732 : public boolean isToInclusive() : 1
Method number 3733 : protected SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) : 1
Method number 3734 : public void clear() : 3

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet
Method number 3735 : public int size() : 1
Method number 3736 : public Iterator<Map.Entry<K, V>> iterator() : 4

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet.SingletonIterator
Method number 3737 : public boolean hasNext() : 1
Method number 3738 : public Map.Entry<K, V> next() : 2
Method number 3739 : public void remove() : 2

Classe : org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet.EntryIterator
Method number 3740 : public Map.Entry<K, V> next() : 2
Method number 3741 : protected TrieEntry<K, V> findNext(final TrieEntry<K, V> prior) : 1
Method number 3742 : public void remove() : 4

========================================
Fichier : trie\analyzer\package-info.java
========================================

========================================
Fichier : trie\analyzer\StringKeyAnalyzer.java
========================================

Classe : org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer
Method number 3743 : private static int mask(final int bit) : 1
Method number 3744 : public int bitsPerElement() : 1
Method number 3745 : public int lengthInBits(final String key) : 1
Method number 3746 : public int bitIndex(final String key, final int offsetInBits, final int lengthInBits, final String other, final int otherOffsetInBits, final int otherLengthInBits) : 8
Method number 3747 : public boolean isBitSet(final String key, final int bitIndex, final int lengthInBits) : 2
Method number 3748 : public boolean isPrefix(final String prefix, final int offsetInBits, final int lengthInBits, final String key) : 2

========================================
Fichier : trie\KeyAnalyzer.java
========================================

Classe : org.apache.commons.collections4.trie.KeyAnalyzer
Method number 3749 :  static boolean isOutOfBoundsIndex(final int bitIndex) : 1
Method number 3750 :  static boolean isEqualBitKey(final int bitIndex) : 1
Method number 3751 :  static boolean isNullBitKey(final int bitIndex) : 1
Method number 3752 :  static boolean isValidBitIndex(final int bitIndex) : 1
Method number 3753 : public abstract int bitsPerElement() : 1
Method number 3754 : public abstract int lengthInBits(K key) : 1
Method number 3755 : public abstract boolean isBitSet(K key, int bitIndex, int lengthInBits) : 1
Method number 3756 : public abstract int bitIndex(K key, int offsetInBits, int lengthInBits, K other, int otherOffsetInBits, int otherLengthInBits) : 1
Method number 3757 : public abstract boolean isPrefix(K prefix, int offsetInBits, int lengthInBits, K key) : 1
Method number 3758 : public int compare(final K o1, final K o2) : 3

========================================
Fichier : trie\package-info.java
========================================

========================================
Fichier : trie\PatriciaTrie.java
========================================

Classe : org.apache.commons.collections4.trie.PatriciaTrie

========================================
Fichier : trie\UnmodifiableTrie.java
========================================

Classe : org.apache.commons.collections4.trie.UnmodifiableTrie
Method number 3759 : public static Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie) : 2
Method number 3760 : public Set<Entry<K, V>> entrySet() : 1
Method number 3761 : public Set<K> keySet() : 1
Method number 3762 : public Collection<V> values() : 1
Method number 3763 : public void clear() : 1
Method number 3764 : public boolean containsKey(final Object key) : 1
Method number 3765 : public boolean containsValue(final Object value) : 1
Method number 3766 : public V get(final Object key) : 1
Method number 3767 : public boolean isEmpty() : 1
Method number 3768 : public V put(final K key, final V value) : 1
Method number 3769 : public void putAll(final Map<? extends K, ? extends V> m) : 1
Method number 3770 : public V remove(final Object key) : 1
Method number 3771 : public int size() : 1
Method number 3772 : public K firstKey() : 1
Method number 3773 : public SortedMap<K, V> headMap(final K toKey) : 1
Method number 3774 : public K lastKey() : 1
Method number 3775 : public SortedMap<K, V> subMap(final K fromKey, final K toKey) : 1
Method number 3776 : public SortedMap<K, V> tailMap(final K fromKey) : 1
Method number 3777 : public SortedMap<K, V> prefixMap(final K key) : 1
Method number 3778 : public Comparator<? super K> comparator() : 1
Method number 3779 : public OrderedMapIterator<K, V> mapIterator() : 1
Method number 3780 : public K nextKey(final K key) : 1
Method number 3781 : public K previousKey(final K key) : 1
Method number 3782 : public int hashCode() : 1
Method number 3783 : public boolean equals(final Object obj) : 1
Method number 3784 : public String toString() : 1

========================================
Fichier : Trie.java
========================================

Classe : org.apache.commons.collections4.Trie
Method number 3785 :  SortedMap<K, V> prefixMap(K key) : 1

========================================
Fichier : TrieUtils.java
========================================

Classe : org.apache.commons.collections4.TrieUtils
Method number 3786 : public static Trie<K, V> unmodifiableTrie(final Trie<K, ? extends V> trie) : 1

========================================
Fichier : Unmodifiable.java
========================================

Classe : org.apache.commons.collections4.Unmodifiable
